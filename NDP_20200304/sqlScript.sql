create or replace PROCEDURE "UPDATE_ALL_SMS_RATES" 
AS
    CURSOR RUNNING_CAMPAIGN_IDS IS
        SELECT CAMPAIGN_ID from ADM_CAMPAIGNS WHERE STATUS IN(10,11);--RUNNING, ENQUEUED
        
    AVERAGE_RATE_PERIOD NUMBER;

    V_EXCEPTION_MESSAGE      VARCHAR2 (4000);
        CAMP_IS_OPEN_ENDED            NUMBER;
BEGIN
    SELECT CAST(VALUE as NUMBER) INTO  AVERAGE_RATE_PERIOD 
    from ADM_SYSTEM_PROPERTIES 
    WHERE GROUP_NAME = 'CAMPAIGN_STATS' 
        AND KEY = 'AVERAGE_RATE_CALC_PERIOD';

    FOR CAMP_ID IN RUNNING_CAMPAIGN_IDS
    LOOP
        BEGIN    
            UPDATE_CAMPAIGN_SMS_RATE(CAMP_ID.CAMPAIGN_ID,AVERAGE_RATE_PERIOD);
            
            SELECT IS_OPEN_ENDED INTO CAMP_IS_OPEN_ENDED FROM ADM_CAMPAIGNS WHERE CAMPAIGN_ID = CAMP_ID.CAMPAIGN_ID;              
            IF  CAMP_IS_OPEN_ENDED = 1 THEN
                UPDATE H_CAMPAIGN_STATISTICS
                SET TOTAL_COUNT = (SELECT COUNT(1) FROM B2B_OTF_DIAL_INFO WHERE CAMPAIGN_ID = CAMP_ID.CAMPAIGN_ID)
                WHERE CAMPAIGN_ID = CAMP_ID.CAMPAIGN_ID;
            END IF;
        EXCEPTION
            WHEN OTHERS
            THEN
                LOG_SP_EXCEPTION('UPDATE_CAMPAIGN_SMS_RATES', SQLCODE, SQLERRM);
                V_EXCEPTION_MESSAGE := SQLERRM ();
                DBMS_OUTPUT.PUT_LINE (
                    'Exception =>' || V_EXCEPTION_MESSAGE);
                RAISE;
                NULL;
        END;
    END LOOP;

    COMMIT;

END;