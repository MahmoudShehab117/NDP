{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/account/account.module.ts","webpack:///./src/app/account/account.service.ts","webpack:///./src/app/account/add-edit-users-accounts/add-edit-users-accounts.component.css","webpack:///./src/app/account/add-edit-users-accounts/add-edit-users-accounts.component.html","webpack:///./src/app/account/add-edit-users-accounts/add-edit-users-accounts.component.ts","webpack:///./src/app/account/add-edit/add-edit.component.css","webpack:///./src/app/account/add-edit/add-edit.component.html","webpack:///./src/app/account/add-edit/add-edit.component.ts","webpack:///./src/app/account/change-password/change-password.component.css","webpack:///./src/app/account/change-password/change-password.component.html","webpack:///./src/app/account/change-password/change-password.component.ts","webpack:///./src/app/account/list/list.component.css","webpack:///./src/app/account/list/list.component.html","webpack:///./src/app/account/list/list.component.ts","webpack:///./src/app/account/signup-requests/signup-requests.component.css","webpack:///./src/app/account/signup-requests/signup-requests.component.html","webpack:///./src/app/account/signup-requests/signup-requests.component.ts","webpack:///./src/app/account/users-accounts-list/users-accounts-list.component.css","webpack:///./src/app/account/users-accounts-list/users-accounts-list.component.html","webpack:///./src/app/account/users-accounts-list/users-accounts-list.component.ts","webpack:///./src/app/app-profiles/app-profiles-add-edit/app-profiles-add-edit.component.css","webpack:///./src/app/app-profiles/app-profiles-add-edit/app-profiles-add-edit.component.html","webpack:///./src/app/app-profiles/app-profiles-add-edit/app-profiles-add-edit.component.ts","webpack:///./src/app/app-profiles/app-profiles-list/app-profiles-list.component.css","webpack:///./src/app/app-profiles/app-profiles-list/app-profiles-list.component.html","webpack:///./src/app/app-profiles/app-profiles-list/app-profiles-list.component.ts","webpack:///./src/app/app-profiles/app-profiles.module.ts","webpack:///./src/app/app-profiles/app-profiles.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/campaigns/add-edit-campaign/add-edit-campaign.component.css","webpack:///./src/app/campaigns/add-edit-campaign/add-edit-campaign.component.html","webpack:///./src/app/campaigns/add-edit-campaign/add-edit-campaign.component.ts","webpack:///./src/app/campaigns/campaign-details/campaign-details.component.css","webpack:///./src/app/campaigns/campaign-details/campaign-details.component.html","webpack:///./src/app/campaigns/campaign-details/campaign-details.component.ts","webpack:///./src/app/campaigns/campaign-list/campaign-list.component.css","webpack:///./src/app/campaigns/campaign-list/campaign-list.component.html","webpack:///./src/app/campaigns/campaign-list/campaign-list.component.ts","webpack:///./src/app/campaigns/campaign-progress/campaign-progress.component.css","webpack:///./src/app/campaigns/campaign-progress/campaign-progress.component.html","webpack:///./src/app/campaigns/campaign-progress/campaign-progress.component.ts","webpack:///./src/app/campaigns/campaign-stats/campaign-stats.component.css","webpack:///./src/app/campaigns/campaign-stats/campaign-stats.component.html","webpack:///./src/app/campaigns/campaign-stats/campaign-stats.component.ts","webpack:///./src/app/campaigns/campaign.service.ts","webpack:///./src/app/campaigns/campaigns.module.ts","webpack:///./src/app/campaigns/test-sms/test-sms.component.css","webpack:///./src/app/campaigns/test-sms/test-sms.component.html","webpack:///./src/app/campaigns/test-sms/test-sms.component.ts","webpack:///./src/app/entity/entity-add-edit/entity-add-edit.component.css","webpack:///./src/app/entity/entity-add-edit/entity-add-edit.component.html","webpack:///./src/app/entity/entity-add-edit/entity-add-edit.component.ts","webpack:///./src/app/entity/entity-list/entity-list.component.css","webpack:///./src/app/entity/entity-list/entity-list.component.html","webpack:///./src/app/entity/entity-list/entity-list.component.ts","webpack:///./src/app/entity/entity-service.service.ts","webpack:///./src/app/entity/entity-view/entity-view.component.css","webpack:///./src/app/entity/entity-view/entity-view.component.html","webpack:///./src/app/entity/entity-view/entity-view.component.ts","webpack:///./src/app/entity/entity.module.ts","webpack:///./src/app/general/footer/footer.component.css","webpack:///./src/app/general/footer/footer.component.html","webpack:///./src/app/general/footer/footer.component.ts","webpack:///./src/app/general/general.module.ts","webpack:///./src/app/general/header/header.component.css","webpack:///./src/app/general/header/header.component.html","webpack:///./src/app/general/header/header.component.ts","webpack:///./src/app/general/ndp-message/ndp-message.component.css","webpack:///./src/app/general/ndp-message/ndp-message.component.html","webpack:///./src/app/general/ndp-message/ndp-message.component.ts","webpack:///./src/app/general/not-authorized/not-authorized.component.css","webpack:///./src/app/general/not-authorized/not-authorized.component.html","webpack:///./src/app/general/not-authorized/not-authorized.component.ts","webpack:///./src/app/general/sidebar/sidebar.component.css","webpack:///./src/app/general/sidebar/sidebar.component.html","webpack:///./src/app/general/sidebar/sidebar.component.ts","webpack:///./src/app/group/add-edit-group/add-edit-group.component.css","webpack:///./src/app/group/add-edit-group/add-edit-group.component.html","webpack:///./src/app/group/add-edit-group/add-edit-group.component.ts","webpack:///./src/app/group/group-list/group-list.component.css","webpack:///./src/app/group/group-list/group-list.component.html","webpack:///./src/app/group/group-list/group-list.component.ts","webpack:///./src/app/group/group.module.ts","webpack:///./src/app/group/group.service.ts","webpack:///./src/app/home/home-page/home-page.component.css","webpack:///./src/app/home/home-page/home-page.component.html","webpack:///./src/app/home/home-page/home-page.component.ts","webpack:///./src/app/home/home.module.ts","webpack:///./src/app/login/forget-password/forget-password.component.css","webpack:///./src/app/login/forget-password/forget-password.component.html","webpack:///./src/app/login/forget-password/forget-password.component.ts","webpack:///./src/app/login/login-service.service.ts","webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/login/login.component.css","webpack:///./src/app/login/login/login.component.html","webpack:///./src/app/login/login/login.component.ts","webpack:///./src/app/login/reset-expiry-password/reset-expiry-password.component.css","webpack:///./src/app/login/reset-expiry-password/reset-expiry-password.component.html","webpack:///./src/app/login/reset-expiry-password/reset-expiry-password.component.ts","webpack:///./src/app/login/reset-password/reset-password.component.css","webpack:///./src/app/login/reset-password/reset-password.component.html","webpack:///./src/app/login/reset-password/reset-password.component.ts","webpack:///./src/app/ndprouting/ndprouting.module.ts","webpack:///./src/app/ndpspinner/ndp-spinner.service.ts","webpack:///./src/app/ndpspinner/ndp-spinner/ndp-spinner.component.css","webpack:///./src/app/ndpspinner/ndp-spinner/ndp-spinner.component.html","webpack:///./src/app/ndpspinner/ndp-spinner/ndp-spinner.component.ts","webpack:///./src/app/ndpspinner/ndpspinner.module.ts","webpack:///./src/app/reports/report-page/report-page.component.css","webpack:///./src/app/reports/report-page/report-page.component.html","webpack:///./src/app/reports/report-page/report-page.component.ts","webpack:///./src/app/reports/reports.module.ts","webpack:///./src/app/reports/reports.service.ts","webpack:///./src/app/roles/add-edit-role/add-edit-role.component.css","webpack:///./src/app/roles/add-edit-role/add-edit-role.component.html","webpack:///./src/app/roles/add-edit-role/add-edit-role.component.ts","webpack:///./src/app/roles/add-edit/add-edit.component.css","webpack:///./src/app/roles/add-edit/add-edit.component.html","webpack:///./src/app/roles/add-edit/add-edit.component.ts","webpack:///./src/app/roles/role-list/role-list.component.css","webpack:///./src/app/roles/role-list/role-list.component.html","webpack:///./src/app/roles/role-list/role-list.component.ts","webpack:///./src/app/roles/role-manager.service.ts","webpack:///./src/app/roles/role-manager/role-manager.component.css","webpack:///./src/app/roles/role-manager/role-manager.component.html","webpack:///./src/app/roles/role-manager/role-manager.component.ts","webpack:///./src/app/roles/roles.module.ts","webpack:///./src/app/shared/Pipes/appprofile-appprofilename-filter.pipe.ts","webpack:///./src/app/shared/Pipes/campaign-date-filter.pipe.ts","webpack:///./src/app/shared/Pipes/campaign-entity-filter.pipe.ts","webpack:///./src/app/shared/Pipes/campaign-name-filter.pipe.ts","webpack:///./src/app/shared/Pipes/campaign-status-filter.pipe.ts","webpack:///./src/app/shared/Pipes/entity-entityname-filter.pipe.ts","webpack:///./src/app/shared/Pipes/entity-status-filter.pipe.ts","webpack:///./src/app/shared/Pipes/entity-type-filter.pipe.ts","webpack:///./src/app/shared/Pipes/group-filter.pipe.ts","webpack:///./src/app/shared/Pipes/role-label-filter.pipe.ts","webpack:///./src/app/shared/Pipes/smsc-filter.pipe.ts","webpack:///./src/app/shared/Pipes/smstemplate-titletext-filter.pipe.ts","webpack:///./src/app/shared/Pipes/users-activedirectory-filter.pipe.ts","webpack:///./src/app/shared/Pipes/users-businessentity-filter.pipe.ts","webpack:///./src/app/shared/Pipes/users-status-filter.pipe.ts","webpack:///./src/app/shared/Pipes/users-username-filter.pipe.ts","webpack:///./src/app/shared/directives/active-link.directive.ts","webpack:///./src/app/shared/directives/app-hover.directive.ts","webpack:///./src/app/shared/directives/ndp-authorize.directive.ts","webpack:///./src/app/shared/directives/ndp-button.directive.ts","webpack:///./src/app/shared/directives/required.directive.ts","webpack:///./src/app/shared/directives/special-characters.directive.ts","webpack:///./src/app/shared/interceptors/auth-interceptor.ts","webpack:///./src/app/shared/interceptors/loading-interceptor.ts","webpack:///./src/app/shared/interceptors/message-interceptor.ts","webpack:///./src/app/shared/models/ReportRequestModel.ts","webpack:///./src/app/shared/models/admin-view-user-model.ts","webpack:///./src/app/shared/models/api-request.ts","webpack:///./src/app/shared/models/api-response.ts","webpack:///./src/app/shared/models/app-profile-model.ts","webpack:///./src/app/shared/models/auth-token.ts","webpack:///./src/app/shared/models/authorization-request-model.ts","webpack:///./src/app/shared/models/campaign-model.ts","webpack:///./src/app/shared/models/campaign-request-model.ts","webpack:///./src/app/shared/models/entity-model.ts","webpack:///./src/app/shared/models/fake-sender-model.ts","webpack:///./src/app/shared/models/file-model.ts","webpack:///./src/app/shared/models/group-model.ts","webpack:///./src/app/shared/models/group-msisdn-model.ts","webpack:///./src/app/shared/models/lk-group.ts","webpack:///./src/app/shared/models/login-request.ts","webpack:///./src/app/shared/models/reset-password-model.ts","webpack:///./src/app/shared/models/role-model.ts","webpack:///./src/app/shared/models/role-privilege-model.ts","webpack:///./src/app/shared/models/smsc-account-model.ts","webpack:///./src/app/shared/models/test-sms-model.ts","webpack:///./src/app/shared/models/user-model.ts","webpack:///./src/app/shared/services/animation.service.ts","webpack:///./src/app/shared/services/authorization.service.ts","webpack:///./src/app/shared/services/base-service.ts","webpack:///./src/app/shared/services/lookups.service.ts","webpack:///./src/app/shared/services/ndp-message.service.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/static/defines.ts","webpack:///./src/app/sign-up/register/register.component.css","webpack:///./src/app/sign-up/register/register.component.html","webpack:///./src/app/sign-up/register/register.component.ts","webpack:///./src/app/sign-up/sign-up.service.ts","webpack:///./src/app/sign-up/signup/signup.module.ts","webpack:///./src/app/sms-templates/add-edit-sms/add-edit-sms.component.css","webpack:///./src/app/sms-templates/add-edit-sms/add-edit-sms.component.html","webpack:///./src/app/sms-templates/add-edit-sms/add-edit-sms.component.ts","webpack:///./src/app/sms-templates/sms-template-list/sms-template-list.component.css","webpack:///./src/app/sms-templates/sms-template-list/sms-template-list.component.html","webpack:///./src/app/sms-templates/sms-template-list/sms-template-list.component.ts","webpack:///./src/app/sms-templates/sms-templates.module.ts","webpack:///./src/app/sms-templates/sms-templates.service.ts","webpack:///./src/app/smsc/add-edit-smsc/add-edit-smsc.component.css","webpack:///./src/app/smsc/add-edit-smsc/add-edit-smsc.component.html","webpack:///./src/app/smsc/add-edit-smsc/add-edit-smsc.component.ts","webpack:///./src/app/smsc/smsc-list/smsc-list.component.css","webpack:///./src/app/smsc/smsc-list/smsc-list.component.html","webpack:///./src/app/smsc/smsc-list/smsc-list.component.ts","webpack:///./src/app/smsc/smsc.module.ts","webpack:///./src/app/smsc/smsc.service.ts","webpack:///./src/environments/environment.dev.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AccountEditComponent } from './add-edit/add-edit.component';\r\nimport { AccountListComponent } from './list/list.component';\r\nimport { FormsModule ,ReactiveFormsModule } from '@angular/forms';\r\nimport { ChangePasswordComponent } from './change-password/change-password.component';\r\nimport { UsersAccountsListComponent } from './users-accounts-list/users-accounts-list.component';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\nimport { OrderModule } from 'ngx-order-pipe';\r\nimport { AddEditUsersAccountsComponent } from './add-edit-users-accounts/add-edit-users-accounts.component';\r\nimport { SignupRequestsComponent } from './signup-requests/signup-requests.component';\r\nimport { UsersUsernameFilter } from '../shared/Pipes/users-username-filter.pipe';\r\nimport { UsersStatusFilter } from '../shared/Pipes/users-status-filter.pipe';\r\nimport { UsersActiveDirectoryFilter } from '../shared/Pipes/users-activedirectory-filter.pipe';\r\nimport { UsersEntityFilter } from '../shared/Pipes/users-businessentity-filter.pipe';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport {DropdownModule} from 'primeng/dropdown';\r\n@NgModule({\r\n  declarations: [AccountEditComponent, AccountListComponent, ChangePasswordComponent, UsersAccountsListComponent, AddEditUsersAccountsComponent, SignupRequestsComponent,UsersUsernameFilter,UsersStatusFilter,UsersActiveDirectoryFilter,UsersEntityFilter],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgxPaginationModule,\r\n    Ng2SearchPipeModule,\r\n    OrderModule,\r\n    SharedModule,DropdownModule\r\n  ]\r\n})\r\nexport class AccountModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { BaseService } from '../shared/services/base-service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ApiResponse } from '../shared/models/api-response';\r\nimport { User } from '../shared/models/user-model';\r\nimport { Defines } from '../shared/static/defines';\r\nimport { ApiRequest } from '../shared/models/api-request';\r\nimport { AdminViewUser } from '../shared/models/admin-view-user-model';\r\nimport { EntityModel } from '../shared/models/entity-model';\r\nimport { RoleModel } from '../shared/models/role-model';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccountService extends BaseService {\r\n\r\n  isSignupApproval: boolean;\r\n\r\n  constructor(private client: HttpClient) {\r\n    super(client);\r\n  }\r\n  initAuthorizationUrl() {\r\n    this.authorizationUrl += this.secureApi + Defines.API_ENDPOINTS.USER;\r\n    console.log(\"Authorization Url =>\", this.authorizationUrl);\r\n}\r\n  // public getUser(): Observable<ApiResponse<User>> {\r\n  //   let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.USER + Defines.API_ENDPOINTS.GET;\r\n  //   console.log(\"ajskdjklasjdkjaksjdkllajskdjlkajsdjksjakldjklajskldjaksjdj  \\n\\n\\n\\n\\n\"+apiUrl);\r\n  //   let obs: Observable<any> = this.http.post<ApiResponse<User>>\r\n  //     (apiUrl, new ApiRequest(null, \"\"), this.httpOptions);\r\n  //   return obs;\r\n  // }\r\n  public listUsersAccounts(): Observable<ApiResponse<Array<AdminViewUser>>> {\r\n    let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.USER + Defines.API_ENDPOINTS.LIST;\r\n    let obs: Observable<any> = this.http.post<ApiResponse<Array<AdminViewUser>>>\r\n      (apiUrl, new ApiRequest(null, \"\"), this.httpOptions);\r\n    // .pipe(map((apiResponse: any) => new ApiResponse()));\r\n    return obs;\r\n  }\r\n\r\n\r\n  public listLdapUsers(): Observable<ApiResponse<Array<string>>> {\r\n    let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.USER + Defines.API_ENDPOINTS.LIST_LDAP;\r\n    let obs: Observable<any> = this.http.post<ApiResponse<Array<string>>>\r\n      (apiUrl, new ApiRequest(null, \"\"), this.httpOptions);\r\n    // .pipe(map((apiResponse: any) => new ApiResponse()));\r\n    return obs;\r\n  }\r\n\r\n\r\n  public getUser(): Observable<ApiResponse<User>> {\r\n    let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.USER + Defines.API_ENDPOINTS.GET;\r\n    let obs: Observable<any> = this.http.post<ApiResponse<User>>\r\n      (apiUrl, new ApiRequest(null, \"\"), this.httpOptions);\r\n    // .pipe(map((apiResponse: any) => new ApiResponse()));\r\n    return obs;\r\n  }\r\n\r\n  public deleteUser(id: number): Observable<ApiResponse<number>> {\r\n    console.log(\"delete user event starrted ---------\");\r\n    debugger;\r\n    let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.USER + Defines.API_ENDPOINTS.DELETE;\r\n    let obs: Observable<any> = this.http.post<ApiResponse<number>>\r\n      (apiUrl, new ApiRequest(id, \"\"), this.httpOptions);\r\n    // .pipe(map((apiResponse: any) => new ApiResponse()));\r\n    return obs;\r\n  }\r\n  public getUserById(id: number): Observable<ApiResponse<AdminViewUser>> {\r\n    let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.USER + Defines.API_ENDPOINTS.GET;\r\n    let obs: Observable<any> = this.http.post<ApiResponse<AdminViewUser>>\r\n      (apiUrl, new ApiRequest(id, \"\"), this.httpOptions);\r\n    // .pipe(map((apiResponse: any) => new ApiResponse()));\r\n    return obs;\r\n  }\r\n\r\n  public createUser(user: AdminViewUser): Observable<ApiResponse<number>> {\r\n    let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.USER + Defines.API_ENDPOINTS.CREATE;\r\n    let obs: Observable<any> = this.http.post<ApiResponse<number>>\r\n      (apiUrl, new ApiRequest(user, \"\"), this.httpOptions);\r\n    // .pipe(map((apiResponse: any) => new ApiResponse()));\r\n    return obs;\r\n  }\r\n  public updateUser(user: AdminViewUser): Observable<ApiResponse<number>> {\r\n    let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.USER + Defines.API_ENDPOINTS.UPDATE;\r\n    let obs: Observable<any> = this.http.post<ApiResponse<number>>\r\n      (apiUrl, new ApiRequest(user, \"\"), this.httpOptions);\r\n    // .pipe(map((apiResponse: any) => new ApiResponse()));\r\n    return obs;\r\n  }\r\n\r\n  public saveUser(user: User): Observable<ApiResponse<number>> {\r\n    let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.USER + Defines.API_ENDPOINTS.UPDATE;\r\n    let obs: Observable<any> = this.http.post<ApiResponse<number>>\r\n      (apiUrl, new ApiRequest(user, \"\"), this.httpOptions);\r\n    // .pipe(map((apiResponse: any) => new ApiResponse()));\r\n    return obs;\r\n  }\r\n\r\n  public saveMyProfile(user: User): Observable<ApiResponse<number>> {\r\n    let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.MY_PROFILE + Defines.API_ENDPOINTS.UPDATE;\r\n    let obs: Observable<any> = this.http.post<ApiResponse<number>>\r\n      (apiUrl, new ApiRequest(user, \"\"), this.httpOptions);\r\n    // .pipe(map((apiResponse: any) => new ApiResponse()));\r\n    return obs;\r\n  }\r\n\r\n  public savePassword(password: string): Observable<ApiResponse<number>> {\r\n    let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.USER + Defines.API_ENDPOINTS.UPDATE_PASSWORD;\r\n\r\n    let obs: Observable<any> = this.http.post<ApiResponse<number>>\r\n      (apiUrl, new ApiRequest(password, \"\"), this.httpOptions);\r\n    return obs;\r\n  }\r\n\r\n  public getAllEntities(): Observable<ApiResponse<Array<EntityModel>>> {\r\n\r\n    let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.entity + Defines.API_ENDPOINTS.LIST;\r\n    let obs: Observable<any> = this.http.post<ApiResponse<Array<EntityModel>>>\r\n      (apiUrl, new ApiRequest(null, \"\"), this.httpOptions);\r\n\r\n    return obs;\r\n  }\r\n  public getAllRoles(): Observable<ApiResponse<Array<RoleModel>>> {\r\n    let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.list;\r\n    let obs: Observable<any> = this.http.post<ApiResponse<Array<RoleModel>>>\r\n      (apiUrl, new ApiRequest(null, \"\"), this.httpOptions);\r\n    // .pipe(map((apiResponse: any) => new ApiResponse()));\r\n    return obs;\r\n  }\r\n\r\n  public validateEmail(email: string): boolean {\r\n    return email.match(\"^[A-z0-9._%+-]+@[A-z0-9.-]+\\\\.[A-z]{2,6}$\").length > 0;\r\n  }\r\n\r\n  public validateMsisdn(msisdn: string): boolean {\r\n    return msisdn.match(\"[+]?[0][1][1|0|2|5][0-9]{8}\").length > 0;\r\n  }\r\n\r\n  public validatePasswords(newPassword: string, newPasswordConfirm: string) {\r\n    return newPassword != null && newPassword.length > 3;\r\n  }\r\n\r\n  public validateName(name:string){\r\n    return name != null && name.match(\"[A-z]+\").length > 0;\r\n  }\r\n\r\n  public validateUsername(username:string){\r\n    return username != null && username.match(\"[A-z]+\").length > 0;\r\n  }\r\n\r\n  public validateBoolean(boolean:boolean){\r\n    return boolean == true || boolean == false;\r\n  }\r\n\r\n  public getSignUpRequests() {\r\n    let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.USER + Defines.API_ENDPOINTS.signupRequests;\r\n    let obs: Observable<any> = this.http.post<ApiResponse<Array<AdminViewUser>>>\r\n      (apiUrl, new ApiRequest(null, \"\"), this.httpOptions);\r\n    return obs;\r\n  }\r\n\r\n  public approveUser(user) {\r\n    let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.USER + Defines.API_ENDPOINTS.approve;\r\n    let obs: Observable<any> = this.http.post<ApiResponse<Array<AdminViewUser>>>\r\n      (apiUrl, new ApiRequest(user, \"\"), this.httpOptions);\r\n    return obs;\r\n  }\r\n\r\n  public markFormGroupTouched(formGroup: FormGroup) {\r\n    (<any>Object).values(formGroup.controls).forEach(control => {\r\n      control.markAsTouched();\r\n\r\n      if (control.controls) {\r\n        this.markFormGroupTouched(control);\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvYWRkLWVkaXQtdXNlcnMtYWNjb3VudHMvYWRkLWVkaXQtdXNlcnMtYWNjb3VudHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"page-content \\\">\\r\\n    <div class=\\\"row no-gutters\\\">\\r\\n        <div class=\\\"col-6\\\">\\r\\n            <div class=\\\"page-title\\\">\\r\\n                Users Accounts\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"section\\\" *ngIf=\\\"tempUser != null\\\">\\r\\n        <div class=\\\"row mt-2\\\">\\r\\n            <div *ngIf=\\\"isEditMode() && signUpApproval\\\" class=\\\"col-10 text-left section-title\\\">Approve Account</div>\\r\\n            <div *ngIf=\\\"isEditMode() && !signUpApproval\\\" class=\\\"col-10 text-left section-title\\\">Edit Account</div>\\r\\n            <div *ngIf=\\\"!isEditMode() && !signUpApproval\\\" class=\\\"col-10 text-left section-title\\\">Add Account</div>\\r\\n            <div class=\\\"col-2\\\">\\r\\n                <label style=\\\"font-size: 16px; font-family:'robotomedium'; color: #464852;\\\"\\r\\n                    class=\\\"mr-1\\\">{{tempUser.isActive ? 'Active' : 'Inactive'}}</label>\\r\\n                <label class=\\\"switch\\\" for=\\\"isActiveCheck\\\">\\r\\n                    <input [(ngModel)]=\\\"tempUser.isActive\\\" class=\\\"checkbox\\\" type=\\\"checkbox\\\" id=\\\"isActiveCheck\\\" />\\r\\n                    <span class=\\\"slider\\\"></span>\\r\\n                </label>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"userForm\\\" class=\\\"form-input\\\">\\r\\n            <form [formGroup]=\\\"userForm\\\">\\r\\n                <div class=\\\"row mt-4 pl-4\\\">\\r\\n                    <div class=\\\"col-3 pt-4 custom-checkbox\\\">\\r\\n                        <input formControlName=\\\"isLdapUser\\\" class=\\\"custom-control-input\\\" type=\\\"checkbox\\\"\\r\\n                            id=\\\"activeCheck\\\" (click)=\\\"clearUserNameControl()\\\" />\\r\\n                        <label class=\\\"custom-control-label\\\" for=\\\"activeCheck\\\">Active Directory User</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-4 text-left form-selectbox\\\">\\r\\n                        <label class=\\\"form-input-label\\\">Username</label>\\r\\n                        <input *ngIf=\\\"!isEditMode() && !uf.isLdapUser.value\\\" class=\\\"input\\\"\\r\\n                            [ngClass]=\\\"{ 'invalid-input': uf.userName.errors && (uf.userName.touched || uf.userName.dirty) }\\\"\\r\\n                            formControlName=\\\"userName\\\" />\\r\\n                        <input *ngIf=\\\"isEditMode()\\\" class=\\\"input\\\"\\r\\n                            [ngClass]=\\\"{ 'invalid-input': uf.userName.errors && (uf.userName.touched || uf.userName.dirty) }\\\"\\r\\n                            formControlName=\\\"userName\\\" readonly />\\r\\n\\r\\n                            <div *ngIf=\\\"!isEditMode() && uf.isLdapUser.value && activeDirectoryUsers != null\\\">\\r\\n                                <p-dropdown [options]=\\\"activeDirectoryUsersSelectItems\\\" placeholder=\\\"Select User\\\"\\r\\n                                formControlName=\\\"userName\\\" [virtualScroll]=\\\"true\\\" [(ngModel)]=\\\"tempUser.userName\\\" itemSize=\\\"40\\\" [filter]=\\\"true\\\"></p-dropdown>\\r\\n                            <!-- <select formControlName=\\\"userName\\\" class=\\\"selectbox\\\" [ngClass]=\\\"{ 'invalid-input': uf.userName.errors && (uf.userName.touched || uf.userName.dirty) }\\\">\\r\\n                                <option *ngFor=\\\"let activeDirectoryUser of activeDirectoryUsers\\\"\\r\\n                                    value=\\\"{{activeDirectoryUser}}\\\">\\r\\n                                    {{activeDirectoryUser}}</option>\\r\\n                            </select> -->\\r\\n                            \\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"uf.userName.errors && (uf.userName.touched || uf.userName.dirty)\\\">\\r\\n                            <div *ngIf=\\\"uf.userName.errors.required\\\" class=\\\"invalid-text\\\">Username is required</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div *ngIf=\\\"!signUpApproval && isEditMode() && !uf.isLdapUser.value\\\" class=\\\"col-4 text-left \\\">\\r\\n                        <label class=\\\"form-input-label\\\">Password</label>\\r\\n                        <input class=\\\"input\\\" type=\\\"password\\\"\\r\\n                            [ngClass]=\\\"{'invalid-input': uf.password.errors && (uf.password.touched || uf.password.dirty) }\\\"\\r\\n                            formControlName=\\\"password\\\" />\\r\\n                        <div *ngIf=\\\"uf.password.errors && (uf.password.touched || uf.password.dirty)\\\">\\r\\n                            <div *ngIf=\\\"uf.password.errors.pattern\\\" class=\\\"invalid-text\\\">New password should be a\\r\\n                                minimum of 7 letters and 1 character</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"row mt-4\\\">\\r\\n                    <div class=\\\"col-3\\\">\\r\\n                        <div class=\\\"form-input form-selectbox\\\">\\r\\n                            <label class=\\\"form-input-label\\\">Business Entity</label>\\r\\n                            <select formControlName=\\\"entityId\\\" class=\\\"selectbox\\\"\\r\\n                                [ngClass]=\\\"{ 'invalid-input': uf.entityId.errors && (uf.entityId.touched || uf.entityId.dirty) }\\\"\\r\\n                                (change)=\\\"setTempUserBusinessEntity($event.target.value)\\\">\\r\\n                                <option *ngFor=\\\"let businessEntity of listBusinessEntities()\\\"\\r\\n                                    value=\\\"{{businessEntity.entityId}}\\\">\\r\\n                                    {{businessEntity.entityName}}</option>\\r\\n                            </select>\\r\\n                            <div class=\\\"form-selectbox-icon\\\"></div>\\r\\n                            <div *ngIf=\\\"uf.entityId.errors && (uf.entityId.touched || uf.entityId.dirty)\\\">\\r\\n                                <div *ngIf=\\\"uf.entityId.errors.required\\\" class=\\\"invalid-text\\\">Select a Business Entity\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row mt-4\\\">\\r\\n\\r\\n                    <div class=\\\"col-3 text-left \\\">\\r\\n                        <label class=\\\"form-input-label\\\">First Name</label>\\r\\n                        <input class=\\\"input\\\"\\r\\n                            [ngClass]=\\\"{ 'invalid-input': uf.fName.errors && (uf.fName.touched || uf.fName.dirty) }\\\"\\r\\n                            formControlName=\\\"fName\\\" />\\r\\n                        <div *ngIf=\\\"uf.fName.errors && (uf.fName.touched || uf.fName.dirty)\\\">\\r\\n                            <div *ngIf=\\\"uf.fName.errors.required\\\" class=\\\"invalid-text\\\">First name is required</div>\\r\\n                            <div *ngIf=\\\"!uf.fName.errors.required && uf.fName.errors.minlength\\\" class=\\\"invalid-text\\\">\\r\\n                                First name can't be less than 2 characters</div>\\r\\n                            <div *ngIf=\\\"!uf.fName.errors.required && !uf.fName.errors.minlength && uf.fName.errors.pattern\\\"\\r\\n                                class=\\\"invalid-text\\\">Invalid First Name</div>\\r\\n                            <div *ngIf=\\\"uf.fName.errors.maxlength\\\" class=\\\"invalid-text\\\">First name can't be more than 25\\r\\n                                characters\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-3 text-left \\\">\\r\\n                        <label class=\\\"form-input-label\\\">Last Name</label>\\r\\n                        <input class=\\\"input\\\"\\r\\n                            [ngClass]=\\\"{ 'invalid-input': uf.lName.errors && (uf.lName.touched || uf.lName.dirty) }\\\"\\r\\n                            formControlName=\\\"lName\\\" />\\r\\n                        <div *ngIf=\\\"uf.lName.errors && (uf.lName.touched || uf.lName.dirty)\\\">\\r\\n                            <div *ngIf=\\\"uf.lName.errors.required\\\" class=\\\"invalid-text\\\">Last name is required</div>\\r\\n                            <div *ngIf=\\\"!uf.lName.errors.required && uf.lName.errors.minlength\\\" class=\\\"invalid-text\\\">\\r\\n                                Last name can't be less than 2 characters</div>\\r\\n                            <div *ngIf=\\\"!uf.lName.errors.required && !uf.lName.errors.minlength && uf.lName.errors.pattern\\\"\\r\\n                                class=\\\"invalid-text\\\">Invalid Last Name</div>\\r\\n                            <div *ngIf=\\\"uf.lName.errors.maxlength\\\" class=\\\"invalid-text\\\">Last name can't be more than 25\\r\\n                                characters\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-3 text-left \\\">\\r\\n                        <label class=\\\"form-input-label\\\">Address</label>\\r\\n                        <input class=\\\"input\\\"\\r\\n                            [ngClass]=\\\"{ 'invalid-input': uf.address.errors && (uf.address.touched || uf.address.dirty) }\\\"\\r\\n                            formControlName=\\\"address\\\" />\\r\\n                        <div *ngIf=\\\"uf.address.errors && (uf.address.touched || uf.address.dirty)\\\">\\r\\n                            <div *ngIf=\\\"uf.address.errors.maxlength\\\" class=\\\"invalid-text\\\">Address must be less than 100\\r\\n                                characters\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-3 text-left \\\">\\r\\n                        <label class=\\\"form-input-label\\\">Email</label>\\r\\n                        <input class=\\\"input\\\"\\r\\n                            [ngClass]=\\\"{ 'invalid-input': uf.email.errors && (uf.email.touched || uf.email.dirty) }\\\"\\r\\n                            formControlName=\\\"email\\\" />\\r\\n                        <div *ngIf=\\\"uf.email.errors && (uf.email.touched || uf.email.dirty)\\\">\\r\\n                            <div *ngIf=\\\"uf.email.errors.required\\\" class=\\\"invalid-text\\\">Email is required</div>\\r\\n                            <div *ngIf=\\\"uf.email.errors.email\\\" class=\\\"invalid-text\\\">Email is not valid</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row mt-4\\\">\\r\\n                    <div class=\\\"col-3 text-left \\\">\\r\\n                        <label class=\\\"form-input-label\\\">Mobile</label>\\r\\n                        <input class=\\\"input\\\"\\r\\n                            [ngClass]=\\\"{ 'invalid-input': uf.msisdn.errors && (uf.msisdn.touched || uf.msisdn.dirty) }\\\"\\r\\n                            formControlName=\\\"msisdn\\\" />\\r\\n                        <div *ngIf=\\\"uf.msisdn.errors && (uf.msisdn.touched || uf.msisdn.dirty)\\\">\\r\\n                            <div *ngIf=\\\"uf.msisdn.errors.required\\\" class=\\\"invalid-text\\\">Mobile Number is required</div>\\r\\n                            <div *ngIf=\\\"uf.msisdn.errors.notValid\\\" class=\\\"invalid-text\\\">Mobile Number is invalid</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row mt-4 pl-4\\\">\\r\\n                    <div *ngIf=\\\"canAddFakeSenderFlag\\\" class=\\\"col-6 custom-checkbox\\\">\\r\\n                        <input formControlName=\\\"canAddFakeSender\\\" class=\\\"custom-control-input\\\" type=\\\"checkbox\\\"\\r\\n                            id=\\\"fakeSenderCheck\\\" />\\r\\n                        <label class=\\\"custom-control-label\\\" for=\\\"fakeSenderCheck\\\">Can Add Fake Sender</label>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-4 custom-checkbox\\\">\\r\\n                        <input formControlName=\\\"needsApproval\\\" class=\\\"custom-control-input\\\" type=\\\"checkbox\\\"\\r\\n                            id=\\\"approvalCheck\\\" />\\r\\n                        <label class=\\\"custom-control-label\\\" for=\\\"approvalCheck\\\">Needs Approval</label>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row mt-4\\\">\\r\\n                    <div class=\\\"col-3\\\">\\r\\n                        <div class=\\\"text-left form-input form-selectbox\\\">\\r\\n                            <label class=\\\"form-input-label\\\">Role</label>\\r\\n                            <select *ngIf=\\\"this.tempUser\\\" formControlName=\\\"role\\\" class=\\\"selectbox\\\"\\r\\n                                (change)=\\\"setTempUserRole($event.target.value)\\\"\\r\\n                                [ngClass]=\\\"{ 'invalid-input': uf.role.errors && (uf.role.touched || uf.role.dirty) }\\\">\\r\\n                                <option *ngFor=\\\"let role of listRoles()\\\" value=\\\"{{role.id}}\\\">\\r\\n                                    {{role.label}}</option>\\r\\n                            </select>\\r\\n                            <div class=\\\"form-selectbox-icon\\\"></div>\\r\\n                            <div *ngIf=\\\"uf.role.errors && (uf.role.touched || uf.role.dirty)\\\">\\r\\n                                <div *ngIf=\\\"uf.role.errors.required\\\" class=\\\"invalid-text\\\">Select a Role</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row mt-4\\\">\\r\\n            <div class=\\\"col-12 text-right\\\">\\r\\n\\r\\n                <button *ngIf=\\\"!isEditMode()\\\" class=\\\"button button-green mr-2 \\\" (click)=\\\"createUser()\\\">\\r\\n                    Save\\r\\n                </button>\\r\\n                <button *ngIf=\\\"isEditMode() && !signUpApproval\\\" class=\\\"button button-green mr-2 \\\"\\r\\n                    (click)=\\\"updateUser()\\\">\\r\\n                    Save\\r\\n                </button>\\r\\n                <button *ngIf=\\\"isEditMode() && signUpApproval && tempUser.signupStatus == pending\\\"\\r\\n                    class=\\\"button button-green mr-2 \\\" (click)=\\\"updateUser()\\\">\\r\\n                    Approve\\r\\n                </button>\\r\\n                <button class=\\\"button button-black \\\" (click)=\\\"cancel()\\\">\\r\\n                    Cancel\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { AdminViewUser } from 'src/app/shared/models/admin-view-user-model';\r\nimport { AccountService } from '../account.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { RoleModel } from 'src/app/shared/models/role-model';\r\nimport { EntityModel } from 'src/app/shared/models/entity-model';\r\nimport { Defines } from '../../shared/static/defines';\r\nimport { FormBuilder, FormGroup, Validators, FormControl, AbstractControl } from '@angular/forms';\r\nimport { isString } from 'util';\r\nimport { environment } from 'src/environments/environment.dev';\r\nimport { EntityServiceService } from 'src/app/entity/entity-service.service';\r\nimport { RoleManagerService } from 'src/app/roles/role-manager.service';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'ndp-add-edit-users-accounts',\r\n  templateUrl: './add-edit-users-accounts.component.html',\r\n  styleUrls: ['./add-edit-users-accounts.component.css']\r\n})\r\nexport class AddEditUsersAccountsComponent implements OnInit {\r\n\r\n  @Input() userId: number;\r\n  tempUser: AdminViewUser;\r\n\r\n  filter: string;\r\n\r\n  activeDirectoryUsers;\r\n  activeDirectoryUsersSelectItems: Array<SelectItem> = new Array<SelectItem>();\r\n  businessEntities = new Array();\r\n  roles = new Array();\r\n  canAddFakeSenderFlag: boolean = false;\r\n\r\n  //signup approval flag used for signup requests page\r\n  signUpApproval: boolean = false;\r\n  pending = Defines.SIGNUP_STATUS.PENDING;\r\n\r\n  userForm: FormGroup;\r\n\r\n  constructor(private accountService: AccountService, private entityService: EntityServiceService, private roleService: RoleManagerService, private router: Router, private route: ActivatedRoute, private formBuilder: FormBuilder) { }\r\n  initUserForm() {\r\n    this.userForm = this.formBuilder.group({\r\n      userName: ['', [Validators.required]],\r\n      password: ['', [Validators.pattern(\"^(?=.*[A-Za-z])(?=.*[0-9])[A-Za-z0-9!@#$%^&*(),.?\\\":{}|<>\\\\/]{8,}$\")]],\r\n      fName: ['', [Validators.required, Validators.pattern(\"[a-zA-Z][a-zA-Z .'-]+\"), Validators.maxLength(25), Validators.minLength(2)]],\r\n      lName: ['', [Validators.required, Validators.pattern(\"[a-zA-Z][a-zA-Z .'-]+\"), Validators.maxLength(25), Validators.minLength(2)]],\r\n      address: ['', [Validators.maxLength(100)]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      msisdn: ['', [Validators.required, this.msisdnValidator]],\r\n      entityId: ['', [Validators.required]],\r\n      canAddFakeSender: [false],\r\n      needsApproval: [true, { disabled: false }],\r\n      role: ['', [Validators.required]],\r\n      isLdapUser: [false, { disabled: false }]\r\n    });\r\n  }\r\n  ngOnInit() {\r\n\r\n    console.log(\"userId:\" + this.userId);\r\n    this.initUserForm();\r\n\r\n\r\n    //if edit mode check if edit page is requested from signup approval \r\n    this.signUpApproval = this.route.snapshot.routeConfig.path == \"user/approve/:id\";\r\n\r\n    console.log(\"###############Approval Flag###################\");\r\n    console.log(this.signUpApproval);\r\n    console.log(this.route.snapshot.routeConfig.path);\r\n\r\n    if (this.userId == null) {\r\n      //this.userId = this.route.snapshot.queryParams.userId;\r\n      this.userId = +this.route.snapshot.paramMap.get('id');\r\n      console.log(\"###############user id###################\");\r\n      console.log(this.userId);\r\n    }\r\n    if (this.userId != null && this.userId !== 0) {\r\n      this.accountService.getUserById(this.userId).subscribe(res => {\r\n        this.tempUser = res.responsePayload;\r\n\r\n        if (this.signUpApproval) {\r\n          this.initSignUpApprovalRequest();\r\n        }\r\n\r\n        this.userForm.setValue({\r\n          userName: this.tempUser.userName,\r\n          password: null,\r\n          fName: this.tempUser.fName,\r\n          lName: this.tempUser.lName,\r\n          address: this.tempUser.address,\r\n          email: this.tempUser.email,\r\n          msisdn: this.tempUser.msisdn,\r\n          entityId: this.tempUser.entityId,\r\n          canAddFakeSender: this.tempUser.canAddFakeSender,\r\n          needsApproval: this.tempUser.needsApproval,\r\n          role: this.tempUser.role,\r\n          isLdapUser: this.tempUser.isLdapUser\r\n        });\r\n        this.enableDisableNeedsApproval();\r\n        this.enableDisableActiveDirectoryUser();\r\n        if (this.tempUser.entityId !== null) {\r\n          this.entityService.getEntity(this.tempUser.entityId).subscribe(res => {\r\n            const entity = res.responsePayload;\r\n            console.log(\"entity.canAddFakeSenders \", entity.canAddFakeSenders)\r\n            this.canAddFakeSenderFlag = entity.canAddFakeSenders;\r\n            this.tempUser.isInternal = entity.isInternal;\r\n            this.enableDisableCanAddFakeSender(entity.canAddFakeSenders);\r\n            setTimeout(() => { this.listRoles() });\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      this.tempUser = new AdminViewUser();\r\n      this.tempUser.isActive = true;\r\n      this.tempUser.isLdapUser = false;\r\n      this.tempUser.needsApproval = false;\r\n      this.tempUser.canAddFakeSender = false;\r\n    }\r\n    this.accountService.listLdapUsers().subscribe(res => {\r\n      this.activeDirectoryUsers = res.responsePayload;\r\n      if (this.activeDirectoryUsers) {\r\n        this.activeDirectoryUsers.forEach(user => {\r\n          debugger;\r\n          console.log(user);\r\n\r\n          this.activeDirectoryUsersSelectItems.push({ label: user, value: user });\r\n        })\r\n        this.activeDirectoryUsersSelectItems = JSON.parse(JSON.stringify(this.activeDirectoryUsersSelectItems));\r\n      }\r\n    });\r\n    this.entityService.getAllEntity().subscribe(res => {\r\n      this.businessEntities = res.responsePayload;\r\n      console.log(this.businessEntities);\r\n    });\r\n    this.roleService.getAllRoles().subscribe(res => {\r\n      this.roles = res.responsePayload;\r\n    });\r\n  }\r\n\r\n  get uf() {\r\n    return this.userForm.controls;\r\n  }\r\n\r\n  listRoles(): Array<RoleModel> {\r\n    let roles = Object.assign([], this.roles);\r\n    console.log('list this.roles=>', this.roles);\r\n    console.log('listroles=>', roles);\r\n    if (!this.tempUser.isInternal) {\r\n\r\n      for (let i = 0; i < roles.length; i++) {\r\n\r\n        if (!roles[i].assignedToExtEntity || roles[i].assignedToExtEntity === null) {\r\n\r\n          roles.splice(i, 1);\r\n          i--;\r\n        }\r\n      }\r\n    }\r\n\r\n    return roles;\r\n  }\r\n\r\n  listBusinessEntities(): Array<EntityModel> {\r\n    const entities = Object.assign([], this.businessEntities);\r\n    if (entities) {\r\n      console.log(this.userForm);\r\n      if (this.userForm.get('isLdapUser').value === false) {\r\n        for (let i = 0; i < entities.length; i++) {\r\n          if (entities[i].isInternal) {\r\n            entities.splice(i, 1);\r\n            i--;\r\n          }\r\n        }\r\n      }\r\n      if (this.userId !== 0) {\r\n        if (this.tempUser.entityId != null && (entities.find(x => x.entityId == this.tempUser.entityId) == null || entities.find(x => x.entityId == this.tempUser.entityId) == undefined)) {\r\n          console.log(entities);\r\n          console.log(this.businessEntities);\r\n          const x = entities.findIndex(x => x.entityId != null);\r\n          console.log(x);\r\n          if (x !== undefined && x !== -1 && x !== null) {\r\n            console.log(entities[x]);\r\n            this.setTempUserBusinessEntity(entities[x].entityId);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    console.log('entities2', entities);\r\n    console.log('business2', this.businessEntities);\r\n    return entities;\r\n  }\r\n\r\n  enableDisableNeedsApproval(): boolean {\r\n    let enable = true;\r\n    if (this.tempUser.role == environment.campaignAdminId) {\r\n      enable = false;\r\n      this.userForm.get('needsApproval').reset({ value: false, disabled: true });\r\n      this.tempUser.needsApproval = false;\r\n    } else {\r\n      let lastValue = this.userForm.get('needsApproval').value;\r\n      this.userForm.get('needsApproval').reset({ value: lastValue, disabled: false });\r\n    }\r\n    return enable;\r\n  }\r\n  enableDisableActiveDirectoryUser() {\r\n    if (this.signUpApproval) {\r\n      this.userForm.get('isLdapUser').reset({ value: false, disabled: false });\r\n    } else {\r\n      this.userForm.get('isLdapUser').reset({ value: this.tempUser.isLdapUser, disabled: false });\r\n    }\r\n  }\r\n  enableDisableCanAddFakeSender(canAddFakeSender: boolean) {\r\n    if (canAddFakeSender) {\r\n      let lastValue = this.userForm.get('canAddFakeSender').value;\r\n      this.userForm.get('canAddFakeSender').reset({ value: lastValue, disabled: false });\r\n    } else {\r\n      this.userForm.get('canAddFakeSender').reset({ value: false, disabled: true });\r\n    }\r\n  }\r\n  createUser() {\r\n    this.accountService.scrollIfFormHasErrors(this.userForm);\r\n\r\n    this.assignFormToUser();\r\n    if (!this.userForm.invalid) {\r\n      this.accountService.createUser(this.tempUser).subscribe(res => {\r\n        if (res.responsePayload > 0) {\r\n          this.router.navigate([\"user/list\"]);\r\n        }\r\n        console.log(res.responsePayload);\r\n      });\r\n    } else {\r\n      this.accountService.markFormGroupTouched(this.userForm);\r\n    }\r\n  }\r\n  updateUser() {\r\n    this.accountService.scrollIfFormHasErrors(this.userForm);\r\n    this.assignFormToUser();\r\n    if (!this.userForm.invalid) {\r\n      if (this.signUpApproval) {\r\n        this.approveUser();\r\n      } else {\r\n        this.accountService.updateUser(this.tempUser).subscribe(res => {\r\n          if (res.responsePayload > 0) {\r\n            this.router.navigate([\"user/list\"]);\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      this.accountService.markFormGroupTouched(this.userForm);\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    if (this.signUpApproval) {\r\n      this.router.navigate([\"requests\"]);\r\n    } else {\r\n      this.router.navigate([\"user/list\"]);\r\n    }\r\n  }\r\n\r\n  assignFormToUser() {\r\n    this.tempUser.userName = this.userForm.get('userName').value;\r\n    console.log(\"username:\", this.tempUser.userName);\r\n    this.tempUser.password = this.userForm.get('password').value;\r\n    this.tempUser.entityId = this.userForm.get('entityId').value;\r\n    this.tempUser.fName = this.userForm.get('fName').value;\r\n    this.tempUser.lName = this.userForm.get('lName').value;\r\n    this.tempUser.address = this.userForm.get('address').value;\r\n    this.tempUser.email = this.userForm.get('email').value;\r\n    this.tempUser.msisdn = this.userForm.get('msisdn').value;\r\n    this.tempUser.canAddFakeSender = this.userForm.get('canAddFakeSender').value;\r\n    this.tempUser.needsApproval = this.userForm.get('needsApproval').value;\r\n    this.tempUser.role = this.userForm.get('role').value;\r\n    this.tempUser.isLdapUser = this.userForm.get('isLdapUser').value;\r\n  }\r\n\r\n  addUser() {\r\n    this.router.navigate([\"user/add\"]);\r\n  }\r\n\r\n  isEditMode() {\r\n    return this.tempUser.id != null;\r\n  }\r\n\r\n  setTempUserRole(id: number) {\r\n    this.tempUser.role = id;\r\n    this.userForm.get(\"role\").setValue(id);\r\n    this.tempUser.roleLabel = this.roles.find(role => {\r\n      return role.id == id;\r\n    }).label;\r\n    this.enableDisableNeedsApproval();\r\n    console.log(this.tempUser.roleLabel);\r\n  }\r\n\r\n  setTempUserBusinessEntity(id: number) {\r\n    console.log(\"entity ID :\" + id);\r\n    let entity: EntityModel;\r\n    this.tempUser.entityId = id;\r\n    this.userForm.get(\"entityId\").setValue(id);\r\n    entity = this.businessEntities.find(entity => {\r\n      return entity.entityId == id;\r\n    });\r\n    this.tempUser.entityName = entity.entityName;\r\n    this.tempUser.isInternal = entity.isInternal;\r\n    this.enableDisableCanAddFakeSender(entity.canAddFakeSenders);\r\n    this.setTempUserRole(this.listRoles().find(x => x.id != null).id);\r\n  }\r\n\r\n  clearUserNameControl() {\r\n    if (this.userId === 0) {\r\n      this.userForm.get('userName').reset('');\r\n    }\r\n  }\r\n\r\n  /**start handle signup approval page */\r\n\r\n  initSignUpApprovalRequest() {\r\n    //  this.tempUser.isLdapUser = false;\r\n    this.tempUser.isActive = true;\r\n  }\r\n\r\n  approveUser() {\r\n    this.setApprovalStatus();\r\n\r\n    this.accountService.approveUser(this.tempUser).subscribe(res => {\r\n      if (res.errors.length > 0 || res.status != 0) {\r\n        this.tempUser.signupStatus = Defines.SIGNUP_STATUS.PENDING;\r\n      } else {\r\n        this.router.navigate([\"requests\"]);\r\n      }\r\n    });\r\n  }\r\n\r\n  setApprovalStatus() {\r\n    this.tempUser.signupStatus = Defines.SIGNUP_STATUS.APPROVED;\r\n  }\r\n  /**end handle signup approval page */\r\n\r\n  msisdnValidator(control: AbstractControl): { [key: string]: boolean } | null {\r\n    if (control.value == '') {\r\n      control.setValue(null, { emitEvent: false });\r\n    }\r\n    if (control.value !== undefined && control.value !== null && (isNaN(control.value) || !control.value.match('[+]?[0][1][1|0|2|5][0-9]{8}'))) {\r\n      return { 'notValid': true };\r\n    }\r\n    return null;\r\n  }\r\n  passwordValidator(control: AbstractControl): { [key: string]: boolean } | null {\r\n    if (control.value == '') {\r\n      control.setValue(null, { emitEvent: false });\r\n    }\r\n    if (control.value !== undefined && control.value !== null && control.value.length < 5) {\r\n      return { 'tooShort': true };\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvYWRkLWVkaXQvYWRkLWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div *ngIf=\\\"user != null\\\" class=\\\"page-content account-edit\\\">\\r\\n  <div class=\\\"row no-gutters\\\">\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <div class=\\\"page-title\\\">My Account</div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"section col-12\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-6\\\">\\r\\n        <label class=\\\"form-input-label\\\">First Name</label>\\r\\n        <div class=\\\"title-gray-dark\\\">{{user.fName}}</div>\\r\\n      </div>\\r\\n      <div class=\\\"col-6\\\">\\r\\n        <label class=\\\"form-input-label\\\">Last Name</label>\\r\\n        <div class=\\\"title-gray-dark\\\">{{user.lName}}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br />\\r\\n    <div class=\\\"form-input\\\">\\r\\n      <form [formGroup]=\\\"userForm\\\">\\r\\n        <div class=\\\"row col-4\\\">\\r\\n          <label class=\\\"form-input-label\\\">Address</label>\\r\\n          <input class=\\\"input\\\" nfSpecialCharacters   [ngClass]=\\\"{ 'invalid-input': uf.address.errors && (uf.address.touched || uf.address.dirty) }\\\"\\r\\n          formControlName=\\\"address\\\" />\\r\\n          <div *ngIf=\\\"uf.address.errors && (uf.address.touched || uf.address.dirty)\\\">\\r\\n            <div *ngIf=\\\"uf.address.errors.maxlength\\\" class=\\\"invalid-text\\\">Address must be less than 100\\r\\n              characters</div>\\r\\n              <div *ngIf=\\\"!uf.address.errors.required && !!uf.address.errors.nfSpecialCharacters\\\" >Address Name Must be valid</div>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n        <br />\\r\\n        <div class=\\\"row col-4\\\">\\r\\n          <label class=\\\"form-input-label\\\">Email</label>\\r\\n          <input   class=\\\"input\\\" [ngClass]=\\\"{ 'invalid-input': uf.email.errors && (uf.email.touched || uf.email.dirty) }\\\"\\r\\n          formControlName=\\\"email\\\" />\\r\\n          <div *ngIf=\\\"uf.email.errors && (uf.email.touched || uf.email.dirty)\\\">\\r\\n            <div *ngIf=\\\"uf.email.errors.required\\\" class=\\\"invalid-text\\\">Email is required</div>\\r\\n            <div *ngIf=\\\"uf.email.errors.email\\\" class=\\\"invalid-text\\\">Email is not valid</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <br />\\r\\n        <div class=\\\"row col-4\\\">\\r\\n          <label class=\\\"form-input-label\\\">Mobile number</label>\\r\\n          <input   class=\\\"input\\\" [ngClass]=\\\"{ 'invalid-input': uf.msisdn.errors && (uf.msisdn.touched || uf.msisdn.dirty) }\\\"\\r\\n          formControlName=\\\"msisdn\\\" />\\r\\n          <div *ngIf=\\\"uf.msisdn.errors && (uf.msisdn.touched || uf.msisdn.dirty)\\\">\\r\\n            <div *ngIf=\\\"uf.msisdn.errors.required\\\" class=\\\"invalid-text\\\">Mobile Number is required</div>\\r\\n            <div *ngIf=\\\"uf.msisdn.errors.notValid\\\" class=\\\"invalid-text\\\">Mobile Number is invalid</div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n    <br />\\r\\n    <div class=\\\"row\\\">\\r\\n      <button class=\\\"button button-green mr-2 \\\" (click)=\\\"saveProfile()\\\">\\r\\n        Save\\r\\n      </button>\\r\\n      <button class=\\\"button button-black mr-2 \\\" (click)=\\\"cancel()\\\">\\r\\n        Cancel\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, Input, Output } from '@angular/core';\r\nimport { User } from 'src/app/shared/models/user-model';\r\nimport { AccountService } from '../account.service';\r\nimport { Router } from '@angular/router';\r\nimport { Defines } from 'src/app/shared/static/defines';\r\nimport { FormGroup, AbstractControl, Validators, FormBuilder } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'ndp-add-edit',\r\n  templateUrl: './add-edit.component.html',\r\n  styleUrls: ['./add-edit.component.css']\r\n})\r\nexport class AccountEditComponent implements OnInit {\r\n\r\n  user: User;\r\n  tempUser: User;\r\n\r\n  userForm: FormGroup;\r\n\r\n  constructor(private accountService: AccountService, private router: Router, private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    // this.accountService.getUser().subscribe(req => {\r\n    //   this.user = req.responsePayload;\r\n    //   this.tempUser = Object.assign({}, this.user);\r\n    // });\r\n    this.user = JSON.parse(localStorage.getItem(Defines.SESSION_KEYS.userModel));\r\n    console.log(this.user);\r\n    this.tempUser = Object.assign({}, this.user);\r\n\r\n    this.userForm = this.formBuilder.group({\r\n      address: [this.tempUser.address, [Validators.maxLength(100)]],\r\n      email: [this.tempUser.email, [Validators.required, Validators.email]],\r\n      msisdn: [this.tempUser.msisdn, [Validators.required, this.msisdnValidator]]\r\n    });\r\n  }\r\n  get uf() {\r\n    return this.userForm.controls;\r\n  }\r\n  saveProfile() {\r\n    if (this.userForm.errors === null) {\r\n      this.assignFormToUser();\r\n      if (this.userDataChanged()) {\r\n        this.accountService.saveMyProfile(this.tempUser).subscribe(res => {\r\n          if (res.responsePayload > 0) {\r\n            localStorage.setItem(Defines.SESSION_KEYS.userModel, JSON.stringify(this.tempUser));\r\n            this.router.navigate(['myprofile/view']);\r\n          }\r\n        });\r\n      } else {\r\n        this.router.navigate(['myprofile/view']);\r\n      }\r\n    }\r\n  }\r\n  cancel() {\r\n    this.router.navigate(['myprofile/view']);\r\n  }\r\n\r\n  msisdnValidator(control: AbstractControl): { [key: string]: boolean } | null {\r\n    if (control.value == '') {\r\n      control.setValue(null, { emitEvent: false });\r\n    }\r\n    if (control.value !== undefined && control.value !== null && (isNaN(control.value) || !control.value.match('[+]?[0][1][1|0|2|5][0-9]{8}'))) {\r\n      return { 'notValid': true };\r\n    }\r\n    return null;\r\n  }\r\n  assignFormToUser() {\r\n    this.tempUser.address = this.userForm.get('address').value;\r\n    this.tempUser.email = this.userForm.get('email').value;\r\n    this.tempUser.msisdn = this.userForm.get('msisdn').value;\r\n  }\r\n  userDataChanged(){\r\n    return (this.tempUser.address != this.user.address\r\n      ||this.tempUser.email != this.user.email\r\n      ||this.tempUser.msisdn != this.user.msisdn);\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvY2hhbmdlLXBhc3N3b3JkL2NoYW5nZS1wYXNzd29yZC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"page-content account-edit\\\">\\r\\n  <div class=\\\"row no-gutters\\\">\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <div class=\\\"page-title\\\">Change Password</div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"section col-12\\\">\\r\\n    <div class=\\\"form-input\\\">\\r\\n      <form [formGroup]=\\\"userForm\\\">\\r\\n        <div class=\\\"row col-4\\\">\\r\\n          <label class=\\\"form-input-label\\\">New Password</label>\\r\\n          <input class=\\\"input\\\" type=\\\"password\\\" [ngClass]=\\\"{'invalid-input': uf.newPassword.errors && (uf.newPassword.touched || uf.newPassword.dirty) }\\\"\\r\\n          formControlName=\\\"newPassword\\\"/>\\r\\n          <div *ngIf=\\\"uf.newPassword.errors && (uf.newPassword.touched || uf.newPassword.dirty)\\\">\\r\\n            <div *ngIf=\\\"uf.newPassword.errors.required\\\" class=\\\"invalid-text\\\">Password is required</div>\\r\\n            <div *ngIf=\\\"uf.newPassword.errors.pattern\\\" class=\\\"invalid-text\\\">Password should be a minimum of 7 letters and 1 character</div>\\r\\n          </div> \\r\\n        </div>\\r\\n        <br />\\r\\n        <div class=\\\"row col-4\\\">\\r\\n          <label class=\\\"form-input-label\\\">Confirm New Password</label>\\r\\n          <input class=\\\"input\\\" type=\\\"password\\\" [ngClass]=\\\"{'invalid-input': uf.confirmNewPassword.errors && (uf.confirmNewPassword.touched || uf.confirmNewPassword.dirty) }\\\"\\r\\n          formControlName=\\\"confirmNewPassword\\\"/> \\r\\n          <div *ngIf=\\\"uf.confirmNewPassword.errors && (uf.confirmNewPassword.touched || uf.confirmNewPassword.dirty)\\\">\\r\\n            <div *ngIf=\\\"uf.confirmNewPassword.errors.required\\\" class=\\\"invalid-text\\\">Password confirmation is required</div>  \\r\\n            <div *ngIf=\\\"uf.confirmNewPassword.errors.mustMatch\\\" class=\\\"invalid-text\\\">Passwords must match</div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n    \\r\\n\\r\\n    <br />\\r\\n    <div class=\\\"row\\\">\\r\\n      <button class=\\\"button button-green mr-2 \\\" (click)=\\\"changePassword()\\\">\\r\\n        Save\\r\\n      </button>\\r\\n      <button class=\\\"button button-black mr-2 \\\" (click)=\\\"cancel()\\\">\\r\\n        Cancel\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AccountService } from '../account.service';\r\nimport { FormBuilder, FormGroup, AbstractControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'ndp-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.css']\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n\r\n  newPassword: string;\r\n  confirmNewPassword: string;\r\n\r\n  userForm: FormGroup;\r\n\r\n  constructor(private accountService: AccountService, private router: Router, private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.userForm = this.formBuilder.group({\r\n      newPassword: ['', [Validators.required,Validators.pattern(\"^(?=.*[A-Za-z])(?=.*[0-9])[A-Za-z0-9!@#$%^&*(),.?\\\":{}|<>\\\\/]{8,}$\")]],\r\n      confirmNewPassword: ['', Validators.required]\r\n    }, {\r\n        validator: this.passwordMatchingValidator('newPassword', 'confirmNewPassword')\r\n      });\r\n  }\r\n  get uf() {\r\n    return this.userForm.controls;\r\n  }\r\n  changePassword() {\r\n    this.assignFormToPasswords();\r\n    console.log(this.userForm.errors);\r\n    if (!this.userForm.valid) {\r\n      this.accountService.markFormGroupTouched(this.userForm);\r\n      return;\r\n    }\r\n    this.accountService.savePassword(this.newPassword).subscribe(res => {\r\n      this.router.navigate(['myprofile/view']);\r\n    });\r\n\r\n\r\n  }\r\n\r\n  cancel() {\r\n    this.router.navigate(['myprofile/view']);\r\n  }\r\n  passwordMatchingValidator(newPassword: string, confirmNewPassword: string) {\r\n    return (formGroup: FormGroup) => {\r\n      const control = formGroup.controls[newPassword];\r\n      const matchingControl = formGroup.controls[confirmNewPassword];\r\n      if (control.value != matchingControl.value) {\r\n        matchingControl.setErrors({ mustMatch: true });\r\n      } else {\r\n        matchingControl.setErrors(null);\r\n      }\r\n    };\r\n  }\r\n\r\n  passwordValidator(control: AbstractControl): { [key: string]: boolean } | null {\r\n    if (control.value !== undefined && control.value !== null) {\r\n      return { 'notValid': true };\r\n    }\r\n    return null;\r\n  }\r\n  assignFormToPasswords() {\r\n    this.newPassword = this.userForm.get('newPassword').value;\r\n    this.confirmNewPassword = this.userForm.get('confirmNewPassword').value;\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvbGlzdC9saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div *ngIf=\\\"enableUpdatingUserData === false && user != null\\\" class=\\\"page-content account-list\\\">\\r\\n  <div class=\\\"row no-gutters\\\">\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <div class=\\\"page-title\\\">My Account</div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"section col-12\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-6\\\">\\r\\n        <label class=\\\"form-input-label\\\">First Name</label>\\r\\n        <div class=\\\"title-gray-dark\\\">{{user.fName}}</div>\\r\\n      </div>\\r\\n      <div class=\\\"col-6\\\">\\r\\n        <label class=\\\"form-input-label\\\">Last Name</label>\\r\\n        <div class=\\\"title-gray-dark\\\">{{user.lName}}</div>\\r\\n      </div>\\r\\n      <br />\\r\\n      <div  class=\\\"col-12\\\">\\r\\n        <label class=\\\"form-input-label\\\">Address</label>\\r\\n        <div *ngIf=\\\"user.address != null\\\" class=\\\"title-gray-dark\\\">{{user.address}}</div>\\r\\n        <div *ngIf=\\\"user.address == null\\\" class=\\\"title-gray-dark\\\">N/A</div>\\r\\n      </div>\\r\\n      <br />\\r\\n      <div class=\\\"col-12\\\">\\r\\n        <label class=\\\"form-input-label\\\">Email</label>\\r\\n        <div class=\\\"title-gray-dark\\\">{{user.email}}</div>\\r\\n      </div>\\r\\n      <br />\\r\\n      <div class=\\\"col-12\\\">\\r\\n        <label class=\\\"form-input-label\\\">Mobile number</label>\\r\\n        <div class=\\\"title-gray-dark\\\">{{user.msisdn}}</div>\\r\\n      </div>\\r\\n      <div class=\\\"col-12\\\">\\r\\n        <label class=\\\"form-input-label\\\">Business Entity Name</label>\\r\\n        <div class=\\\"title-gray-dark\\\">{{user.entityName}}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br />\\r\\n    <a class=\\\"button button-green mr-2 \\\" (click)=\\\"goToUpdate()\\\">\\r\\n      Update\\r\\n    </a>\\r\\n    <a *ngIf=\\\"user.isLdapUser == false || user.isLdapUser == null\\\"class=\\\"button button-green mr-2 \\\" (click)=\\\"goToChangePassword()\\\">\\r\\n        Change Password\\r\\n      </a>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { User } from 'src/app/shared/models/user-model';\r\nimport { AccountService } from '../account.service';\r\nimport { Router } from '@angular/router';\r\nimport { Defines } from 'src/app/shared/static/defines';\r\n\r\n@Component({\r\n  selector: 'ndp-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.css']\r\n})\r\nexport class AccountListComponent implements OnInit {\r\n\r\n  user: User;\r\n  enableUpdatingUserData: boolean;\r\n\r\n  constructor(private accountService: AccountService, private router:Router) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.enableUpdatingUserData = false;\r\n    // this.accountService.getUser().subscribe(req => {\r\n    //   this.user = req.responsePayload;\r\n    // });\r\n    this.user = JSON.parse(localStorage.getItem(Defines.SESSION_KEYS.userModel));\r\n  }\r\n  goToUpdate() {\r\n    this.router.navigate([\"myprofile/edit\"]);\r\n  }\r\n  goToChangePassword() {\r\n    this.router.navigate([\"account/change-password\"]);\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvc2lnbnVwLXJlcXVlc3RzL3NpZ251cC1yZXF1ZXN0cy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"page-content\\\" (click)=\\\"closeAllMenus()\\\">\\r\\n  <div class=\\\"row no-gutters\\\">\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <div class=\\\"page-title\\\">\\r\\n        Signup Requests\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-xl-6 col-lg-12 text-right\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-8\\\">\\r\\n          <div class=\\\"search-input\\\">\\r\\n            <input [(ngModel)]=\\\"filter\\\" type=\\\"text\\\" class=\\\"\\\" placeholder=\\\"Search\\\">\\r\\n            <i class=\\\"icon-search icon\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"usersAccounts\\\">\\r\\n    <div *ngIf=\\\"setFilteredUsersAccounts(usersAccounts | usernameFilter:filter)\\\"></div>\\r\\n    <div\\r\\n      *ngFor=\\\"let userAccount of filteredUsersAccounts | paginate: { itemsPerPage: perPage, currentPage: p }; let i = index\\\"\\r\\n      (click)=\\\"setExpandedUserId($event,userAccount)\\\" class=\\\"section animated faster fadeInUp row\\\">\\r\\n\\r\\n      <div class=\\\"col-12 text-left section-title\\\" *ngIf=\\\"(userAccount.id === rejectedUserId) && editRejectedUser\\\">\\r\\n        Edit Rejected User\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-2 heading-6 title-robotomedium pt-2 \\\">\\r\\n        <label class=\\\"title-normal\\\">{{userAccount.userName}}</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-7 text-left \\\">\\r\\n        <label class=\\\"form-input-label\\\">Signup Status</label>\\r\\n        <div class=\\\"title-gray-dark\\\">{{userAccount.signupStatusName}}</div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-2 text-right\\\" *ngIf=\\\"userAccount.signupStatus == pending\\\">\\r\\n        <a (click)=\\\"dropDownMenu($event, userAccount)\\\" class=\\\"campaigns-item-actions-link\\\">\\r\\n          <i class=\\\"icon-dropdown-dots icon icon-lg icon-gray\\\"></i>\\r\\n        </a>\\r\\n      </div>\\r\\n      <div class=\\\"col-4 test-right dropdown\\\" *ngIf=\\\"(dropDownUserId == userAccount.id) \\r\\n      && userAccount.signupStatus == pending\\\" [ngClass]=\\\"{'hide':!dropDown}\\\" (click)=\\\"$event.stopPropagation()\\\">\\r\\n        <ul class=\\\"list\\\">\\r\\n          <li ndpAuthorize [targetUrl]=\\\"authorizationUrl+ defines.APPROVE\\\" (successHandler)=\\\"approveUser(userAccount)\\\">\\r\\n            <span class=\\\"icon icon-settings\\\"></span>Approve</li>\\r\\n          <li ndpAuthorize [targetUrl]=\\\"authorizationUrl+ defines.APPROVE\\\" (successHandler)=\\\"rejectUser(userAccount)\\\">\\r\\n            <span class=\\\"icon icon-sms\\\"></span>Reject</li>\\r\\n        </ul>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"userAccount.id === expandedUserId && showDetails\\\">\\r\\n        <div class=\\\"col-3 text-left \\\">\\r\\n          <label class=\\\"form-input-label\\\">First Name</label>\\r\\n          <div class=\\\"title-gray-dark\\\">{{userAccount.fName}}</div>\\r\\n        </div>\\r\\n        <div class=\\\"col-3 text-left \\\">\\r\\n          <label class=\\\"form-input-label\\\">Last Name</label>\\r\\n          <div class=\\\"title-gray-dark\\\">{{userAccount.lName}}</div>\\r\\n        </div>\\r\\n        <div class=\\\"col-3 text-left \\\">\\r\\n          <label class=\\\"form-input-label\\\">Address</label>\\r\\n          <div class=\\\"title-gray-dark\\\">{{userAccount.address}}</div>\\r\\n        </div>\\r\\n        <div class=\\\"col-3 text-left \\\">\\r\\n          <label class=\\\"form-input-label\\\">Email</label>\\r\\n          <div class=\\\"value\\\">{{userAccount.email}}</div>\\r\\n        </div>\\r\\n        <div class=\\\"col-3 text-left \\\">\\r\\n          <label class=\\\"form-input-label\\\">Mobile Number</label>\\r\\n          <div class=\\\"title-gray-dark\\\">{{userAccount.msisdn}}</div>\\r\\n        </div>\\r\\n        <div class=\\\"col-3 text-left \\\">\\r\\n          <label class=\\\"form-input-label\\\">Request Status</label>\\r\\n          <div class=\\\"title-gray-dark\\\">{{userAccount.signupStatusName}}</div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"rejectedUser\\\" class=\\\"col-3 text-left \\\">\\r\\n          <label class=\\\"form-input-label\\\">Rejection Reason</label>\\r\\n          <div *ngIf=\\\"!editRejectedUser\\\" class=\\\"title-gray-dark\\\">{{userAccount.rejectionReason}}</div>\\r\\n          <input *ngIf=\\\"(userAccount.id === rejectedUserId) && editRejectedUser\\\"\\r\\n            [(ngModel)]=\\\"rejectedUser.rejectionReason\\\" class=\\\"input\\\" />\\r\\n          <div *ngIf=\\\"!rejectedUser.rejectionReason && saveButtonClicked\\\" class=\\\"invalid-feedback\\\">\\r\\n            Rejection Reason required\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"(userAccount.id === rejectedUserId) && editRejectedUser\\\">\\r\\n          <div class=\\\"row mt-5 pt-3 pb-2\\\">\\r\\n            <div class=\\\"col-12 justify-content-center text-right\\\">\\r\\n              <button (click)=\\\"saveRejectedUser(rejectedUser)\\\" class=\\\"button button-green mr-2 \\\">\\r\\n                Reject\\r\\n              </button>\\r\\n              <button (click)=\\\"cancel()\\\" class=\\\"button button-black mr-2\\\">\\r\\n                Cancel\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"filteredUsersAccounts.length == 0 && inialized\\\">\\r\\n      <div class=\\\"row mt-4 animated fadeIn fast\\\">\\r\\n        <div class=\\\"col-12 mt-4 text-center\\\">\\r\\n          <div class=\\\"col-12 mt-4 fas fa-user-slash fa-7x faded-grey\\\"></div>\\r\\n          <div class=\\\"col-12 mt-4 page-title faded-grey\\\"><b>No Requests Found</b></div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"ngx-pagination\\\">\\r\\n      <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AccountService } from '../account.service';\r\nimport { AdminViewUser } from '../../shared/models/admin-view-user-model';\r\nimport { Defines } from '../../shared/static/defines';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'ndp-signup-requests',\r\n  templateUrl: './signup-requests.component.html',\r\n  styleUrls: ['./signup-requests.component.css']\r\n})\r\nexport class SignupRequestsComponent implements OnInit {\r\n\r\n  usersAccounts = new Array<AdminViewUser>();\r\n  filteredUsersAccounts: Array<AdminViewUser>;\r\n  inialized = false;\r\n  expandedUserId: number;\r\n  dropDownUserId: number;\r\n  dropDown: boolean;\r\n\r\n  rejectedUserId: number;\r\n  rejectedUser: AdminViewUser;\r\n  editRejectedUser: boolean;\r\n\r\n  showDetails: boolean = true;\r\n  saveButtonClicked: boolean;\r\n\r\n  //Pagination Filtering & Sorting\r\n  p: number = 1;\r\n  perPage: number = 4;\r\n  //filtering\r\n  filter: string;\r\n  //================ Authorization ================\r\n  authorizationUrl: string;\r\n  defines = Defines.API_CRUD;\r\n\r\n  //lk signup status\r\n  pending = Defines.SIGNUP_STATUS.PENDING;\r\n\r\n  constructor(private accountService: AccountService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.authorizationUrl = this.accountService.authorizationUrl;\r\n    this.filteredUsersAccounts = this.usersAccounts;\r\n    this.getSignUpRequests();\r\n  }\r\n\r\n  getSignUpRequests() {\r\n    this.accountService.getSignUpRequests().subscribe(res => {\r\n      this.usersAccounts = res.responsePayload;\r\n      this.inialized = true;\r\n    });\r\n  }\r\n\r\n  setExpandedUserId(event: Event, user: AdminViewUser) {\r\n    event.stopPropagation();\r\n    this.dropDownClose();\r\n    if (this.expandedUserId !== user.id) {\r\n      this.expandedUserId = user.id;\r\n      this.rejectedUserId = user.id;\r\n      this.rejectedUser = JSON.parse(JSON.stringify(user));\r\n      this.showDetails = true;\r\n    }\r\n  }\r\n  closeExpandedUserId() {\r\n    this.expandedUserId = null;\r\n    this.showDetails = false;\r\n  }\r\n  dropDownMenu(event: Event, user: AdminViewUser) {\r\n    event.stopPropagation();\r\n    if (!this.dropDown || this.dropDownUserId != user.id) {\r\n      this.dropDownUserId = user.id;\r\n      this.dropDown = true;\r\n    } else {\r\n      this.dropDown = false;\r\n    }\r\n  }\r\n\r\n  approveUser(user: AdminViewUser) {\r\n    this.accountService.isSignupApproval = true;\r\n    //this.router.navigate([\"admin/addeditaccount\"], { queryParams: { userId: user.id, approve: 1 } });\r\n    this.router.navigateByUrl('user/approve/' + user.id);\r\n  }\r\n\r\n  rejectUser(user: AdminViewUser) {\r\n    //close details section\r\n    //debugger;\r\n    this.expandedUserId = user.id;\r\n    this.showDetails = true;\r\n\r\n    this.rejectedUserId = user.id;\r\n    this.rejectedUser = JSON.parse(JSON.stringify(user));\r\n    this.editRejectedUser = true;\r\n\r\n    this.dropDownClose();\r\n  }\r\n\r\n  dropDownClose() {\r\n    this.dropDownUserId = null;\r\n    this.dropDown = false;\r\n  }\r\n\r\n  saveRejectedUser(user: AdminViewUser) {\r\n    if (!user.rejectionReason) {\r\n      this.saveButtonClicked = true;\r\n    }\r\n    else {\r\n      user.signupStatus = Defines.SIGNUP_STATUS.REJECTED;\r\n\r\n      this.accountService.approveUser(user).subscribe(res => {\r\n        if (res.errors.length > 0 || res.status != 0) {\r\n          user.signupStatus = Defines.SIGNUP_STATUS.PENDING;\r\n        } else {\r\n          this.getSignUpRequests();\r\n          this.rejectedUserId = null;\r\n          this.editRejectedUser = false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.rejectedUserId = null;\r\n    this.editRejectedUser = false;\r\n    this.saveButtonClicked = false;\r\n  }\r\n  closeAllMenus() {\r\n    this.closeExpandedUserId();\r\n    this.dropDownClose();\r\n  }\r\n  setFilteredUsersAccounts(filtered: AdminViewUser[]) {\r\n    this.filteredUsersAccounts = filtered;\r\n  }\r\n}\r\n","module.exports = \".user-letter{\\r\\n    position: absolute;\\r\\n    width: 40px;\\r\\n    height: 40px;\\r\\n    border-radius: 50px;\\r\\n    color: rgb(126, 126, 126);\\r\\n    font-weight: 300;\\r\\n    font-size: 24px;\\r\\n    background-color: rgb(233, 233, 233);\\r\\n    text-align: center;\\r\\n    padding-top: 2px;\\r\\n}\\r\\n.status-active{\\r\\n    color: #a3d94e;\\r\\n    font-weight: 500;\\r\\n}\\r\\n.status-active-bullet{\\r\\n    position: absolute;\\r\\n    width: 6px;\\r\\n    height: 6px;\\r\\n    border-radius: 6px;\\r\\n    color: rgba(126, 126, 126, 0);\\r\\n    background-color: #a3d94e;\\r\\n    text-align: center;\\r\\n    margin-left: -10px;\\r\\n    margin-top: 10px;\\r\\n}\\r\\n.status-inactive-bullet{\\r\\n    position: absolute;\\r\\n    width: 6px;\\r\\n    height: 6px;\\r\\n    border-radius: 6px;\\r\\n    color: rgba(126, 126, 126, 0);\\r\\n    background-color: rgb(187, 187, 187);\\r\\n    text-align: center;\\r\\n    margin-left: -10px;\\r\\n    margin-top: 10px;\\r\\n}\\r\\n.status-inactive{\\r\\n    color: rgb(187, 187, 187);\\r\\n    font-weight: 500;\\r\\n}\\r\\n.filter-menu{\\r\\n    position: absolute;\\r\\n    z-index: 100;\\r\\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, .5);\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWNjb3VudC91c2Vycy1hY2NvdW50cy1saXN0L3VzZXJzLWFjY291bnRzLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLG1CQUFtQjtJQUNuQix5QkFBeUI7SUFDekIsZ0JBQWdCO0lBQ2hCLGVBQWU7SUFDZixvQ0FBb0M7SUFDcEMsa0JBQWtCO0lBQ2xCLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksY0FBYztJQUNkLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksa0JBQWtCO0lBQ2xCLFVBQVU7SUFDVixXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLDZCQUE2QjtJQUM3Qix5QkFBeUI7SUFDekIsa0JBQWtCO0lBQ2xCLGtCQUFrQjtJQUNsQixnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLGtCQUFrQjtJQUNsQixVQUFVO0lBQ1YsV0FBVztJQUNYLGtCQUFrQjtJQUNsQiw2QkFBNkI7SUFDN0Isb0NBQW9DO0lBQ3BDLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSx5QkFBeUI7SUFDekIsZ0JBQWdCO0FBQ3BCO0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLHlDQUF5QztBQUM3QyIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvdXNlcnMtYWNjb3VudHMtbGlzdC91c2Vycy1hY2NvdW50cy1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudXNlci1sZXR0ZXJ7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB3aWR0aDogNDBweDtcclxuICAgIGhlaWdodDogNDBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwcHg7XHJcbiAgICBjb2xvcjogcmdiKDEyNiwgMTI2LCAxMjYpO1xyXG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgIGZvbnQtc2l6ZTogMjRweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMzMsIDIzMywgMjMzKTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHBhZGRpbmctdG9wOiAycHg7XHJcbn1cclxuLnN0YXR1cy1hY3RpdmV7XHJcbiAgICBjb2xvcjogI2EzZDk0ZTtcclxuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbn1cclxuLnN0YXR1cy1hY3RpdmUtYnVsbGV0e1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgd2lkdGg6IDZweDtcclxuICAgIGhlaWdodDogNnB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNnB4O1xyXG4gICAgY29sb3I6IHJnYmEoMTI2LCAxMjYsIDEyNiwgMCk7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYTNkOTRlO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbWFyZ2luLWxlZnQ6IC0xMHB4O1xyXG4gICAgbWFyZ2luLXRvcDogMTBweDtcclxufVxyXG4uc3RhdHVzLWluYWN0aXZlLWJ1bGxldHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHdpZHRoOiA2cHg7XHJcbiAgICBoZWlnaHQ6IDZweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDZweDtcclxuICAgIGNvbG9yOiByZ2JhKDEyNiwgMTI2LCAxMjYsIDApO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDE4NywgMTg3LCAxODcpO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbWFyZ2luLWxlZnQ6IC0xMHB4O1xyXG4gICAgbWFyZ2luLXRvcDogMTBweDtcclxufVxyXG4uc3RhdHVzLWluYWN0aXZle1xyXG4gICAgY29sb3I6IHJnYigxODcsIDE4NywgMTg3KTtcclxuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbn1cclxuXHJcbi5maWx0ZXItbWVudXtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHotaW5kZXg6IDEwMDtcclxuICAgIGJveC1zaGFkb3c6IDFweCAycHggNHB4IHJnYmEoMCwgMCwgMCwgLjUpO1xyXG59Il19 */\"","module.exports = \"<div class=\\\"page-content \\\" (click)=\\\"closeAllMenus()\\\">\\r\\n  <div class=\\\"row no-gutters\\\">\\r\\n    <div class=\\\"col-3\\\">\\r\\n      <div class=\\\"page-title\\\">\\r\\n        Users Accounts\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-xl-9 col-lg-12 text-right\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-3\\\">\\r\\n          <button (click)=\\\"showHideFilterMenu()\\\" class=\\\"button button-grey\\\">\\r\\n            <i class=\\\"fa fa-filter\\\" style=\\\"font-size:12px\\\"></i> Filter</button>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"filterMenuEnabled\\\" class=\\\"section filter-menu\\\">\\r\\n          <div class=\\\"row form-input form-selectbox\\\">\\r\\n            <label class=\\\"form-input-label\\\">Status</label>\\r\\n            <select class=\\\"selectbox\\\" [(ngModel)]=\\\"statusFilter\\\">\\r\\n              <option [ngValue]=\\\"null\\\">All</option>\\r\\n              <option [ngValue]=\\\"true\\\">Active</option>\\r\\n              <option [ngValue]=\\\"false\\\">Inactive</option>\\r\\n            </select>\\r\\n            <div class=\\\"form-selectbox-icon\\\"></div>\\r\\n          </div>\\r\\n          <div class=\\\"row form-input form-selectbox form-input-margin\\\">\\r\\n            <label class=\\\"form-input-label\\\">Active Directory User</label>\\r\\n            <select class=\\\"selectbox\\\" [(ngModel)]=\\\"activeDirectoryUserFilter\\\">\\r\\n              <option [ngValue]=\\\"null\\\">All</option>\\r\\n              <option [ngValue]=\\\"true\\\">Yes</option>\\r\\n              <option [ngValue]=\\\"false\\\">No</option>\\r\\n            </select>\\r\\n            <div class=\\\"form-selectbox-icon\\\"></div>\\r\\n          </div>\\r\\n          <div class=\\\"row form-input form-input-margin\\\">\\r\\n            <label class=\\\"form-input-label\\\">Business Entity</label>\\r\\n            <div class=\\\"search-input\\\">\\r\\n              <input [(ngModel)]=\\\"businessEntityToSearch\\\" type=\\\"text\\\" class=\\\"\\\"\\r\\n                placeholder=\\\"Filter By Business Entity Name\\\">\\r\\n              <i class=\\\"icon-search icon\\\"></i>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-6\\\">\\r\\n          <div class=\\\"search-input\\\">\\r\\n            <input [(ngModel)]=\\\"usernameToSearch\\\" type=\\\"text\\\" placeholder=\\\"Search By Username\\\">\\r\\n            <i class=\\\"icon-search icon\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"p-col-3\\\">\\r\\n          <button type=\\\"button\\\" ndpAuthorize [targetUrl]=\\\"authorizationUrl+defines.CREATE\\\" (successHandler)=\\\"addUser()\\\"\\r\\n            label=\\\"Create User Account\\\" class=\\\"button button-green\\\">Add User\\r\\n            Account</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"usersAccounts\\\" (click)=\\\"filterMenuEnabled = false\\\">\\r\\n    <div\\r\\n      *ngIf=\\\"setUsersToShow(usersAccounts | userentityFilter: businessEntityToSearch| usernameFilter: usernameToSearch| userStatusFilter: statusFilter | userActiveDirectoryFilter: activeDirectoryUserFilter)\\\">\\r\\n    </div>\\r\\n    <div\\r\\n      *ngFor=\\\"let userAccount of usersAccountsToShow | orderBy: key : reverse | paginate: { itemsPerPage: perPage, currentPage: p }; let i = index\\\"\\r\\n      class=\\\"section animated faster fadeInUp\\\" (click)=\\\"setExpandedUserId($event,userAccount.id)\\\">\\r\\n      <div class=\\\"row confirmDialog animated fadeIn faster\\\" *ngIf=\\\"deleteConfirm && (deletedId == userAccount.id)\\\">\\r\\n        <div class=\\\"col-12\\\">Are you sure you want to delete User <b>{{userAccount.userName}}</b> ?</div>\\r\\n        <div class=\\\"col-12 mt-2\\\">\\r\\n          <button class=\\\"button button-green mr-4\\\" (click)=\\\"deleteUser($event,userAccount)\\\">DELETE</button>\\r\\n          <button class=\\\"button button-black \\\" (click)=\\\"hideConfirmDelete($event)\\\">CANCEL</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-1 text-left mt-2\\\">\\r\\n          <span class=\\\"user-letter\\\">{{getFirstLetter(userAccount.userName)}}</span>\\r\\n        </div>\\r\\n        <div class=\\\"col-2 text-left mt-3\\\">\\r\\n          <span class=\\\"title-normal\\\" style=\\\"word-wrap: break-word\\\">{{userAccount.userName | titlecase}}</span>\\r\\n        </div>\\r\\n        <div class=\\\"col-3 text-left mt-3\\\">\\r\\n          <span *ngIf=\\\"userAccount.isActive\\\" class=\\\"status-active-bullet\\\">.</span>\\r\\n          <span *ngIf=\\\"userAccount.isActive\\\" class=\\\"status-active\\\">Active</span>\\r\\n          <span *ngIf=\\\"!userAccount.isActive\\\" class=\\\"status-inactive-bullet\\\">.</span>\\r\\n          <span *ngIf=\\\"!userAccount.isActive\\\" class=\\\"status-inactive\\\">Inactive</span>\\r\\n        </div>\\r\\n        <div class=\\\"col-3 text-left \\\">\\r\\n          <label class=\\\"form-input-label\\\">Active Directory User</label>\\r\\n          <div class=\\\"title-gray-dark\\\">{{userAccount.isLdapUser?'Yes':'No'}}</div>\\r\\n        </div>\\r\\n        <div class=\\\"col-2 text-left \\\">\\r\\n          <label class=\\\"form-input-label\\\">Business Entity Name</label>\\r\\n          <div class=\\\"title-gray-dark\\\">{{userAccount.entityName}}</div>\\r\\n        </div>\\r\\n        <div class=\\\"col-1 p-col-nogutter mt-3 text-right\\\">\\r\\n          <a (click)=\\\"dropDownMenu($event,userAccount)\\\" class=\\\"campaigns-item-actions-link\\\">\\r\\n            <i class=\\\"icon-dropdown-dots icon icon-lg icon-gray\\\"></i>\\r\\n          </a>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"(dropDownUserId == userAccount.id)\\\" [ngClass]=\\\"{'hide':!dropDown}\\\" class=\\\"dropdown\\\" (click)=\\\"$event.stopPropagation();\\\">\\r\\n          <ul class=\\\"list\\\">\\r\\n            <li ndpAuthorize [targetUrl]=\\\"authorizationUrl+defines.UPDATE\\\" (successHandler)=\\\"editUser(userAccount)\\\"\\r\\n              [targetId]=\\\"userAccount.id\\\"><span class=\\\"icon icon-settings\\\"></span>Edit</li>\\r\\n\\r\\n            <li *ngIf=\\\"userAccount.id !=cachedUserAccountId\\\" ndpAuthorize [targetUrl]=\\\"authorizationUrl+defines.DELETE\\\"\\r\\n              [targetId]=\\\"userAccount.id\\\" (successHandler)=\\\"showConfirmDelete($event,userAccount)\\\"><span\\r\\n                class=\\\"icon icon-sms\\\"></span>Delete</li>\\r\\n\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"userAccount.id === expandedUserId\\\">\\r\\n        <div class=\\\"row mt-5\\\">\\r\\n          <div class=\\\"col-3 text-left \\\">\\r\\n            <label class=\\\"form-input-label\\\">First Name</label>\\r\\n            <div class=\\\"title-gray-dark\\\">{{userAccount.fName}}</div>\\r\\n          </div>\\r\\n          <div class=\\\"col-3 text-left \\\">\\r\\n            <label class=\\\"form-input-label\\\">Last Name</label>\\r\\n            <div class=\\\"title-gray-dark\\\">{{userAccount.lName}}</div>\\r\\n          </div>\\r\\n          <div class=\\\"col-3 text-left \\\">\\r\\n            <label class=\\\"form-input-label\\\">Role</label>\\r\\n            <div class=\\\"title-gray-dark\\\">{{userAccount.roleLabel}}</div>\\r\\n          </div>\\r\\n          <div class=\\\"col-3 text-left \\\">\\r\\n            <label class=\\\"form-input-label\\\">Mobile Number</label>\\r\\n            <div class=\\\"title-gray-dark\\\">{{userAccount.msisdn}}</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row mt-5\\\">\\r\\n          <div class=\\\"col-3 text-left \\\">\\r\\n            <label class=\\\"form-input-label\\\">Needs Approval</label>\\r\\n            <div class=\\\"title-gray-dark\\\">{{userAccount.needsApproval?'Yes':'No'}}</div>\\r\\n          </div>\\r\\n          <div class=\\\"col-3 text-left \\\">\\r\\n            <label class=\\\"form-input-label\\\">Can Add Fake Sender</label>\\r\\n            <div class=\\\"title-gray-dark\\\">{{userAccount.canAddFakeSender?'Yes':'No'}}</div>\\r\\n          </div>\\r\\n          <div class=\\\"col-3 text-left \\\">\\r\\n            <label class=\\\"form-input-label\\\">Email</label>\\r\\n            <div class=\\\"title-gray-dark\\\">{{userAccount.email}}</div>\\r\\n          </div>\\r\\n          <div class=\\\"col-3 text-left \\\">\\r\\n            <label class=\\\"form-input-label\\\">Address</label>\\r\\n            <div class=\\\"title-gray-dark\\\">{{userAccount.address}}</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row mt-5\\\">\\r\\n          <div class=\\\"col-3 text-left \\\">\\r\\n            <label class=\\\"form-input-label\\\">Account Created By</label>\\r\\n            <div class=\\\"title-gray-dark\\\">{{userAccount.createdByUserName}}</div>\\r\\n          </div>\\r\\n          <div class=\\\"col-3 text-left \\\">\\r\\n            <label class=\\\"form-input-label\\\">Account Creation Date</label>\\r\\n            <div class=\\\"title-gray-dark\\\">{{userAccount.creationDate | date:'dd MMM yyyy hh:mm:ss a'}}</div>\\r\\n          </div>\\r\\n          <div class=\\\"col-3 text-left \\\">\\r\\n            <label class=\\\"form-input-label\\\">Account Last Modified By</label>\\r\\n            <div class=\\\"title-gray-dark\\\">{{userAccount.lastModifiedByUserName}}</div>\\r\\n          </div>\\r\\n          <div class=\\\"col-3 text-left \\\">\\r\\n            <label class=\\\"form-input-label\\\">Account Last Modification Date</label>\\r\\n            <div class=\\\"title-gray-dark\\\">{{userAccount.lastModificationDate | date:'dd MMM yyyy hh:mm:ss a'}}</div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"usersAccountsToShow.length == 0 && inialized\\\">\\r\\n      <div class=\\\"row mt-4 animated fadeIn fast\\\">\\r\\n        <div class=\\\"col-12 mt-4 text-center\\\">\\r\\n          <div class=\\\"col-12 mt-4 fas fa-user-slash fa-7x faded-grey\\\"></div>\\r\\n          <div class=\\\"col-12 mt-4 page-title faded-grey\\\"><b>No Users Found</b></div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"ngx-pagination\\\">\\r\\n      <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AccountService } from '../account.service';\r\nimport { Router } from '@angular/router';\r\nimport { AdminViewUser } from 'src/app/shared/models/admin-view-user-model';\r\nimport { Defines } from 'src/app/shared/static/defines';\r\n\r\n@Component({\r\n  selector: 'ndp-users-accounts-list',\r\n  templateUrl: './users-accounts-list.component.html',\r\n  styleUrls: ['./users-accounts-list.component.css']\r\n})\r\nexport class UsersAccountsListComponent implements OnInit {\r\n\r\n  expandedUserId: number;\r\n  usersAccounts = new Array<AdminViewUser>();\r\n  usersAccountsToShow = null;\r\n  dropDownUserId: number;\r\n  dropDown: boolean;\r\n  inialized = false;\r\n\r\n  deleteConfirm = false;\r\n  deletedId: number;\r\n\r\n  //Filter Menu\r\n  filterMenuEnabled: boolean;\r\n\r\n  //Pagination Filtering & Sorting\r\n  p: number = 1;\r\n  perPage: number = 10;\r\n\r\n  //filtering\r\n  usernameToSearch: string;\r\n  statusFilter: boolean;\r\n  activeDirectoryUserFilter: boolean;\r\n  businessEntityToSearch: string;\r\n\r\n  //sorting\r\n  key: string = 'fName';\r\n  reverse: boolean = false;\r\n\r\n  //Authorization Vars\r\n  authorizationUrl: string;\r\n  defines = Defines.API_CRUD;\r\n\r\n  sort(key) {\r\n    this.key = key;\r\n    this.reverse = !this.reverse;\r\n  }\r\n  cachedUserAccountId = JSON.parse(localStorage.getItem(Defines.SESSION_KEYS.userModel)).id;\r\n\r\n  constructor(private accountService: AccountService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.authorizationUrl = this.accountService.authorizationUrl;\r\n    this.activeDirectoryUserFilter = null;\r\n    this.statusFilter = null;\r\n    this.listUsersAccounts();\r\n  }\r\n\r\n  listUsersAccounts() {\r\n    this.accountService.listUsersAccounts().subscribe(res => {\r\n      this.usersAccounts = res.responsePayload;\r\n      this.inialized = true;\r\n    });\r\n  }\r\n\r\n  addUser() {\r\n    this.router.navigate([\"user/add\"]);\r\n  }\r\n  showHideFilterMenu() {\r\n    this.filterMenuEnabled = !this.filterMenuEnabled;\r\n  }\r\n\r\n  setUsersToShow(usersToShow: AdminViewUser[]) {\r\n    this.usersAccountsToShow = usersToShow;\r\n    // console.log(\"usersToShow\", this.usersAccountsToShow);\r\n  }\r\n\r\n  dropDownMenu(event: Event, user: AdminViewUser) {\r\n    \r\n    console.log(\"dropDownMenudropDownMenu\");\r\n    event.stopPropagation();\r\n    if (!this.dropDown || this.dropDownUserId != user.id) {\r\n      this.dropDownUserId = user.id;\r\n      this.dropDown = true;\r\n    } else {\r\n      this.dropDown = false;\r\n    }\r\n  }\r\n  editUser(user: AdminViewUser) {\r\n    //this.router.navigate([\"admin/addeditaccount\"],{queryParams: {userId: user.id}});\r\n    this.router.navigateByUrl('user/edit/' + user.id);\r\n  }\r\n\r\n  deleteUser(event: Event, user: AdminViewUser) {\r\n    this.accountService.deleteUser(user.id).subscribe(res => {\r\n      if (res.responsePayload > 0) {\r\n        // let indexToDelete = this.usersAccounts.indexOf(user);\r\n        // this.usersAccounts.splice(indexToDelete, 1);\r\n        // indexToDelete = this.usersAccountsToShow.indexOf(user);\r\n        // this.usersAccountsToShow.splice(indexToDelete, 1);\r\n        this.usersAccounts = this.usersAccounts.filter(x => x.id !== user.id);\r\n      }\r\n    });\r\n  }\r\n  showConfirmDelete(event: Event, user: AdminViewUser) {\r\n    //event.stopPropagation();\r\n    this.deleteConfirm = true;\r\n    this.deletedId = user.id;\r\n  }\r\n  hideConfirmDelete(event: Event) {\r\n    event.stopPropagation();\r\n    this.deleteConfirm = false;\r\n    this.deletedId = 0;\r\n  }\r\n  setExpandedUserId(event: Event, userId: number) {\r\n    event.stopPropagation();\r\n    this.dropDownClose();\r\n    if (userId === this.expandedUserId) {\r\n      this.expandedUserId = null;\r\n    } else {\r\n      this.expandedUserId = userId;\r\n    }\r\n  }\r\n  closeExpandedUserId() {\r\n    this.expandedUserId = null;\r\n  }\r\n  dropDownClose() {\r\n    this.dropDownUserId = null;\r\n    this.dropDown = false;\r\n  }\r\n  closeAllMenus() {\r\n    this.closeExpandedUserId();\r\n    this.dropDownClose();\r\n  }\r\n  getFirstLetter(word: string): string {\r\n    return word.charAt(0).toUpperCase();\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC1wcm9maWxlcy9hcHAtcHJvZmlsZXMtYWRkLWVkaXQvYXBwLXByb2ZpbGVzLWFkZC1lZGl0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"page-content \\\">\\r\\n    <div class=\\\"row no-gutters\\\">\\r\\n        <div class=\\\"col-6\\\">\\r\\n            <div class=\\\"page-title\\\">\\r\\n                Add App Profile\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-xl-6 col-lg-12 text-right\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"section\\\" *ngIf=\\\"appProfile != null\\\">\\r\\n        <div class=\\\"row mb-4\\\">\\r\\n            <div *ngIf=\\\"appProfile.appProfileId != null\\\" class=\\\"col-10 text-left section-title\\\">Edit App Profile</div>\\r\\n            <div *ngIf=\\\"appProfile.appProfileId == null\\\" class=\\\"col-10 text-left section-title\\\">Add App Profile</div>\\r\\n        </div>\\r\\n        <div class=\\\"form-input\\\">\\r\\n            <form [formGroup]=\\\"mainForm\\\">\\r\\n                <div class=\\\"row mb-4 form-input-margin\\\">\\r\\n                    <!-- <div *ngIf=\\\"appProfile.appProfileId != null\\\"   class=\\\"col-3 text-left\\\">\\r\\n          <label class=\\\"form-input-label\\\">Profile Id</label>\\r\\n          <input  class=\\\"input\\\" [(ngModel)]=\\\"appProfile.appProfileId\\\"  [ngModelOptions]=\\\"{standalone:true}\\\" readonly />\\r\\n        </div> -->\\r\\n                    <div class=\\\"col-3 text-left mb-4\\\">\\r\\n                        <label class=\\\"form-input-label\\\"> APP Profile Name</label>\\r\\n                        <input class=\\\"input\\\" nfSpecialCharacters   formControlName=\\\"appProfileName\\\" [ngClass]=\\\"{ 'invalid-input': f.appProfileName.errors && (f.appProfileName.touched || f.appProfileName.dirty) }\\\" />\\r\\n                        <div *ngIf=\\\"!!f.appProfileName.errors && (!!f.appProfileName.touched || !!f.appProfileName.dirty)\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"!!f.appProfileName.errors.required\\\" class=\\\"invalid-text\\\">Profie Name is required</div>\\r\\n                            <div *ngIf=\\\"!!f.appProfileName.errors.duplicate\\\" class=\\\"invalid-text\\\">Profie Name already Exists</div>\\r\\n                            <div *ngIf=\\\"!!f.appProfileName.errors.maxlength\\\" class=\\\"invalid-text\\\">Profie Name  must not exceed 25\\r\\n                                characters</div>\\r\\n                            <div class=\\\"invalid-text\\\" *ngIf=\\\"!f.appProfileName.errors.required && !!f.appProfileName.errors.nfSpecialCharacters\\\" >Profile Name Must be valid</div>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-6 text-left mb-4\\\">\\r\\n                        <label class=\\\"form-input-label\\\"> APP Profile Description</label>\\r\\n                        <input   class=\\\"input\\\" formControlName=\\\"description\\\" [ngClass]=\\\"{ 'invalid-input': f.description.errors && (f.description.touched || f.description.dirty) }\\\" />\\r\\n                        <div *ngIf=\\\"!!f.description.errors && (!!f.description.touched || !!f.description.dirty || !!f.description.value)\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"!!f.description.errors.required\\\" class=\\\"invalid-text\\\">Profie Description is required</div>\\r\\n                            <div *ngIf=\\\"!!f.appProfileName.errors.maxlength\\\" class=\\\"invalid-text\\\">Profie Name  must not exceed 500\\r\\n                                characters</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row mb-4 form-input-margin\\\">\\r\\n                    <div class=\\\"col-3 text-left mb-4\\\">\\r\\n                        <label class=\\\"form-input-label\\\">No Of Sessions</label>\\r\\n                        <input type=\\\"number\\\" class=\\\"input\\\" formControlName=\\\"numberOfSessions\\\" [ngClass]=\\\"{ 'invalid-input': f.numberOfSessions.errors && (f.numberOfSessions.touched || f.numberOfSessions.dirty) }\\\" />\\r\\n                        <div *ngIf=\\\"!!f.numberOfSessions.errors && (!!f.numberOfSessions.touched || !!f.numberOfSessions.dirty || !!f.numberOfSessions.value)\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"!!f.numberOfSessions.errors.required\\\" class=\\\"invalid-text\\\">No Of Sessions is required</div>\\r\\n                            <div *ngIf=\\\"!!f.numberOfSessions.errors.min\\\" class=\\\"invalid-text\\\">No Of Sessions must be positive</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-3 text-left mb-4\\\">\\r\\n                        <label class=\\\"form-input-label\\\">Maximum Daily Quota</label>\\r\\n                        <input type=\\\"number\\\" class=\\\"input\\\" formControlName=\\\"maximumDailyQuota\\\" [ngClass]=\\\"{ 'invalid-input': f.maximumDailyQuota.errors && (f.maximumDailyQuota.touched || f.maximumDailyQuota.dirty) }\\\" />\\r\\n                        <div *ngIf=\\\"!!f.maximumDailyQuota.errors && (!!f.maximumDailyQuota.touched || !!f.maximumDailyQuota.dirty || !!f.maximumDailyQuota.value)\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"!!f.maximumDailyQuota.errors.required\\\" class=\\\"invalid-text\\\">Max Daily Quota is required</div>\\r\\n                            <div *ngIf=\\\"!!f.maximumDailyQuota.errors.min\\\" class=\\\"invalid-text\\\">Max Daily Quota must be positive</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-3 text-left mb-4\\\">\\r\\n                        <label class=\\\"form-input-label\\\">Maximum throughput allowed</label>\\r\\n                        <input type=\\\"number\\\" class=\\\"input\\\" formControlName=\\\"maxThroughput\\\" [ngClass]=\\\"{ 'invalid-input': f.maxThroughput.errors && (f.maxThroughput.touched || f.maxThroughput.dirty) }\\\" />\\r\\n                        <div *ngIf=\\\"!!f.maxThroughput.errors && (!!f.maxThroughput.touched || !!f.maxThroughput.dirty || !!f.maxThroughput.value)\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"!!f.maxThroughput.errors.required\\\" class=\\\"invalid-text\\\">Max Throughput is required</div>\\r\\n                            <div *ngIf=\\\"!!f.maxThroughput.errors.min\\\" class=\\\"invalid-text\\\">Max Throughput must be positive</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row mb-2 form-input-margin\\\">\\r\\n                    <div class=\\\"col-3 text-left\\\">\\r\\n                        <div class=\\\"form-input form-input-timepicker\\\">\\r\\n                            <label class=\\\"form-input-label\\\">Time Window Start</label>\\r\\n                            <input formControlName=\\\"timeWindowStart\\\" [owlDateTimeTrigger]=\\\"dt_timeWindowStart\\\" [owlDateTime]=\\\"dt_timeWindowStart\\\" class=\\\"input\\\" placeholder=\\\"\\\" [ngClass]=\\\"{ 'invalid-input': f.timeWindowStart.errors && (f.timeWindowStart.touched || f.timeWindowStart.dirty)}\\\">\\r\\n                            <owl-date-time [pickerType]=\\\"'timer'\\\" #dt_timeWindowStart></owl-date-time>\\r\\n                            <div [owlDateTimeTrigger]=\\\"dt_timeWindowStart\\\" class=\\\"icon-calender-input icon-gray icon-1\\\"></div>\\r\\n                            <div *ngIf=\\\"!!f.timeWindowStart.errors && (!!f.timeWindowStart.touched || !!f.timeWindowStart.dirty)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"!!f.timeWindowStart.errors.required\\\" class=\\\"invalid-text\\\">Time Widnow Start is required</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-3 text-left\\\">\\r\\n                        <div class=\\\"form-input form-input-timepicker\\\">\\r\\n                            <label class=\\\"form-input-label\\\">Time Widnow End</label>\\r\\n                            <input formControlName=\\\"timeWindowEnd\\\" [owlDateTimeTrigger]=\\\"dt_timeWindowEnd\\\" [owlDateTime]=\\\"dt_timeWindowEnd\\\" class=\\\"input\\\" placeholder=\\\"\\\" [ngClass]=\\\"{ 'invalid-input': f.timeWindowEnd.errors && (f.timeWindowEnd.touched || f.timeWindowEnd.dirty) }\\\">\\r\\n                            <owl-date-time [pickerType]=\\\"'timer'\\\" #dt_timeWindowEnd></owl-date-time>\\r\\n                            <div [owlDateTimeTrigger]=\\\"dt_timeWindowEnd\\\" class=\\\"icon-calender-input icon-gray icon-1\\\"></div>\\r\\n                            <div *ngIf=\\\"!!f.timeWindowEnd.errors && (!!f.timeWindowEnd.touched || !!f.timeWindowEnd.dirty)\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"!!f.timeWindowEnd.errors.required\\\" class=\\\"invalid-text\\\">Time Widnow End is required</div>\\r\\n                                <div *ngIf=\\\"!!f.timeWindowEnd.errors.mustBeAfter\\\" class=\\\"invalid-text\\\">Time Widnow End must be after Time Window Start</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row mb-4 form-input-margin\\\">\\r\\n                    <div class=\\\"col-3 text-left mb-4\\\">\\r\\n                        <div class=\\\"custom-checkbox\\\" style=\\\"margin-top:50px; margin-left:30px;\\\">\\r\\n                            <input formControlName=\\\"requiresDeliveryReport\\\" type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"delivery-report\\\" name=\\\"delivery-report\\\">\\r\\n                            <label class=\\\"custom-control-label\\\" for=\\\"delivery-report\\\">Requires a delivery report</label>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"!!f.requiresDeliveryReport.errors && (!!f.requiresDeliveryReport.touched || !!f.requiresDeliveryReport.dirty)\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"!!f.requiresDeliveryReport.errors.required\\\" class=\\\"invalid-text\\\">Requires a delivery report is required</div>\\r\\n                        </div>\\r\\n                        <!-- <label class=\\\"form-input-label\\\">Requires a delivery report</label>\\r\\n            <input class=\\\"input\\\" type=\\\"checkbox\\\" formControlName=\\\"requiresDeliveryReport\\\" /> -->\\r\\n                    </div>\\r\\n                    <div class=\\\"col-4 text-left mb-4\\\">\\r\\n                        <div class=\\\"custom-checkbox\\\" style=\\\"margin-top:50px; margin-left:30px;\\\">\\r\\n                            <input formControlName=\\\"canAddFakeSenders\\\" type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"custom-senders\\\" name=\\\"custom-senders\\\">\\r\\n                            <label class=\\\"custom-control-label\\\" for=\\\"custom-senders\\\">ِAllow Custom Sender Names</label>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"!!f.canAddFakeSenders.errors && (!!f.canAddFakeSenders.touched || !!f.canAddFakeSenders.dirty)\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"!!f.canAddFakeSenders.errors.required\\\" class=\\\"invalid-text\\\">Allow Custom Sender Names is required</div>\\r\\n                        </div>\\r\\n                        <!-- <label class=\\\"form-input-label\\\">Can Add Fake Senders</label>\\r\\n            <input class=\\\"input\\\" type=\\\"checkbox\\\" formControlName=\\\"canAddFakeSenders\\\" /> -->\\r\\n                    </div>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row mt-4\\\">\\r\\n        <div class=\\\"col-12 text-center\\\">\\r\\n            <a *ngIf=\\\"appProfile.appProfileId == null\\\" class=\\\"button button-green mr-2 \\\" (click)=\\\"createAppProfile()\\\">\\r\\n        Create App Profile\\r\\n      </a>\\r\\n            <a *ngIf=\\\"appProfile.appProfileId != null\\\" class=\\\"button button-green mr-2 \\\" (click)=\\\"updateAppProfile()\\\">\\r\\n        Save App Profile\\r\\n      </a>\\r\\n            <a class=\\\"button button-black mr-2 \\\" style=\\\"color:#fff;\\\" (click)=\\\"cancel()\\\">\\r\\n        Cancel\\r\\n      </a>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { AppProfileModel } from 'src/app/shared/models/app-profile-model';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AppProfilesService } from '../app-profiles.service';\r\nimport { FormGroup, FormControl, FormBuilder, Validators, ValidatorFn, AbstractControl, ValidationErrors } from '@angular/forms';\r\nimport { NdpMessageService } from 'src/app/shared/services/ndp-message.service';\r\n\r\n\r\n@Component({\r\n  selector: 'ndp-app-profiles-add-edit',\r\n  templateUrl: './app-profiles-add-edit.component.html',\r\n  styleUrls: ['./app-profiles-add-edit.component.css']\r\n})\r\nexport class AppProfilesAddEditComponent implements OnInit {\r\n  @Input() appProfileID: number;\r\n  mainForm: FormGroup;\r\n  appProfile: AppProfileModel;\r\n  submitted = false;\r\n  appProfileNames: Array<String>;\r\n  constructor(private appProfilesService: AppProfilesService,\r\n    private messageService: NdpMessageService,\r\n    private router: Router,\r\n    private route: ActivatedRoute, private formBuilder: FormBuilder) { }\r\n  get f() { return this.mainForm.controls; }\r\n  ngOnInit() {\r\n\r\n    this.appProfilesService.list().subscribe(template => {\r\n      this.appProfileNames = new Array<String>();\r\n      template.responsePayload.forEach(app => {\r\n        this.appProfileNames.push(app.appProfileName);\r\n      });\r\n      console.log('disallowedNames ', this.appProfileNames);\r\n    });\r\n\r\n    this.mainForm = this.formBuilder.group({\r\n      appProfileId: [null],\r\n      appProfileName: [null, [Validators.required, Validators.maxLength(25), this.nonDuplicte()]],\r\n      description: [null, [Validators.required, Validators.maxLength(500),]],\r\n      maximumDailyQuota: [null, [Validators.required, Validators.min(1)]],\r\n      timeWindowStart: [null],\r\n      timeWindowEnd: [null],\r\n      maxThroughput: [null, [Validators.required, Validators.min(1)]],\r\n      numberOfSessions: [null, [Validators.required, Validators.min(1)]],\r\n      requiresDeliveryReport: [false, Validators.required],\r\n      canAddFakeSenders: [false, Validators.required],\r\n      // appProfileNameEdit : new FormControl()\r\n    }, {\r\n      validator: [this.greaterValidator('timeWindowEnd', 'timeWindowStart')\r\n        , this.requiredValidator('timeWindowEnd', 'timeWindowStart'), this.requiredValidator('timeWindowStart', 'timeWindowEnd')]\r\n    });\r\n\r\n    if (this.appProfileID == null && sessionStorage.getItem('sessionAppProfileId') != null) {\r\n      this.appProfileID = +sessionStorage.getItem('sessionAppProfileId');\r\n      sessionStorage.removeItem('sessionAppProfileId');\r\n    }\r\n    if (this.appProfileID != null) {\r\n      this.appProfile = new AppProfileModel();\r\n      this.appProfile.appProfileId = this.appProfileID;\r\n      this.appProfilesService.get(this.appProfile).subscribe(res => {\r\n        this.appProfile = res.responsePayload;\r\n        debugger;\r\n        this.mainForm.setValue({\r\n          appProfileId: this.appProfileID,\r\n          appProfileName: this.appProfile.appProfileName,\r\n          description: this.appProfile.description,\r\n          maximumDailyQuota: this.appProfile.maximumDailyQuota,\r\n          timeWindowStart: this.appProfile.timeWindowStart ? new Date(this.appProfile.timeWindowStart) : null,\r\n          timeWindowEnd: this.appProfile.timeWindowStart ? new Date(this.appProfile.timeWindowEnd) : null,\r\n          maxThroughput: this.appProfile.maxThroughput,\r\n          numberOfSessions: this.appProfile.numberOfSessions,\r\n          requiresDeliveryReport: this.appProfile.requiresDeliveryReport,\r\n          canAddFakeSenders: this.appProfile.canAddFakeSenders,\r\n        });\r\n        //this.mainForm.setValidators(this.greaterValidator('timeWindowEnd', 'timeWindowStart'));\r\n      });\r\n      debugger;\r\n      this.mainForm.get('appProfileName').clearValidators();\r\n      this.mainForm.get('appProfileName').setValidators(Validators.required);\r\n      this.mainForm.get('appProfileName').markAsDirty();\r\n    } else {\r\n      this.appProfile = new AppProfileModel();\r\n    }\r\n\r\n  }\r\n\r\n  nonDuplicte(): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: boolean } | null => {\r\n      let found = false;\r\n      if (this.appProfileNames) {\r\n        this.appProfileNames.forEach(name => {\r\n          if (name.trim().toLowerCase() === control.value.trim().toLowerCase()) {\r\n            found = true;\r\n          }\r\n        });\r\n        if (found) {\r\n          return { 'duplicate': true };\r\n        }\r\n        return null;\r\n      }\r\n    };\r\n  }\r\n\r\n  checkBeforeDate(): boolean {\r\n    let start = new Date(this.mainForm.get(\"timeWindowStart\").value);\r\n    let end = new Date(this.mainForm.get(\"timeWindowEnd\").value);\r\n    if (start >= end) { return false; }\r\n    return true;\r\n\r\n  }\r\n\r\n  createAppProfile() {\r\n    this.appProfilesService.scrollIfFormHasErrors(this.mainForm);\r\n    for (const i in this.mainForm.controls) {\r\n      if (this.mainForm.controls[i]) { this.mainForm.controls[i].markAsTouched(); }\r\n    }\r\n    this.submitted = true;\r\n    // console.log(this.appProfile);\r\n    if (this.mainForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.appProfilesService.create(this.mainForm.value).subscribe(res => {\r\n      if (res.status === 0) {\r\n        this.router.navigate(['appProfile']);\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n\r\n  updateAppProfile() {\r\n    this.appProfilesService.scrollIfFormHasErrors(this.mainForm);\r\n    for (const i in this.mainForm.controls) {\r\n      if (this.mainForm.controls[i]) { this.mainForm.controls[i].markAsTouched(); }\r\n    }\r\n    this.submitted = true;\r\n    if (this.mainForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.appProfilesService.update(this.mainForm.value).subscribe(res => {\r\n      if (res.status === 0) {\r\n        this.router.navigate(['appProfile']);\r\n      }\r\n    });\r\n\r\n\r\n\r\n  }\r\n\r\n  greaterValidator(endControlName: string, startControlName: string): ValidatorFn {\r\n    return (formGroup: FormGroup): ValidationErrors => {\r\n      const control = formGroup.controls[endControlName];\r\n      const matchingControl = formGroup.controls[startControlName];\r\n      if (control.value !== null) {\r\n        const options = { hour12: false };\r\n        const startTime = new Date(control.value);\r\n        const endTime = new Date(matchingControl.value);\r\n        console.log('startTime => ',startTime.toLocaleTimeString('en-EG', options));\r\n        console.log('endTime => ',endTime.toLocaleTimeString('en-EG', options));\r\n        if (startTime.toLocaleTimeString('en-EG', options) <= endTime.toLocaleTimeString('en-EG', options)) {\r\n          control.setErrors({ mustBeAfter: true });\r\n        } else {\r\n          let errors = control.errors;\r\n          if (errors && errors['mustBeAfter']) {\r\n            delete errors['mustBeAfter'];\r\n            if (Object.keys(errors).length === 0) {\r\n              errors = null;\r\n            }\r\n          }\r\n          control.setErrors(errors);\r\n        }\r\n      }\r\n      return;\r\n    };\r\n  }\r\n\r\n  requiredValidator(control1: string, control2: string): ValidatorFn {\r\n    return (formGroup: FormGroup): ValidationErrors => {\r\n      const control = formGroup.controls[control1];\r\n      const matchingControl = formGroup.controls[control2];\r\n      if (control.value != null && matchingControl.value == null) {\r\n        matchingControl.markAsTouched();\r\n        matchingControl.setErrors({ required: true });\r\n      } else {\r\n        let errors = matchingControl.errors;\r\n        if (errors && errors['required']) {\r\n          delete errors['required'];\r\n          if (Object.keys(errors).length === 0) {\r\n            errors = null;\r\n          }\r\n        }\r\n        matchingControl.setErrors(errors);\r\n      }\r\n      return;\r\n    };\r\n  }\r\n\r\n  cancel() {\r\n    this.router.navigate(['appProfile']);\r\n  }\r\n}\r\n","module.exports = \".ngx-pagination {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.item-title .id {\\r\\n    color: #464852;\\r\\n    margin-right: 60px;\\r\\n}\\r\\n\\r\\n.description-item-sender {\\r\\n    flex: 0 0 25%;\\r\\n    max-width: 25%; }\\r\\n\\r\\n/* \\r\\n    .dropdown {\\r\\n        position: absolute;\\r\\n        z-index: 500;\\r\\n        right: 5%;\\r\\n        margin-top: 15px;\\r\\n        padding: 5px 0px;\\r\\n        background: #fff;\\r\\n        color: #333;\\r\\n        border-radius: 5px;\\r\\n        box-shadow: 0 0 5px #a3d94e94;\\r\\n        bottom: -25px;\\r\\n    } */\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLXByb2ZpbGVzL2FwcC1wcm9maWxlcy1saXN0L2FwcC1wcm9maWxlcy1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2Qsa0JBQWtCO0FBQ3RCOztBQUdBO0lBRUksYUFBYTtJQUNiLGNBQWMsRUFBRTs7QUFDcEI7Ozs7Ozs7Ozs7OztPQVlPIiwiZmlsZSI6InNyYy9hcHAvYXBwLXByb2ZpbGVzL2FwcC1wcm9maWxlcy1saXN0L2FwcC1wcm9maWxlcy1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubmd4LXBhZ2luYXRpb24ge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4uaXRlbS10aXRsZSAuaWQge1xyXG4gICAgY29sb3I6ICM0NjQ4NTI7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDYwcHg7XHJcbn1cclxuXHJcblxyXG4uZGVzY3JpcHRpb24taXRlbS1zZW5kZXIge1xyXG4gICAgLW1zLWZsZXg6IDAgMCAyNSU7XHJcbiAgICBmbGV4OiAwIDAgMjUlO1xyXG4gICAgbWF4LXdpZHRoOiAyNSU7IH1cclxuLyogXHJcbiAgICAuZHJvcGRvd24ge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB6LWluZGV4OiA1MDA7XHJcbiAgICAgICAgcmlnaHQ6IDUlO1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDE1cHg7XHJcbiAgICAgICAgcGFkZGluZzogNXB4IDBweDtcclxuICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gICAgICAgIGNvbG9yOiAjMzMzO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgICAgICBib3gtc2hhZG93OiAwIDAgNXB4ICNhM2Q5NGU5NDtcclxuICAgICAgICBib3R0b206IC0yNXB4O1xyXG4gICAgfSAqLyJdfQ== */\"","module.exports = \"<div (click)=\\\"dropDownClose()\\\" class=\\\"page-content groups\\\">\\r\\n  <div class=\\\"groups\\\">\\r\\n    <div class=\\\"row no-gutters\\\">\\r\\n      <div class=\\\"p-col-5\\\">\\r\\n        <div class=\\\"page-title\\\">\\r\\n          App Profiles\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"p-col-7 col-lg-12 text-right\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"p-col-8\\\">\\r\\n            <div class=\\\"search-input\\\">\\r\\n              <input [(ngModel)]=\\\"filter\\\" type=\\\"text\\\" class=\\\"\\\" placeholder=\\\"Search By Profile Name\\\">\\r\\n              <i class=\\\"icon-search icon\\\"></i>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"p-col-4\\\">\\r\\n            <a ndpAuthorize [targetUrl]=\\\"authorizationUrl+ defines.CREATE\\\" (successHandler)=\\\"editProfile(null)\\\" \\r\\n              class=\\\"button button-green\\\">\\r\\n              Add App Profile\\r\\n            </a>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"appProfilesList\\\">\\r\\n      <div *ngIf=\\\"setFilteredAppProfileList(appProfilesList | appProfileAppProfileNameFilter:filter)\\\"></div>\\r\\n      <div class=\\\"campaigns-list\\\"\\r\\n        *ngFor=\\\"let appProfile of filteredAppProfileList | orderBy: key | paginate: { itemsPerPage: perPage, currentPage: p }; let i = index\\\">\\r\\n        <div *ngIf=\\\"(dropDownId === appProfile.appProfileId)\\\" [ngClass]=\\\"{'hide':!dropDown}\\\" class=\\\"dropdown\\\">\\r\\n          <ul class=\\\"list\\\">\\r\\n            <li ndpAuthorize [targetUrl]=\\\"authorizationUrl+ defines.UPDATE\\\" [targetId]=\\\"appProfile.appProfileId\\\"\\r\\n            (successHandler)=\\\"editProfile(appProfile.appProfileId)\\\" (click)=\\\"$event.stopPropagation();\\\"><span class=\\\"fas fa-edit\\\"></span>Edit\\r\\n            </li>\\r\\n            <li ndpAuthorize [targetUrl]=\\\"authorizationUrl+ defines.DELETE\\\" [targetId]=\\\"appProfile.appProfileId\\\"\\r\\n            (successHandler)=\\\"showConfirmDialog(appProfile)\\\" (click)=\\\"$event.stopPropagation();\\\"><span class=\\\"fas fa-trash\\\"></span>Delete</li>\\r\\n          </ul>\\r\\n        </div>\\r\\n        <div class=\\\"row confirmDialog animated fadeIn faster text-center\\\"\\r\\n          *ngIf=\\\"showConfirm && (selectedAppProfile.appProfileId == appProfile.appProfileId)\\\">\\r\\n          <div class=\\\"col-12\\\">Are you sure you want to delete <b>{{appProfile.appProfileName}}</b> profile ?</div>\\r\\n          <div class=\\\"col-12 mt-2\\\">\\r\\n            <button class=\\\"button button-green mr-4\\\" (click)=\\\"deleteProfile(appProfile.appProfileId)\\\">DELETE</button>\\r\\n            <button class=\\\"button button-black \\\" (click)=\\\"hideConfirm()\\\">CANCEL</button>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"canView\\\" class=\\\"campaigns-item no-gutters section animated faster fadeIn row no-gutters\\\">\\r\\n          <div class=\\\"item-title col-3 my-auto\\\">\\r\\n            <span class=\\\"heading-6 title-robotomedium pt-2\\\">\\r\\n              {{appProfile.appProfileName | titlecase}}\\r\\n            </span>\\r\\n            <div class=\\\"value\\\">\\r\\n              {{appProfile.description}}\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"campaigns-item-sender col-2\\\">\\r\\n            <div class=\\\"property\\\">\\r\\n              ID\\r\\n            </div>\\r\\n            <div class=\\\"value\\\">\\r\\n              {{appProfile.appProfileId}}\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"campaigns-item-sender col-2\\\">\\r\\n            <div class=\\\"property\\\">\\r\\n              Max Daily Quota\\r\\n            </div>\\r\\n            <div class=\\\"value\\\">\\r\\n              {{appProfile.maximumDailyQuota}}\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"campaigns-item-sender col-2\\\">\\r\\n            <div class=\\\"property\\\">\\r\\n              No Of Sessions\\r\\n            </div>\\r\\n            <div class=\\\"value\\\">\\r\\n              {{appProfile.numberOfSessions}}\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col text-right my-auto\\\">\\r\\n            <a (click)=\\\"dropDownOpen(appProfile,$event)\\\" class=\\\"campaigns-item-actions-link\\\">\\r\\n              <i class=\\\"icon-dropdown-dots icon icon-lg icon-gray\\\"></i>\\r\\n            </a>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"filteredAppProfileList.length == 0 && inialized\\\">\\r\\n      <div class=\\\"row mt-4 animated fadeIn fast\\\">\\r\\n        <div class=\\\"col-12 mt-4 text-center\\\">\\r\\n          <div class=\\\"col-12 mt-4 fas fa-user-slash fa-7x faded-grey\\\"></div>\\r\\n          <div class=\\\"col-12 mt-4 page-title faded-grey\\\"><b>No App Profiles Found</b></div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"ngx-pagination\\\">\\r\\n      <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AppProfilesService } from '../app-profiles.service';\r\nimport { AppProfileModel } from 'src/app/shared/models/app-profile-model';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { MessageService } from 'primeng/api';\r\nimport { NdpMessageService } from 'src/app/shared/services/ndp-message.service';\r\nimport { User } from 'src/app/shared/models/user-model';\r\nimport { Defines } from 'src/app/shared/static/defines';\r\n\r\n\r\n@Component({\r\n  selector: 'ndp-app-profiles-list',\r\n  templateUrl: './app-profiles-list.component.html',\r\n  styleUrls: ['./app-profiles-list.component.css'],\r\n  providers: [MessageService]\r\n})\r\nexport class AppProfilesListComponent implements OnInit {\r\n\r\n  appProfilesList: Array<AppProfileModel>;\r\n  filteredAppProfileList: Array<AppProfileModel>;\r\n  inialized = false;\r\n  dropDown: boolean;\r\n  dropDownClick: number;\r\n  dropDownId: number;\r\n  selectedAppProfile: AppProfileModel;\r\n  /*=============================*/\r\n  /* Pagination Filtering & Sorting*/\r\n  p: number = 1;\r\n  perPage: number = 4;\r\n  /*FILTERING*/\r\n  filter: string = '';\r\n  /*SORTING*/\r\n  key: string = 'appProfileName';\r\n  reverse: boolean = true;\r\n\r\n  //Authorization Vars\r\n  authorizationUrl: string;\r\n  defines = Defines.API_CRUD;\r\n  //Access Levels attributes\r\n  user: User;\r\n  canCreate: boolean;\r\n  canEdit: boolean;\r\n  canView: boolean;\r\n  canDelete: boolean;\r\n  showConfirm: boolean;\r\n  sort(key) {\r\n    this.key = key;\r\n  }\r\n  /*=============================*/\r\n  constructor(private appProfilesService: AppProfilesService, private router: Router,\r\n    private ndpMessageService: NdpMessageService, private messageService: MessageService) { }\r\n\r\n  ngOnInit() {\r\n    this.authorizationUrl = this.appProfilesService.authorizationUrl;\r\n    this.appProfilesService.list().subscribe(template => {\r\n      if (template.status === 0) {\r\n        this.appProfilesList = template.responsePayload;\r\n        this.inialized = true;\r\n        this.filteredAppProfileList = this.appProfilesList;\r\n        this.setAccessLevel();\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n  setAccessLevel() {\r\n    this.user = JSON.parse(localStorage.getItem(Defines.SESSION_KEYS.userModel));\r\n    this.user.privilegeList.forEach(rolePrivilege => {\r\n      switch (rolePrivilege.privilegeId) {\r\n        case Defines.PRIVILEGES.APP_PROFILE.EDIT: {\r\n          this.canEdit = true;\r\n          break;\r\n        } case Defines.PRIVILEGES.APP_PROFILE.LIST: {\r\n          this.canView = true;\r\n          break;\r\n        } case Defines.PRIVILEGES.APP_PROFILE.DELETE: {\r\n          this.canDelete = true;\r\n          break;\r\n        } case Defines.PRIVILEGES.APP_PROFILE.CREATE: {\r\n          this.canCreate = true;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    )\r\n  }\r\n\r\n  dropDownOpen(appProfileModle: AppProfileModel, event) {\r\n    this.dropDownClick = 0;\r\n    this.selectedAppProfile = appProfileModle;\r\n    this.dropDownId = appProfileModle.appProfileId;\r\n    this.dropDown = true;\r\n    event.stopPropagation();\r\n  }\r\n\r\n  dropDownClose() {\r\n    this.dropDownClick++;\r\n    if (this.dropDown && this.dropDownClick > 1) {\r\n      this.dropDown = false;\r\n      this.dropDownId = null;\r\n    }\r\n  }\r\n\r\n  clickedOut(event) {\r\n    this.dropDownClose();\r\n  }\r\n\r\n  editProfile(appProfileId: number) {\r\n    if (appProfileId != null) {\r\n      sessionStorage.setItem('sessionAppProfileId', appProfileId + '');\r\n    }\r\n    this.router.navigate(['/addEditAppProfile']);\r\n  }\r\n\r\n  deleteProfile(appProfileId: number) {\r\n    this.appProfilesService.delete(this.selectedAppProfile).subscribe(resp => {\r\n      if (resp.status === 0) {\r\n        this.appProfilesList = this.appProfilesList.filter(x => x.appProfileId !== appProfileId);\r\n      }\r\n    });\r\n    this.dropDownClose();\r\n    this.hideConfirm();\r\n  }\r\n  showConfirmDialog(appProfile: AppProfileModel) {\r\n    this.showConfirm = true;\r\n    this.selectedAppProfile = appProfile;\r\n  }\r\n  hideConfirm() {\r\n    this.showConfirm = false;\r\n  }\r\n  // onConfirm() {\r\n  //   this.deleteProfile();\r\n  //   this.dropDownClose();\r\n  //   this.messageService.clear('c');\r\n  // }\r\n\r\n  onReject() {\r\n    this.messageService.clear('c');\r\n    this.dropDownClose();\r\n  }\r\n\r\n  setFilteredAppProfileList(filtered: AppProfileModel[]) {\r\n    this.filteredAppProfileList = filtered;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AppProfilesListComponent } from './app-profiles-list/app-profiles-list.component';\r\nimport { AppProfilesAddEditComponent } from './app-profiles-add-edit/app-profiles-add-edit.component';\r\nimport { AppProfilesService } from './app-profiles.service';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { OrderModule } from 'ngx-order-pipe';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\nimport { AppProfileAppProfileNameFilter } from '../shared/Pipes/appprofile-appprofilename-filter.pipe';\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [AppProfilesListComponent,\r\n    AppProfilesAddEditComponent,AppProfileAppProfileNameFilter],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    FormsModule ,\r\n    ToastModule,\r\n    OrderModule,\r\n    NgxPaginationModule,\r\n    Ng2SearchPipeModule,\r\n    OrderModule,\r\n    ReactiveFormsModule,\r\n    OwlDateTimeModule,\r\n    OwlNativeDateTimeModule\r\n  ], providers: [\r\n    AppProfilesService\r\n  ],\r\n  exports: [AppProfilesListComponent, AppProfilesAddEditComponent]\r\n})\r\nexport class AppProfilesModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { BaseService } from '../shared/services/base-service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AppProfileModel } from '../shared/models/app-profile-model';\r\nimport { Observable } from 'rxjs';\r\nimport { ApiResponse } from '../shared/models/api-response';\r\nimport { ApiRequest } from '../shared/models/api-request';\r\nimport { Defines } from '../shared/static/defines';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppProfilesService extends BaseService {\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n    super(httpClient);\r\n    console.log(\"App Profile Service\" + this.backendUrl);\r\n  }\r\n\r\n  initAuthorizationUrl() {\r\n    this.authorizationUrl += this.secureApi + Defines.API_ENDPOINTS.appprofile;\r\n    console.log(\"Authorization Url =>\", this.authorizationUrl);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  public list(): Observable<ApiResponse<Array<AppProfileModel>>> {\r\n    let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.appprofile + Defines.API_ENDPOINTS.LIST;\r\n    let obs: Observable<any> = this.http.post<ApiResponse<Array<AppProfileModel>>>\r\n      (apiUrl, new ApiRequest(null, \"\"), this.httpOptions);\r\n    return obs;\r\n  }\r\n\r\n  public get(appProfileModel: AppProfileModel): Observable<ApiResponse<AppProfileModel>> {\r\n    let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.appprofile + Defines.API_ENDPOINTS.GET;\r\n    let obs: Observable<any> = this.http.post<ApiResponse<AppProfileModel>>\r\n      (apiUrl, new ApiRequest(appProfileModel, \"\"), this.httpOptions);\r\n    return obs;\r\n  }\r\n\r\n\r\n  public create(appprofile: AppProfileModel): Observable<ApiResponse<any>> {\r\n    let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.appprofile + Defines.API_ENDPOINTS.CREATE;\r\n    let obs: Observable<any> = this.http.post<ApiResponse<any>>\r\n      (apiUrl, new ApiRequest(appprofile, \"\"), this.httpOptions);\r\n    return obs;\r\n  }\r\n\r\n  public update(appprofile: AppProfileModel): Observable<ApiResponse<any>> {\r\n    let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.appprofile + Defines.API_ENDPOINTS.UPDATE;\r\n    let obs: Observable<any> = this.http.post<ApiResponse<any>>\r\n      (apiUrl, new ApiRequest(appprofile, \"\"), this.httpOptions);\r\n    return obs;\r\n  }\r\n  public delete(appprofile: AppProfileModel): Observable<ApiResponse<any>> {\r\n    let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.appprofile + Defines.API_ENDPOINTS.DELETE;\r\n    let obs: Observable<any> = this.http.post<ApiResponse<any>>\r\n      (apiUrl, new ApiRequest(appprofile, \"\"), this.httpOptions);\r\n    return obs;\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<ndp-spinner ></ndp-spinner>\\r\\n<div *ngIf=\\\"isAuthenticated ()\\\" class=\\\"p-col-12 p-md-12 p-col-nogutter\\\">\\r\\n    <ndp-header></ndp-header>\\r\\n</div>\\r\\n<div class=\\\"p-grid\\\" style=\\\"height: 100vh; padding-top: 8.99999vh; max-width: 100vw;\\\">\\r\\n    <div id=\\\"sidem\\\" *ngIf=\\\"isAuthenticated ()\\\" class=\\\"p-col-fixed p-col-nogutter largeM\\\" style=\\\"height: 100%;\\\">\\r\\n        <ndp-sidebar></ndp-sidebar>\\r\\n    </div>\\r\\n    <div class=\\\"p-col\\\">\\r\\n        <!--Current Page-->\\r\\n        <router-outlet></router-outlet>\\r\\n        <!--Status Messages-->\\r\\n        <ndp-message></ndp-message>\\r\\n        <!--Footer-->\\r\\n        <div *ngIf=\\\"isAuthenticated ()\\\" style=\\\"height: 10vh; text-align: center\\\">\\r\\n            <ndp-footer *ngIf=\\\"isAuthenticated ()\\\"></ndp-footer>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<!--class=\\\"p-col-4 p-md-2 p-col-nogutter\\\"  class=\\\"p-col-8 p-md-10\\\"-->\"","import { Component, HostListener, OnInit } from '@angular/core';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { environment } from 'src/environments/environment';\r\nimport { from } from 'rxjs';\r\nimport { Defines } from './shared/static/defines';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n@Component({\r\n  selector: 'ndp-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n  title = 'NDP';\r\n  isAuthenticatedFlag = false;\r\n  constructor() {\r\n    console.log(environment.backendUrl);\r\n  }\r\n\r\n  public isAuthenticated() {\r\n\r\n    if (localStorage.getItem(Defines.SESSION_KEYS.authToken) === null\r\n      || localStorage.getItem(Defines.SESSION_KEYS.authToken) === '') {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, Pipe } from '@angular/core';\r\nimport { CalendarModule } from \"primeng/calendar\"\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { LoginModule } from './login/login.module';\r\nimport { SmsTemplatesModule } from './sms-templates/sms-templates.module';\r\nimport { GroupModule } from './group/group.module';\r\nimport { GeneralModule } from './general/general.module';\r\nimport { NDPRoutingModule } from './ndprouting/ndprouting.module';\r\nimport { HomeModule } from './home/home.module';\r\nimport { CampaignsModule } from './campaigns/campaigns.module';\r\nimport { RolesModule } from './roles/roles.module';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { LoadingInterceptor } from './shared/interceptors/loading-interceptor';\r\nimport { AuthInterceptor } from './shared/interceptors/auth-interceptor';\r\nimport { MessageInterceptor } from './shared/interceptors/message-interceptor';\r\nimport { NdpspinnerModule } from './ndpspinner/ndpspinner.module';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { AccountModule } from './account/account.module';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { EntityModule } from './entity/entity.module';\r\nimport { SignupModule } from './sign-up/signup/signup.module';\r\nimport { AppProfilesModule } from './app-profiles/app-profiles.module';\r\nimport { SmscModule } from './smsc/smsc.module';\r\nimport { ReportModule } from './reports/reports.module';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\nexport const httpInterceptors = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true },\r\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n  { provide: HTTP_INTERCEPTORS, useClass: MessageInterceptor, multi: true },\r\n];\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    // HabdComponentComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    CalendarModule,\r\n    BrowserAnimationsModule,\r\n    GeneralModule,\r\n    LoginModule,\r\n    SmsTemplatesModule,\r\n    GroupModule,\r\n    NDPRoutingModule,\r\n    HomeModule,\r\n    CampaignsModule,\r\n    RolesModule,\r\n    HttpClientModule,\r\n    NdpspinnerModule,\r\n    DropdownModule,\r\n    SharedModule,\r\n    AccountModule,\r\n    EntityModule,\r\n    SignupModule,\r\n    ReportModule,\r\n    AppProfilesModule, SmscModule],\r\n  providers: [httpInterceptors, CookieService],\r\n  bootstrap: [AppComponent],\r\n  exports: [GeneralModule]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".cdk-overlay-container {\\r\\n    position: fixed;\\r\\n    float: left !important;\\r\\n    z-index: 1000;\\r\\n}\\r\\n\\r\\n.cdk-overlay-transparent-backdrop, .cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing {\\r\\n    opacity: 0.3 !important;\\r\\n    background: #000 !important;\\r\\n}\\r\\n\\r\\n.owl-dt-calendar-table .owl-dt-calendar-cell-selected {\\r\\n    color: rgba(255,255,255,.85);\\r\\n    background-color: #83c51b !important;\\r\\n}\\r\\n\\r\\n.fixed-row{\\r\\n    position: fixed;\\r\\n    z-index: 10;\\r\\n    width: 80%;\\r\\n    right: -240px;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2FtcGFpZ25zL2FkZC1lZGl0LWNhbXBhaWduL2FkZC1lZGl0LWNhbXBhaWduLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0lBQ2Ysc0JBQXNCO0lBQ3RCLGFBQWE7QUFDakI7O0FBRUE7SUFDSSx1QkFBdUI7SUFDdkIsMkJBQTJCO0FBQy9COztBQUVBO0lBQ0ksNEJBQTRCO0lBQzVCLG9DQUFvQztBQUN4Qzs7QUFFQTtJQUNJLGVBQWU7SUFDZixXQUFXO0lBQ1gsVUFBVTtJQUNWLGFBQWE7QUFDakIiLCJmaWxlIjoic3JjL2FwcC9jYW1wYWlnbnMvYWRkLWVkaXQtY2FtcGFpZ24vYWRkLWVkaXQtY2FtcGFpZ24uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jZGstb3ZlcmxheS1jb250YWluZXIge1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgZmxvYXQ6IGxlZnQgIWltcG9ydGFudDtcclxuICAgIHotaW5kZXg6IDEwMDA7XHJcbn1cclxuXHJcbi5jZGstb3ZlcmxheS10cmFuc3BhcmVudC1iYWNrZHJvcCwgLmNkay1vdmVybGF5LXRyYW5zcGFyZW50LWJhY2tkcm9wLmNkay1vdmVybGF5LWJhY2tkcm9wLXNob3dpbmcge1xyXG4gICAgb3BhY2l0eTogMC4zICFpbXBvcnRhbnQ7XHJcbiAgICBiYWNrZ3JvdW5kOiAjMDAwICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5vd2wtZHQtY2FsZW5kYXItdGFibGUgLm93bC1kdC1jYWxlbmRhci1jZWxsLXNlbGVjdGVkIHtcclxuICAgIGNvbG9yOiByZ2JhKDI1NSwyNTUsMjU1LC44NSk7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjODNjNTFiICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5maXhlZC1yb3d7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICB6LWluZGV4OiAxMDtcclxuICAgIHdpZHRoOiA4MCU7XHJcbiAgICByaWdodDogLTI0MHB4O1xyXG59XHJcblxyXG4iXX0= */\"","module.exports = \"<div class=\\\"page-content campaign\\\">\\r\\n  <!-- <div style=\\\"position: fixed; bottom: 0; left: 0; width: 100%; background: #b17171; z-index: 999;\\\">\\r\\n    {{campaignForm.value|json}}\\r\\n    <br/>\\r\\n    {{scheduleFlag}} + {{campaignForm.invalid|json}} + {{sendInSpecificTime}}\\r\\n  </div> -->\\r\\n  <div class=\\\"campaigns\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-3\\\">\\r\\n        <div *ngIf=\\\"mode==0\\\" class=\\\"page-title\\\">\\r\\n          Add New Campaign\\r\\n        </div>\\r\\n        <div *ngIf=\\\"mode==1\\\" class=\\\"page-title\\\">\\r\\n          Edit Campaign\\r\\n        </div>\\r\\n        <div *ngIf=\\\"mode==2\\\" class=\\\"page-title\\\">\\r\\n          Clone Campaign\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!editAfterCampaignStart\\\" style=\\\"margin-top:10px;\\\">\\r\\n          <form [formGroup]=\\\"campaignForm\\\">\\r\\n            <label class=\\\"switch\\\">\\r\\n              <input formControlName=\\\"isInternal\\\" class=\\\"checkbox\\\" type=\\\"checkbox\\\" disabled/>\\r\\n              <span class=\\\"slider\\\"></span>\\r\\n            </label>\\r\\n            <label style=\\\"margin-left:10px; font-size: 16px; color: #464852;\\\">Internal Campaign</label>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6 col-md-12 text-center campaign-steps\\\">\\r\\n        <div (click)=\\\"moveToSchedule()\\\" class=\\\"campaign-steps-item\\\">\\r\\n          <div class=\\\"campaign-steps-icon\\\">\\r\\n            <span class=\\\"icon-calender icon \\\"></span>\\r\\n          </div>\\r\\n          <div class=\\\"campaign-steps-text\\\">\\r\\n            Scheduling\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div (click)=\\\"moveToPace()\\\" class=\\\"campaign-steps-item\\\">\\r\\n          <div class=\\\"campaign-steps-icon\\\">\\r\\n            <span class=\\\"icon-clock icon \\\"></span>\\r\\n          </div>\\r\\n          <div class=\\\"campaign-steps-text\\\">\\r\\n            Sending Pace\\r\\n          </div>\\r\\n        </div>\\r\\n        <div (click)=\\\"moveToDials()\\\" class=\\\"campaign-steps-item\\\">\\r\\n          <div class=\\\"campaign-steps-icon\\\">\\r\\n            <span class=\\\"icon-users icon \\\"></span>\\r\\n          </div>\\r\\n          <div class=\\\"campaign-steps-text\\\">\\r\\n            Targeted Dials\\r\\n          </div>\\r\\n        </div>\\r\\n        <div (click)=\\\"moveToSMS()\\\" class=\\\"campaign-steps-item\\\">\\r\\n          <div class=\\\"campaign-steps-icon\\\">\\r\\n            <span class=\\\"icon-arrow icon sms\\\"></span>\\r\\n          </div>\\r\\n          <div class=\\\"campaign-steps-text\\\">\\r\\n            SMS Script\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-3 my-auto  text-right\\\">\\r\\n        <form [formGroup]=\\\"campaignForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n          <button type=\\\"submit\\\" class=\\\"button button-green\\\">\\r\\n            Save Campaign\\r\\n          </button>\\r\\n        </form>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"section campaign-setting\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-5\\\">\\r\\n        <form [formGroup]=\\\"campaignForm\\\">\\r\\n          <div class=\\\"form-input\\\">\\r\\n            <label class=\\\"form-input-label\\\">Campaign Name</label>\\r\\n            <input nfSpecialCharacters   class=\\\"input\\\" formControlName=\\\"name\\\"\\r\\n              [ngClass]=\\\"{ 'invalid-input': cf.name.errors && (cf.name.touched || cf.name.dirty || cf.name.value !== '') }\\\">\\r\\n            <div *ngIf=\\\"!!cf.name.errors && (!!cf.name.touched || !!cf.name.dirty || !!cf.name.value)\\\">\\r\\n              <div *ngIf=\\\"!!cf.name.errors.required\\\" class=\\\"invalid-text\\\">Campaign name is required</div>\\r\\n              <div *ngIf=\\\"!!cf.name.errors.minlength\\\" class=\\\"invalid-text\\\">Campaign name must be at least 10\\r\\n                characters</div>\\r\\n              <div *ngIf=\\\"!!cf.name.errors.maxlength\\\" class=\\\"invalid-text\\\">Campaign name must not exceed 25\\r\\n                characters</div>\\r\\n                <div class=\\\"invalid-text\\\" *ngIf=\\\"!cf.name.errors.required && !!cf.name.errors.nfSpecialCharacters\\\" >Campaign Name Must be valid</div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n        <!--<button class=\\\"button button-green\\\" type=\\\"submit\\\">Test</button>  -->\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"!editAfterCampaignStart\\\" class=\\\"col-2\\\">\\r\\n        <form [formGroup]=\\\"campaignForm\\\">\\r\\n\\r\\n          <div class=\\\"form-input form-selectbox\\\">\\r\\n            <label class=\\\"form-input-label\\\">Priority</label>\\r\\n            <select formControlName=\\\"priority\\\" class=\\\"selectbox\\\">\\r\\n              <option value=\\\"1\\\">High</option>\\r\\n              <option value=\\\"2\\\" selected>Medium</option>\\r\\n              <option value=\\\"3\\\">Low</option>\\r\\n            </select>\\r\\n            <div class=\\\"form-selectbox-icon\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!editAfterCampaignStart\\\" class=\\\"col-2 offset-1\\\">\\r\\n        <div class=\\\"form-input form-radiobtn\\\">\\r\\n          <div class=\\\"custom-radio\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"sendNow\\\" name=\\\"radio\\\" (click)=\\\"setScheduled(false)\\\"\\r\\n              [checked]='!scheduleFlag'>\\r\\n            <label class=\\\"custom-control-label\\\" for=\\\"sendNow\\\">Send Now</label>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!editAfterCampaignStart\\\" class=\\\"col-2\\\">\\r\\n        <div class=\\\"form-input form-radiobtn\\\">\\r\\n          <div class=\\\"custom-radio\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"scheduled\\\" name=\\\"radio\\\" (click)=\\\"setScheduled(true)\\\"\\r\\n              [checked]='scheduleFlag'>\\r\\n            <label class=\\\"custom-control-label\\\" for=\\\"scheduled\\\">Schedule for Later</label>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"scheduleFlag\\\" class=\\\"section\\\" #scheduleView id=\\\"scheduleView\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-12 text-left section-title\\\">\\r\\n        Scheduling\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"scheduleFlag\\\" class=\\\"row \\\">\\r\\n      <div *ngIf=\\\"!editAfterCampaignStart\\\" class=\\\"col-3\\\">\\r\\n        <form [formGroup]=\\\"campaignForm\\\">\\r\\n          <div class=\\\"form-input form-input-timepicker \\\">\\r\\n            <label class=\\\"form-input-label\\\">Start date </label>\\r\\n            <input formControlName=\\\"startDate\\\" [owlDateTimeTrigger]=\\\"dt_start_date\\\" [owlDateTime]=\\\"dt_start_date\\\"\\r\\n              class=\\\"input\\\"\\r\\n              [ngClass]=\\\"{ 'invalid-input': cf.startDate.errors && (cf.startDate.touched || cf.startDate.dirty || cf.startDate.value !== '')}\\\">\\r\\n            <owl-date-time [pickerType]=\\\"'calendar'\\\" [hour12Timer]=\\\"'true'\\\" #dt_start_date></owl-date-time>\\r\\n            <div [owlDateTimeTrigger]=\\\"dt_start_date\\\" class=\\\"icon-calender-input icon-gray icon-1\\\"></div>\\r\\n            <div\\r\\n              *ngIf=\\\"!!cf.startDate.errors && (!!cf.startDate.touched || !!cf.startDate.dirty || campaignForm.get('startDate').value !== '')\\\">\\r\\n              <div *ngIf=\\\"!!cf.startDate.errors.dateInvalid\\\" class=\\\"invalid-text\\\">Must be in the Future</div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!editAfterCampaignStart\\\" class=\\\"col-3\\\">\\r\\n        <form [formGroup]=\\\"campaignForm\\\">\\r\\n          <div class=\\\"form-input form-input-timepicker\\\">\\r\\n            <label class=\\\"form-input-label\\\">Start time</label>\\r\\n            <input formControlName=\\\"startTime\\\" [owlDateTimeTrigger]=\\\"dt_start_time\\\" [owlDateTime]=\\\"dt_start_time\\\"\\r\\n              class=\\\"input\\\"\\r\\n              [ngClass]=\\\"{ 'invalid-input': cf.startTime.errors && (cf.startTime.touched || cf.startTime.dirty || cf.startDate.value !== '')}\\\">\\r\\n            <owl-date-time [pickerType]=\\\"'timer'\\\" [hour12Timer]=\\\"'true'\\\" #dt_start_time></owl-date-time>\\r\\n            <div [owlDateTimeTrigger]=\\\"dt_start_time\\\" class=\\\"icon-time icon-gray icon-1\\\"></div>\\r\\n            <div\\r\\n              *ngIf=\\\"!!cf.startTime.errors && (!!cf.startTime.touched || !!cf.startTime.dirty || campaignForm.get('startDate').value !== '')\\\">\\r\\n              <div *ngIf=\\\"!!cf.startTime.errors.timeInvalid\\\" class=\\\"invalid-text\\\">Must be in the Future</div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"col-3\\\">\\r\\n        <form *ngIf=\\\"campaignForm.controls\\\" [formGroup]=\\\"campaignForm\\\">\\r\\n          <div class=\\\"form-input form-input-timepicker\\\">\\r\\n            <label class=\\\"form-input-label\\\">End date</label>\\r\\n            <input [min]=\\\"2019-07-13\\\" formControlName=\\\"endDate\\\" [owlDateTimeTrigger]=\\\"dt_end_date\\\"\\r\\n              [owlDateTime]=\\\"dt_end_date\\\" class=\\\"input\\\"\\r\\n              [ngClass]=\\\"{ 'invalid-input': cf.endDate.errors && (cf.endDate.touched || cf.endDate.dirty || cf.endDate.value !== null)}\\\">\\r\\n            <owl-date-time [pickerType]=\\\"'calendar'\\\" #dt_end_date></owl-date-time>\\r\\n            <div [owlDateTimeTrigger]=\\\"dt_end_date\\\" class=\\\"icon-calender-input icon-gray icon-1\\\"></div>\\r\\n            <div\\r\\n              *ngIf=\\\"!!cf.endDate.errors && (!!cf.endDate.touched || !!cf.endDate.dirty || campaignForm.get('endDate').value !== null )\\\">\\r\\n              <div *ngIf=\\\"!!cf.endDate.errors.mustBeAfter\\\" class=\\\"invalid-text\\\">Can't be before start date</div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"col-3\\\">\\r\\n        <form [formGroup]=\\\"campaignForm\\\">\\r\\n          <div class=\\\"form-input form-input-timepicker\\\">\\r\\n            <label class=\\\"form-input-label\\\">End time</label>\\r\\n            <input   formControlName=\\\"endTime\\\" [owlDateTimeTrigger]=\\\"dt_end_time\\\" [owlDateTime]=\\\"dt_end_time\\\"\\r\\n              class=\\\"input\\\"\\r\\n              [ngClass]=\\\"{ 'invalid-input': cf.endDate.errors && (cf.endDate.touched || cf.endDate.dirty || cf.endDate.value !== null)}\\\">\\r\\n            <owl-date-time [pickerType]=\\\"'timer'\\\" [hour12Timer]=\\\"'true'\\\" #dt_end_time></owl-date-time>\\r\\n            <div [owlDateTimeTrigger]=\\\"dt_end_time\\\" class=\\\"icon-time icon-gray icon-1\\\"></div>\\r\\n            <div\\r\\n              *ngIf=\\\"!!cf.endDate.errors && (!!cf.endDate.touched || !!cf.endDate.dirty || campaignForm.get('endDate').value !== null )\\\">\\r\\n              <div *ngIf=\\\"!!cf.endDate.errors.required\\\" class=\\\"invalid-text\\\">End Time is Required</div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <div *ngIf=\\\"scheduleFlag\\\" class=\\\"row \\\">\\r\\n      <div class=\\\"col-3\\\">\\r\\n        <form class=\\\"pt-5\\\">\\r\\n          <div class=\\\"custom-control custom-checkbox text-muted\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"customCheck\\\" name=\\\"example1\\\"\\r\\n              [(ngModel)]=\\\"sendInSpecificTime\\\" (click)=\\\"toggleSendInSpecificTime()\\\"\\r\\n              [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n            <label class=\\\"custom-control-label\\\" for=\\\"customCheck\\\">Send SMS in specific\\r\\n              time</label>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"sendInSpecificTime\\\" class=\\\"col-3\\\">\\r\\n        <form [formGroup]=\\\"campaignForm\\\">\\r\\n          <div class=\\\"form-input form-input-timepicker form-input-margin\\\">\\r\\n            <label class=\\\"form-input-label\\\">Sending Start time</label>\\r\\n            <input   formControlName=\\\"sendStartTime\\\" [owlDateTimeTrigger]=\\\"dt_specific_start_time\\\"\\r\\n              [owlDateTime]=\\\"dt_specific_start_time\\\" class=\\\"input\\\"\\r\\n              [ngClass]=\\\"{ 'invalid-input': cf.sendStartTime.errors && (cf.sendStartTime.touched || cf.sendStartTime.dirty)}\\\">\\r\\n            <owl-date-time [pickerType]=\\\"'timer'\\\" [hour12Timer]=\\\"'true'\\\" #dt_specific_start_time></owl-date-time>\\r\\n            <div class=\\\"icon-time icon-gray icon-1\\\"></div>\\r\\n            <div *ngIf=\\\"!!cf.sendStartTime.errors && (!!cf.sendStartTime.touched || !!cf.sendStartTime.dirty)\\\">\\r\\n              <div *ngIf=\\\"!!cf.sendStartTime.errors.mustBeAfterTimeWindowStart\\\" class=\\\"invalid-text\\\">Can't be before app profile's time window start [{{entity.timeWindowStart | date :  \\\"hh:mm aa\\\" }}]\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!!cf.sendStartTime.errors.required\\\" class=\\\"invalid-text\\\">Time to start sending SMS is required\\r\\n              </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"!cf.sendStartTime.invalid\\\" class=\\\"campaign-sublabel\\\"> Time to start sending SMS </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"sendInSpecificTime\\\" class=\\\"col-3\\\">\\r\\n        <form [formGroup]=\\\"campaignForm\\\">\\r\\n          <div class=\\\"form-input form-input-timepicker form-input-margin\\\">\\r\\n            <label class=\\\"form-input-label\\\">Sending End time</label>\\r\\n            <input   formControlName=\\\"sendEndTime\\\" [owlDateTimeTrigger]=\\\"dt_specific_end_time\\\"\\r\\n              [owlDateTime]=\\\"dt_specific_end_time\\\" class=\\\"input\\\"\\r\\n              [ngClass]=\\\"{ 'invalid-input': cf.sendEndTime.errors && (cf.sendEndTime.touched || cf.sendEndTime.dirty)}\\\">\\r\\n            <owl-date-time [pickerType]=\\\"'timer'\\\" [hour12Timer]=\\\"'true'\\\" #dt_specific_end_time></owl-date-time>\\r\\n            <div class=\\\"icon-time icon-gray icon-1\\\"></div>\\r\\n            <div *ngIf=\\\"!!cf.sendEndTime.errors && (!!cf.sendEndTime.touched || !!cf.sendEndTime.dirty)\\\">\\r\\n              <div *ngIf=\\\"!!cf.sendEndTime.errors.mustBeAfter\\\" class=\\\"invalid-text\\\">Can't be before sending start time</div>\\r\\n              <div *ngIf=\\\"!!cf.sendEndTime.errors.mustBeAfterTimeWindowEnd\\\" class=\\\"invalid-text\\\">Can't be after app profile's time window end [{{entity.timeWindowEnd | date :  \\\"hh:mm aa\\\" }}]</div>\\r\\n              <div *ngIf=\\\"!!cf.sendEndTime.errors.required\\\" class=\\\"invalid-text\\\">Time to stop sending SMS is Required\\r\\n              </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"!cf.sendEndTime.invalid\\\" class=\\\"campaign-sublabel\\\">Time to stop sending SMS</div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"section\\\" #paceView id=\\\"paceView\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-8 text-left section-title\\\">\\r\\n        Sending Pace\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row pl-4 mb-4\\\">\\r\\n      <div *ngIf=\\\"!editAfterCampaignStart\\\" class=\\\"col-4 custom-checkbox\\\">\\r\\n        <form [formGroup]=\\\"campaignForm\\\">\\r\\n          <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"crit-flag\\\" name=\\\"critical\\\" (click)=\\\"toggleCritical()\\\"\\r\\n            formControlName=\\\"isCritical\\\">\\r\\n          <label class=\\\"custom-control-label\\\" for=\\\"crit-flag\\\">Critical Campaign</label>\\r\\n          <div class=\\\"campaign-sublabel \\\">\\r\\n            Give this campaign priority over my other campaigns\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!editAfterCampaignStart\\\" class=\\\"col-4 custom-checkbox\\\">\\r\\n        <form [formGroup]=\\\"campaignForm\\\">\\r\\n          <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"open-flag\\\" name=\\\"open-ended\\\"\\r\\n            (click)=\\\"toggleIsOpenEnded()\\\" formControlName=\\\"isOpenEnded\\\">\\r\\n          <label class=\\\"custom-control-label\\\" for=\\\"open-flag\\\">Open Ended</label>\\r\\n          <div class=\\\"campaign-sublabel \\\">\\r\\n            Mark this campaign as open ended\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n    <form [formGroup]=\\\"campaignForm\\\">\\r\\n      <div class=\\\"row  pl-4\\\">\\r\\n        <div *ngIf=\\\"!editAfterCampaignStart\\\" class=\\\"col-4\\\">\\r\\n          <div class=\\\"form-input form-radiobtn \\\">\\r\\n            <div class=\\\"custom-radio\\\">\\r\\n              <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"1\\\" name=\\\"paceType\\\" value=\\\"1\\\"\\r\\n                formControlName=\\\"paceType\\\">\\r\\n              <label class=\\\"custom-control-label Pace-label\\\" for=\\\"1\\\">Maximum Throughput</label>\\r\\n              <div class=\\\"campaign-sublabel \\\">\\r\\n                SMS massages will be sent using the maximum throughout allowed\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"scheduleFlag && !cf.isOpenEnded.value\\\" class=\\\"col-4\\\">\\r\\n          <div class=\\\"form-input form-radiobtn \\\">\\r\\n            <div *ngIf=\\\"!editAfterCampaignStart\\\" class=\\\"custom-radio\\\">\\r\\n              <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"2\\\" name=\\\"paceType\\\" value=\\\"2\\\"\\r\\n                formControlName=\\\"paceType\\\">\\r\\n              <label class=\\\"custom-control-label Pace-label\\\" for=\\\"2\\\">Evenly Distributed</label>\\r\\n              <div class=\\\"campaign-sublabel \\\">\\r\\n                SMS will be divided evenly on the number of days of the campaign\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-4\\\">\\r\\n          <div class=\\\"form-input form-radiobtn\\\">\\r\\n            <div class=\\\"custom-radio\\\">\\r\\n              <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"3\\\" name=\\\"paceType\\\" value=\\\"3\\\"\\r\\n                formControlName=\\\"paceType\\\">\\r\\n              <label class=\\\"custom-control-label Pace-label\\\" for=\\\"3\\\">Specific SMS Rate</label>\\r\\n              <div class=\\\"campaign-sublabel \\\">\\r\\n                Controls SMS Messages Sending Rate\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!!(cf.paceType.value == 3)\\\" class=\\\"mt-4 pace-label\\\">\\r\\n            <div class=\\\"form-input\\\">\\r\\n              <label class=\\\"form-input-label\\\">SMS RATE</label>\\r\\n              <!--input formControlName=\\\"paceRate\\\" class=\\\"input\\\" placeholder=\\\"eg. 50\\\"-->\\r\\n              <input class=\\\"input\\\" formControlName=\\\"paceRate\\\" type=\\\"range\\\" style=\\\"width:100%;margin-bottom:10px;\\\"\\r\\n                min=\\\"1\\\" [max]=\\\"entity.maxThroughput\\\" step=\\\"1\\\" [value]=\\\"campaignForm.controls['paceRate'].value\\\">\\r\\n              <div class=\\\"campaign-sublabel \\\">\\r\\n                {{campaignForm.controls['paceRate'].value}} Messages/Second\\r\\n              </div>\\r\\n              <input   class=\\\"input\\\" formControlName=\\\"paceRate\\\" type=\\\"number\\\" min=\\\"1\\\"\\r\\n                [value]=\\\"campaignForm.controls['paceRate'].value\\\"\\r\\n                [ngClass]=\\\"{ 'invalid-input': cf.paceRate.errors && (cf.paceRate.touched || cf.paceRate.dirty || cf.paceRate.value !== null) }\\\">\\r\\n              <span\\r\\n                *ngIf=\\\"campaignForm.get('paceRate').errors && (campaignForm.get('paceRate').touched || campaignForm.get('paceRate').dirty)\\\">\\r\\n                <span *ngIf=\\\"!!cf.paceRate.errors.required\\\" class=\\\"invalid-text\\\">SMS rate is required</span>\\r\\n                <span *ngIf=\\\"!!cf.paceRate.errors.min\\\" class=\\\"invalid-text\\\">SMS rate can't be less than 1</span>\\r\\n                <span *ngIf=\\\"!!cf.paceRate.errors.max\\\" class=\\\"invalid-text\\\">SMS rate can't be more than entity's\\r\\n                  maximum</span>\\r\\n              </span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"!editAfterCampaignStart\\\" class=\\\"section\\\" id=\\\"dials\\\" #dialView id=\\\"dialView\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-12 text-left section-title\\\">\\r\\n        Targeted Dials\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row pl-4 \\\">\\r\\n      <div class=\\\"col-4\\\">\\r\\n        <div class=\\\"form-input form-radiobtn \\\">\\r\\n          <div class=\\\"custom-radio\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"5\\\" name=\\\"dials\\\" [checked]='!fileFlag'\\r\\n              (click)=\\\"setFileFlag(false)\\\" [disabled]=\\\"!hasGroups\\\">\\r\\n            <label class=\\\"custom-control-label\\\" for=\\\"5\\\">Use Existing Group</label>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-4\\\">\\r\\n        <div class=\\\"form-input form-radiobtn \\\">\\r\\n          <div class=\\\"custom-radio\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"6\\\" name=\\\"dials\\\" [checked]='fileFlag'\\r\\n              (click)=\\\"setFileFlag(true)\\\">\\r\\n            <label class=\\\"custom-control-label\\\" for=\\\"6\\\">Import File</label>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"entity && entity.isLimited\\\" class=\\\"col-4\\\">\\r\\n        <label class=\\\"form-input-label\\\">Entity Balance</label>\\r\\n        <div class=\\\"title-gray-dark\\\">\\r\\n          {{entity.balance}}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"!fileFlag && groupsList\\\" class=\\\"row pl-3\\\">\\r\\n      <div class=\\\"col-4\\\">\\r\\n        <form [formGroup]=\\\"campaignForm\\\">\\r\\n          <div class=\\\"form-input form-selectbox form-input-margin\\\">\\r\\n            <label class=\\\"form-input-label\\\">Select Targeted Group</label>\\r\\n            <select formControlName=\\\"groupId\\\" class=\\\"selectbox\\\"\\r\\n              [ngClass]=\\\"{ 'invalid-input': cf.groupId.errors && (cf.groupId.touched || cf.groupId.dirty || cf.groupId.value !== null) }\\\">\\r\\n              <option *ngFor=\\\"let group of groupsList\\\" [ngValue]=\\\"group.groupId\\\">{{group.groupName}}</option>\\r\\n            </select>\\r\\n            <div class=\\\"form-selectbox-icon\\\"></div>\\r\\n            <div\\r\\n              *ngIf=\\\"!!cf.groupId.errors && (!!cf.groupId.touched || !!cf.groupId.dirty || campaignForm.get('groupId').value !== null )\\\">\\r\\n              <div *ngIf=\\\"!!cf.groupId.errors.required\\\" class=\\\"invalid-text\\\">Targeted Group is required</div>\\r\\n              <div *ngIf=\\\"!!cf.groupId.errors.zeroDials\\\" class=\\\"invalid-text\\\">Targeted group has no dials</div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"fileFlag\\\" class=\\\"row pl-3\\\">\\r\\n      <div *ngIf=\\\"fileType === null\\\" class=\\\"col-12 form-input-margin form-input-label mb-2\\\">\\r\\n        Select one format of CSV files\\r\\n      </div>\\r\\n      <div *ngIf=\\\"fileType !== null\\\" class=\\\"col-12 form-input-margin form-input-label mb-2\\\">\\r\\n        <span *ngIf=\\\"fileType !== null\\\" style=\\\"color:#a3d94e\\\"> Selected: {{fileTypes[fileType].label}}</span>\\r\\n      </div>\\r\\n      <div *ngFor=\\\"let fType of fileTypes\\\" class=\\\"col-4\\\">\\r\\n        <a (click)=\\\"activeFileType(fType.id)\\\" class=\\\"caption pointer\\\">\\r\\n          <div *ngIf=\\\"fileType !== fType.id\\\" class=\\\"caption-media\\\">\\r\\n            <span class=\\\"icon-paper icon-lg icon-gray\\\"></span>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"fileType === fType.id\\\" class=\\\"caption-media\\\">\\r\\n            <span class=\\\"icon-paper icon-lg icon-green\\\">\\r\\n              <div class=\\\"position-relative\\\">\\r\\n                <span class=\\\"icon-checked checked-mark\\\"></span>\\r\\n              </div>\\r\\n            </span>\\r\\n          </div>\\r\\n          <div class=\\\"caption-text caption-text-gutter title-small-muted\\\">\\r\\n            <div class=\\\"title-small title-robotomedium\\\">\\r\\n              {{fType.label}}\\r\\n            </div>\\r\\n            <div class=\\\"title-xsmall title-gray\\\">\\r\\n              {{fType.description}}\\r\\n            </div>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"fileType === fType.id\\\">\\r\\n            <a (click)=\\\"downloadSample()\\\" class=\\\"fas fa-file-download pointer faded-grey\\\"\\r\\n              style=\\\" font-size: 2em; margin-left: 15px;\\\"></a>\\r\\n          </div>\\r\\n        </a>\\r\\n      </div>\\r\\n      <!--div class=\\\"col-12 title-medium text-center pt-5\\\">\\r\\n        Drop File to upload\\r\\n      </div-->\\r\\n      <div *ngIf=\\\"fileType !== null\\\" class=\\\"col-12 mt-4\\\">\\r\\n        <div *ngIf=\\\"fileUploaded\\\" class=\\\"row \\\">\\r\\n          <div class=\\\"col-12 text-center my-auto p-2\\\">\\r\\n            <b>{{ fileUploaded.relativePath }}</b><span (click)=\\\"clearUploadedFile()\\\"\\r\\n              class=\\\"fas fa-times pointer ml-4\\\"></span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"fileUploaded === null\\\">\\r\\n          <file-drop dropZoneLabel=\\\"Drop file to upload  \\\" dropZoneClassName=\\\"file-drop-zone\\\"\\r\\n            contentClassName=\\\"file-drop-content\\\" [showBrowseBtn]=\\\"true\\\" browseBtnClassName=\\\"button button-green ml-2\\\"\\r\\n            browseBtnLabel=\\\"Browse\\\" (onFileDrop)=\\\"dropped($event)\\\" (onFileOver)=\\\"fileOver($event)\\\"\\r\\n            (onFileLeave)=\\\"fileLeave($event)\\\">\\r\\n          </file-drop>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"!editAfterCampaignStart\\\" class=\\\"section pb-5 \\\" id=\\\"sms\\\" #smsView id=\\\"smsView\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-12 text-left section-title\\\">\\r\\n        SMS Script\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row pl-3\\\">\\r\\n      <div class=\\\"col-3\\\">\\r\\n        <div class=\\\"form-input form-radiobtn \\\">\\r\\n          <div class=\\\"custom-radio\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"7\\\" name=\\\"sms\\\" [checked]=\\\"!smsTemplateFlag\\\"\\r\\n              (click)=\\\"setSmsTemplateFlag(false)\\\">\\r\\n            <label class=\\\"custom-control-label\\\" for=\\\"7\\\">New SMS Script</label>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-4\\\">\\r\\n        <div class=\\\"form-input form-radiobtn \\\">\\r\\n          <div class=\\\"custom-radio\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"8\\\" name=\\\"sms\\\" [checked]=\\\"smsTemplateFlag\\\"\\r\\n              (click)=\\\"setSmsTemplateFlag(true)\\\"\\r\\n              [disabled]=\\\"!smsTemplatesList || smsTemplatesList.length === 0 || !hasSmsTemplates\\\">\\r\\n            <label class=\\\"custom-control-label\\\" for=\\\"8\\\"> SMS Script From Template</label>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"!smsTemplateFlag\\\" class=\\\"row \\\">\\r\\n      <div class=\\\"col-12\\\">\\r\\n        <form [formGroup]=\\\"campaignForm\\\">\\r\\n          <div class=\\\"form-input form-input-margin\\\">\\r\\n            <label class=\\\"form-input-label\\\">SMS Script</label>\\r\\n            <textarea (focus)=\\\"showSmsScriptWarning()\\\" autosize [minRows]=\\\"1\\\" [maxRows]=\\\"8\\\" formControlName=\\\"notificationText\\\" class=\\\"input\\\"\\r\\n              [ngClass]=\\\"{ 'invalid-input': cf.notificationText.errors && (cf.notificationText.touched || cf.notificationText.dirty || cf.notificationText.value !== null) }\\\"\\r\\n              placeholder=\\\"Enter SMS Text\\\"></textarea>\\r\\n            <span style=\\\"font-size:12px;\\\"\\r\\n              [ngClass]=\\\"{'invalid-text': cf.notificationText.errors && (cf.notificationText.touched || cf.notificationText.dirty)}\\\">{{smsScriptLength}}\\r\\n              / {{smsMaxCharCount}} | {{smsCount}}</span>\\r\\n\\r\\n            <span style=\\\"margin-left: 10px;\\\"\\r\\n              *ngIf=\\\"campaignForm.get('notificationText').errors && (campaignForm.get('notificationText').touched || campaignForm.get('notificationText').dirty)\\\">\\r\\n              <span *ngIf=\\\"!!cf.notificationText.errors.required\\\" class=\\\"invalid-text\\\">SMS script is required</span>\\r\\n              <span *ngIf=\\\"!!cf.notificationText.errors.invalidPlaceholder\\\" class=\\\"invalid-text\\\">SMS script has invalid\\r\\n                placeholders {{invalidPlaceholders}}</span>\\r\\n              <span *ngIf=\\\"!!cf.notificationText.errors.minlength\\\" class=\\\"invalid-text\\\">SMS script must be at least 5\\r\\n                characters</span>\\r\\n              <span *ngIf=\\\"!!cf.notificationText.errors.maxlength\\\" class=\\\"invalid-text\\\">SMS script must not exceed 160\\r\\n                characters</span>\\r\\n              <span *ngIf=\\\"!!cf.notificationText.errors.invalidCharacterFlag\\\" class=\\\"invalid-text\\\">The character \\\"<strong>\\r\\n                {{cf.notificationText.errors.invalidCharacter}} </strong>\\\" is invalid as it lies outside the range of\\r\\n                 Basic Latin (English) and Arabic characters.</span>\\r\\n            </span>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"smsTemplateFlag\\\" class=\\\"row \\\">\\r\\n      <div class=\\\"col-6\\\">\\r\\n        <form [formGroup]=\\\"campaignForm\\\">\\r\\n          <div class=\\\"form-input form-selectbox form-input-margin\\\">\\r\\n            <label class=\\\"form-input-label\\\">Choose SMS Template</label>\\r\\n            <select formControlName=\\\"notificationText\\\" class=\\\"selectbox\\\" (change)=\\\"setSmsTemplateFlag(false)\\\">\\r\\n              <option *ngFor=\\\"let sms of smsTemplatesList\\\" [ngValue]=\\\"sms.text\\\">{{sms.title}}</option>\\r\\n            </select>\\r\\n            <div class=\\\"form-selectbox-icon\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row \\\">\\r\\n      <div class=\\\"col-6\\\">\\r\\n        <div *ngIf=\\\"!canAddFakeSender\\\" class=\\\"form-input form-selectbox form-input-margin\\\">\\r\\n          <form [formGroup]=\\\"campaignForm\\\">\\r\\n            <label class=\\\"form-input-label\\\">Choose a Sender Name</label>\\r\\n            <select formControlName=\\\"senderName\\\" class=\\\"selectbox\\\"\\r\\n              [ngClass]=\\\"{ 'invalid-input': cf.senderName.errors && (cf.senderName.touched || cf.senderName.dirty || cf.senderName.value !== null) }\\\">\\r\\n              <option *ngFor=\\\"let sender of fakeSenders\\\" [ngValue]=\\\"sender.senderName\\\">{{sender.senderName}}</option>\\r\\n            </select>\\r\\n            <div class=\\\"form-selectbox-icon\\\">\\r\\n            </div>\\r\\n            <div\\r\\n              *ngIf=\\\"!!cf.senderName.errors && (!!cf.senderName.touched || !!cf.senderName.dirty || campaignForm.get('senderName').value !== null)\\\">\\r\\n              <div *ngIf=\\\"!!cf.senderName.errors.required\\\" class=\\\"invalid-text\\\">Sender name is required</div>\\r\\n              \\r\\n            </div>\\r\\n\\r\\n           \\r\\n          </form>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"canAddFakeSender\\\" class=\\\"form-input form-input-margin\\\">\\r\\n          <form [formGroup]=\\\"campaignForm\\\">\\r\\n            <label class=\\\"form-input-label\\\">Custom Sender Name</label>\\r\\n            <input nfSpecialCharacters   formControlName=\\\"senderName\\\" class=\\\"input\\\"\\r\\n              [ngClass]=\\\"{ 'invalid-input': cf.senderName.errors && (cf.senderName.touched || cf.senderName.dirty || cf.senderName.value !== null) }\\\"\\r\\n              placeholder=\\\"Type Custom Sender Name Here\\\" maxlength=\\\"11\\\">\\r\\n            <div *ngIf=\\\"!!cf.senderName.errors && (!!cf.senderName.touched || !!cf.senderName.dirty || campaignForm.get('senderName').value !== null)\\\">\\r\\n              <div *ngIf=\\\"!!cf.senderName.errors.required\\\" class=\\\"invalid-text\\\">Sender Name is required</div>\\r\\n              <div *ngIf=\\\"!cf.senderName.errors.required && !!cf.senderName.errors.nfSpecialCharacters\\\" >Sender Name Must be valid</div>\\r\\n\\r\\n              <div *ngIf=\\\"!!cf.senderName.errors.maxlength\\\" class=\\\"invalid-text\\\">Sender name must not exceed 25\\r\\n                characters</div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"entity != null && entity.canAddFakeSenders && user.canAddFakeSender\\\" class=\\\"col-3\\\">\\r\\n        <div class=\\\"custom-checkbox\\\" style=\\\"margin-top:50px; margin-left:30px;\\\">\\r\\n          <input [(ngModel)]=\\\"canAddFakeSender\\\" type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"custom-sender\\\"\\r\\n            name=\\\"custom-sender\\\" (click)=\\\"toggleFakeSender()\\\" [checked]=\\\"canAddFakeSender\\\">\\r\\n          <label class=\\\"custom-control-label\\\" for=\\\"custom-sender\\\">ِAdd Custom Sender</label>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-3 text-right\\\">\\r\\n        <button type=\\\"button\\\" (click)=\\\"show()\\\" style=\\\"margin-top:50px; margin-left:30px;\\\"\\r\\n          class=\\\"button button-green mr-3\\\">\\r\\n          Test SMS\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row mt-4 \\\">\\r\\n    <div class=\\\"col-12 justify-content-center text-center\\\">\\r\\n      <form [formGroup]=\\\"campaignForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"button button-green mr-3\\\">\\r\\n          Save Campaign\\r\\n        </button>\\r\\n        <button (click)=\\\"navigateBack()\\\" class=\\\"button button-grey mr-2 \\\">\\r\\n          Cancel Campaign\\r\\n        </button>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild, ElementRef, Input, Inject } from '@angular/core';\r\nimport { CampaignModel } from 'src/app/shared/models/campaign-model';\r\nimport { CampaignService } from 'src/app/campaigns/campaign.service';\r\nimport { B2bSenderNameModel } from 'src/app/shared/models/b2b_sender_name_model';\r\nimport { FileTypeModel } from 'src/app/shared/models/file-type-model';\r\nimport { FileModel } from 'src/app/shared/models/file-model';\r\nimport { UploadEvent, UploadFile, FileSystemFileEntry, FileSystemDirectoryEntry } from 'ngx-file-drop';\r\nimport { GroupService } from 'src/app/group/group.service';\r\nimport { GroupModel } from 'src/app/shared/models/group-model';\r\nimport { SmsTemplateModel } from 'src/app/shared/models/sms-template-model';\r\nimport { SmsTemplatesService } from 'src/app/sms-templates/sms-templates.service';\r\nimport { FormBuilder, FormGroup, Validators, AbstractControl, ValidatorFn, ValidationErrors, FormControl } from '@angular/forms';\r\nimport { NdpMessageService } from 'src/app/shared/services/ndp-message.service';\r\nimport { ActivatedRoute, Router, NavigationEnd } from '@angular/router';\r\nimport { Defines } from 'src/app/shared/static/defines';\r\nimport { CampaignRequestModel } from 'src/app/shared/models/campaign-request-model';\r\nimport { User } from 'src/app/shared/models/user-model';\r\nimport { EntityModel } from 'src/app/shared/models/entity-model';\r\nimport { EntityServiceService } from 'src/app/entity/entity-service.service';\r\nimport { AngularCsv } from 'angular7-csv/dist/Angular-csv';\r\nimport { DialogService } from 'primeng/api';\r\nimport { TestSmsComponent } from '../test-sms/test-sms.component';\r\nimport { TestSmsModel } from 'src/app/shared/models/test-sms-model';\r\nimport { Base64 } from 'js-base64';\r\n\r\n@Component({\r\n  selector: 'ndp-add-edit-campaign',\r\n  templateUrl: './add-edit-campaign.component.html',\r\n  styleUrls: ['./add-edit-campaign.component.css'],\r\n  providers: [DialogService]\r\n})\r\nexport class AddEditCampaignComponent implements OnInit {\r\n  @ViewChild('scheduleView') public scheduleView: ElementRef;\r\n  @ViewChild('paceView') public paceView: ElementRef;\r\n  @ViewChild('dialView') public dialView: ElementRef;\r\n  @ViewChild('smsView') public smsView: ElementRef;\r\n\r\n  // CONSTRUCTOR\r\n  constructor(private campaignService: CampaignService, private groupService: GroupService,\r\n    private smsTemplatesService: SmsTemplatesService, private entityService: EntityServiceService,\r\n    private formBuilder: FormBuilder, private messageService: NdpMessageService,\r\n    private router: Router, private route: ActivatedRoute, public dialogService: DialogService) { }\r\n\r\n  // PRIVILEGE BOOLEANS\r\n  public hasGroups = false;\r\n  public hasSmsTemplates = false;\r\n\r\n  // VARIABLES\r\n  public newCampaign: CampaignModel;\r\n  public fileUploaded: UploadFile;\r\n  public groupsList: GroupModel[];\r\n  public fakeSenders: B2bSenderNameModel[];\r\n  public smsTemplatesList: SmsTemplateModel[];\r\n  public smsScriptLength = 0;\r\n  public smsMaxCharCount = 160;\r\n  public smsCount = 0;\r\n  public entity: EntityModel;\r\n  public fileModel: FileModel = new FileModel;\r\n  public files: UploadFile[] = [];\r\n  public fileType: number = null;\r\n  public fileTypes: FileTypeModel[] = [\r\n    { id: 0, label: 'Dials only', description: 'EX:012201515674', isActive: false },\r\n    { id: 1, label: 'Dials with one value', description: 'EX:012201515674,Name', isActive: true },\r\n    { id: 2, label: 'Dials with many values', description: 'EX:012201515674,Name, ...', isActive: false }];\r\n\r\n  public sample0: any = [\r\n    { number: '01112345679' },\r\n    { number: '01112345678' },\r\n    { number: '01112345677' },\r\n    { number: '01112345676' },\r\n    { number: '01112345675' }\r\n  ];\r\n  public sample1: any = [\r\n    { number: '01112345679', name: 'Ahmed' },\r\n    { number: '01112345678', name: 'Shehab' },\r\n    { number: '01112345677', name: 'Eslam' },\r\n    { number: '01112345676', name: 'Mina' },\r\n    { number: '01112345675', name: 'Abdalla' }\r\n  ];\r\n  public sample2: any = [\r\n    { number: '01112345679', name: 'Name=Ahmed', prize: 'Prize=100' },\r\n    { number: '01112345678', name: 'Name=Shehab', prize: 'Prize=200' },\r\n    { number: '01112345677', name: 'Name=Eslam', prize: 'Prize=300' },\r\n    { number: '01112345676', name: 'Name=Mina', prize: 'Prize=400' },\r\n    { number: '01112345675', name: 'Name=Abdalla', prize: 'Prize=500' }\r\n  ];\r\n  public csvOptions = {\r\n    fieldSeparator: ',',\r\n    quoteStrings: '',\r\n    decimalseparator: '.',\r\n    showLabels: false,\r\n    showTitle: false,\r\n    useBom: true,\r\n    noDownload: false,\r\n  };\r\n  public selectedFileType: number;\r\n\r\n  mode: number;\r\n  canAddFakeSender = false;\r\n  user: User;\r\n\r\n  startDate = new Date; startTime = new Date; endDate: Date; endTime: Date;\r\n  specificStartTime: Date; specificEndTime: Date;\r\n  paceRate = 0;\r\n\r\n  scheduleFlag = false; fileFlag = false;\r\n  smsTemplateFlag = false; sendInSpecificTime = false;\r\n\r\n  campaignForm: FormGroup;\r\n  submitted = true;\r\n\r\n  placeholders: boolean[] = [];\r\n  public invalidPlaceholders: string;\r\n\r\n  public editAfterCampaignStart: boolean = false;\r\n\r\n  campaignToEdit: CampaignModel;\r\n  show() {\r\n    if (this.campaignForm.get('notificationText').value === null || this.campaignForm.get('notificationText').value === '') {\r\n      this.messageService.addWarnings(['Please fill in the SMS details first']);\r\n      this.moveToSMS();\r\n      return;\r\n    }\r\n    const ref = this.dialogService.open(TestSmsComponent, {\r\n      width: '40%',\r\n      showHeader: false,\r\n      data: {\r\n        msg: this.campaignForm.get('notificationText').value\r\n      }\r\n    });\r\n\r\n    ref.onClose.subscribe((s: string) => {\r\n      if (s) {\r\n        const model = new TestSmsModel();\r\n        model.admCampaignsModel = this.campaignForm.value;\r\n        const arabic = /[\\u0600-\\u06FF]/;\r\n        if (arabic.test(model.admCampaignsModel.notificationText)) {\r\n          model.admCampaignsModel.language = 'AR';\r\n        }\r\n        model.dialWithParameters = s;\r\n        this.campaignService.testSms(model).toPromise().then((r) => {\r\n          if (r.status === 0) {\r\n            this.messageService.addInfo('Sent Test SMS to ' + s.split(',')[0]);\r\n          } else {\r\n            this.messageService.addWarnings(['Sending SMS Failed']);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  showSmsScriptWarning() {\r\n    if (this.campaignToEdit && this.mode === 1) {\r\n      this.messageService.addWarnings(['Placeholders entered while editing might not match previously uploaded file or group parameters.']);\r\n    }\r\n    return;\r\n  }\r\n\r\n  // AUTOSCROLL\r\n  moveToSchedule(): void {\r\n    this.scheduleView.nativeElement.scrollIntoView({ behavior: 'smooth', block: 'center', inline: 'center' });\r\n  }\r\n  moveToPace(): void {\r\n    this.paceView.nativeElement.scrollIntoView({ behavior: 'smooth', block: 'center', inline: 'center' });\r\n  }\r\n  moveToDials(): void {\r\n    this.dialView.nativeElement.scrollIntoView({ behavior: 'smooth', block: 'center', inline: 'center' });\r\n  }\r\n  moveToSMS(): void {\r\n    this.smsView.nativeElement.scrollIntoView({ behavior: 'smooth', block: 'center', inline: 'center' });\r\n  }\r\n\r\n  // INTITIALIZE\r\n  ngOnInit() {\r\n    // RESET VIEW\r\n    this.router.events.subscribe((evt) => {\r\n      if (!(evt instanceof NavigationEnd)) {\r\n        return;\r\n      }\r\n      window.scrollTo(0, 0);\r\n    });\r\n\r\n    // INIT\r\n    this.user = new User();\r\n    this.user = JSON.parse(localStorage.getItem(Defines.SESSION_KEYS.userModel));\r\n    this.setPrivilegeFlags();\r\n    if (this.hasGroups) {\r\n      this.retrieveGroups();\r\n    } else {\r\n      this.fileFlag = true;\r\n    }\r\n    if (this.hasSmsTemplates) {\r\n      this.retrieveSmsTemplates();\r\n    }\r\n    this.retrieveFakeSenders();\r\n    this.retrieveEntity();\r\n\r\n    if (this.newCampaign == null) {\r\n      this.newCampaign = new CampaignModel();\r\n      this.newCampaign.paceType = '2';\r\n      this.newCampaign.priority = 2; //1: High , 2:Medium , 3:Low\r\n      this.newCampaign.isCritical = true;\r\n      this.sendInSpecificTime = false;\r\n    }\r\n\r\n\r\n\r\n    this.campaignForm = this.formBuilder.group({\r\n      campaignId: '',\r\n      campaignType: [1],\r\n      channel: [1],\r\n      status: (this.user.needsApproval ? Defines.CAMPAIGN_STATUS.PENDING : Defines.CAMPAIGN_STATUS.APPROVED),\r\n      name: ['', [Validators.required, Validators.maxLength(25), this.nonEmptyValidator()]],\r\n      startDate: [new Date],\r\n      endDate: [null],\r\n      startTime: [new Date],\r\n      endTime: [null],\r\n      priority: [2, Validators.required],\r\n      isInternal: [true],\r\n      isCritical: [false],\r\n      paceType: ['1'],\r\n      paceRate: [1],\r\n      groupId: [null],\r\n      notificationText: [null, [Validators.required, this.nonEmptyValidator(), this.charsetValidator]],\r\n      senderName: [null, [Validators.required, Validators.maxLength(25), this.nonEmptyValidator()]],\r\n      sendStartTime: [null],\r\n      sendEndTime: [null],\r\n      language: ['EN'],\r\n      isOpenEnded: false\r\n    }, {\r\n      // validator: this.greaterValidator('endDate', 'startDate')\r\n    });\r\n\r\n    this.route.paramMap.subscribe(params => {\r\n      const campId = +params.get('id');\r\n      if (campId) {\r\n        if (this.router.url.includes('campaigns/edit')) {\r\n          this.mode = 1;\r\n        }\r\n        if (this.router.url.includes('campaigns/clone')) {\r\n          this.mode = 2;\r\n        }\r\n        this.getCampaign(campId);\r\n      } else {\r\n        this.mode = 0;\r\n      }\r\n    });\r\n\r\n    // this.campaignForm.get('startDate').valueChanges.subscribe(val => {\r\n    //   this.campaignForm.patchValue({\r\n    //     startTime: this.combineDateTime(val, new Date())\r\n    //   });\r\n    // });\r\n\r\n    // this.campaignForm.get('endDate').valueChanges.subscribe(val => {\r\n    //   this.campaignForm.patchValue({\r\n    //     endTime: this.combineDateTime(val, new Date())\r\n    //   });\r\n    // });\r\n\r\n    if (this.mode !== 2) {\r\n      this.campaignForm.get('startTime').valueChanges.subscribe(val => {\r\n        this.campaignForm.patchValue({ startDate: this.combineDateTime(this.campaignForm.get('startDate').value, val) });\r\n      });\r\n      this.campaignForm.get('endTime').valueChanges.subscribe(val => {\r\n        this.campaignForm.patchValue({ endDate: this.combineDateTime(this.campaignForm.get('endDate').value, val) });\r\n      });\r\n    }\r\n\r\n    this.campaignForm.get('isInternal').valueChanges.subscribe(val => {\r\n      if (val) {\r\n        this.setFileFlag(true);\r\n      } else {\r\n        this.setFileFlag(false);\r\n      }\r\n    });\r\n\r\n    this.campaignForm.controls.notificationText.valueChanges.subscribe(val => {\r\n      if (val) {\r\n        this.smsScriptLength = val.length;\r\n        const arabic = /[\\u0600-\\u06FF]/;\r\n        this.smsMaxCharCount = arabic.test(val) ? 67 : 140;\r\n      } else {\r\n        this.smsScriptLength = 0;\r\n      }\r\n      this.smsCount = (this.smsScriptLength == 0) ? 0 : Math.trunc(this.smsScriptLength / this.smsMaxCharCount) + 1;\r\n    });\r\n\r\n  }\r\n\r\n\r\n  setPrivilegeFlags() {\r\n    if (this.user.privilegeList) {\r\n      this.user.privilegeList.forEach(pr => {\r\n        switch (pr.privilegeId) {\r\n          case Defines.PRIVILEGES.GROUP.LIST:\r\n            this.hasGroups = true;\r\n            break;\r\n          case Defines.PRIVILEGES.SMSTEMPLATES.LIST:\r\n            this.hasSmsTemplates = true;\r\n            break;\r\n        }\r\n      });\r\n    }\r\n  }\r\n  // setAccessLevel() {\r\n  //   this.user = JSON.parse(localStorage.getItem(Defines.SESSION_KEYS.userModel));\r\n  //   if (this.user.privilegeList) {\r\n  //     this.user.privilegeList.forEach(rolePrivilege => {\r\n  //       switch (rolePrivilege.privilegeId) {\r\n  //         case Defines.PRIVILEGES.CAMPAIGN.EDIT: {\r\n  //           this.editAccessLevel = rolePrivilege.accessLevel;\r\n  //           break;\r\n  //         } case Defines.PRIVILEGES.CAMPAIGN.LIST: {\r\n  //           this.listAccessLevel = rolePrivilege.accessLevel;\r\n  //           break;\r\n  //         } case Defines.PRIVILEGES.CAMPAIGN.DELETE: {\r\n  //           this.deleteAccessLevel = rolePrivilege.accessLevel;\r\n  //           break;\r\n  //         } case Defines.PRIVILEGES.CAMPAIGN.CREATE: {\r\n  //           this.canCreate = true;\r\n  //           break;\r\n  //         } case Defines.PRIVILEGES.CAMPAIGN.approve: {\r\n  //           this.canApproveflag = true;\r\n  //           break;\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //     );\r\n  //   }\r\n  // }\r\n\r\n  setDateValidator() {\r\n    this.campaignForm.setValidators([this.greaterValidator('endDate', 'startDate'), this.greaterTimeValidator('sendEndTime', 'sendStartTime'), this.AppProfileTimeWindowValidator('sendEndTime', 'sendStartTime')]);\r\n    // this.campaignForm.setValidators([this.AppProfileTimeWindowValidator('endDate', 'startDate'), this.AppProfileTimeWindowValidator('sendEndTime', 'sendStartTime')]);\r\n    this.campaignForm.get('startDate').setValidators(this.dateRangeValidator(this.now()));\r\n    this.campaignForm.get('startTime').setValidators(this.timeRangeValidator(this.campaignForm.get('startDate')));\r\n  }\r\n\r\n  clearDateValidator() {\r\n    this.campaignForm.clearValidators();\r\n    this.campaignForm.get('endDate').setErrors(null);\r\n    this.campaignForm.patchValue({ endDate: null });\r\n    this.campaignForm.get('startDate').clearValidators();\r\n  }\r\n\r\n  // LOAD CAMPAIGN\r\n  getCampaign(campId: number) {\r\n    const camp = new CampaignRequestModel;\r\n    camp.campaignModel = new CampaignModel;\r\n    camp.campaignModel.campaignId = campId;\r\n    this.campaignService.get(camp).subscribe(\r\n      (response) => this.editCampaign(response.responsePayload),\r\n      (err: any) => console.log(err));\r\n  }\r\n\r\n  editCampaign(campaign: CampaignModel) {\r\n    this.campaignToEdit = campaign;\r\n    this.campaignForm.patchValue({\r\n      campaignId: campaign.campaignId,\r\n      campaignType: campaign.campaignType,\r\n      channel: campaign.channel,\r\n      status: (this.user.needsApproval ? Defines.CAMPAIGN_STATUS.PENDING : (this.mode === 2) ? Defines.CAMPAIGN_STATUS.APPROVED : campaign.status),\r\n      name: (this.mode === 1) ? campaign.name : '(CLONE) ' + campaign.name,\r\n      startDate: (this.mode === 1) ? new Date(campaign.startDate) : new Date(),\r\n      endDate: (this.mode === 1) ? ((campaign.endDate) ? new Date(campaign.endDate) : null) : null,\r\n      startTime: (this.mode === 1) ? new Date(campaign.startDate) : new Date(),\r\n      endTime: (this.mode === 1) ? ((campaign.endDate) ? new Date(campaign.endDate) : null) : null,\r\n      priority: campaign.priority,\r\n      isInternal: campaign.isInternal,\r\n      isCritical: campaign.isCritical,\r\n      paceType: campaign.paceType,\r\n      paceRate: campaign.paceRate,\r\n      groupId: campaign.groupId,\r\n      notificationText: campaign.notificationText,\r\n      senderName: campaign.senderName,\r\n      sendStartTime: (this.mode === 1) ? ((campaign.sendStartTime) ? new Date(campaign.sendStartTime) : null) : null,\r\n      sendEndTime: (this.mode === 1) ? ((campaign.sendEndTime) ? new Date(campaign.sendEndTime) : null) : null,\r\n      language: campaign.language,\r\n      isOpenEnded: campaign.isOpenEnded\r\n    });\r\n    this.editAfterCampaignStart = this.mode === 1 && (campaign.status === Defines.CAMPAIGN_STATUS.HANDLING\r\n      || campaign.status === Defines.CAMPAIGN_STATUS.SMS_ENQUEUED\r\n      || campaign.status === Defines.CAMPAIGN_STATUS.PAUSED);\r\n    console.log('mode => ', this.mode);\r\n    console.log('campaign status => ', campaign.status);\r\n    console.log('editAfterCampaignStarts ==> ', this.editAfterCampaignStart);\r\n    if (this.editAfterCampaignStart) {\r\n      this.campaignForm.get('status').setValue(campaign.status);\r\n    }\r\n\r\n    if (this.entity != null && this.entity.canAddFakeSenders && this.user.canAddFakeSender) {\r\n      setTimeout(() => this.canAddFakeSender = true);\r\n    }\r\n\r\n    this.setControlVals(campaign);\r\n  }\r\n\r\n  setControlVals(campaign: CampaignModel) {\r\n    this.setScheduled(true);\r\n    if (campaign.sendStartTime !== null) {\r\n      this.toggleSendInSpecificTime();\r\n      this.sendInSpecificTime = true;\r\n    }\r\n  }\r\n\r\n  get cf() { return this.campaignForm.controls; }\r\n\r\n  getStartDate() {\r\n    return this.campaignForm.controls['startDate'].value;\r\n  }\r\n\r\n  dateRangeValidator(min: Date): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: boolean } | null => {\r\n      if (control.value) {\r\n        const options = {};\r\n        const controlDate = new Date(control.value);\r\n        const now = new Date();\r\n        controlDate.setHours(23);\r\n        controlDate.setMinutes(59);\r\n        controlDate.setSeconds(59);\r\n        controlDate.setMilliseconds(9999);\r\n        if (controlDate < now) {\r\n          return { 'dateInvalid': true };\r\n        }\r\n      }\r\n      return null;\r\n    };\r\n  }\r\n\r\n  timeRangeValidator(startDateControl: AbstractControl): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: boolean } | null => {\r\n      if (control.value && startDateControl.value) {\r\n        const startDate = new Date(startDateControl.value);\r\n        const currentDate = new Date();\r\n        console.log('startDate => ', startDate.toLocaleDateString('en-EG'));\r\n        console.log('currentDate => ', currentDate.toLocaleDateString('en-EG'));\r\n        if (startDate.toLocaleDateString('en-EG') === currentDate.toLocaleDateString('en-EG')) {\r\n          const options = { hour12: false };\r\n          const time = new Date(control.value);\r\n          const currentTime = new Date();\r\n          if (time.toLocaleTimeString('en-EG', options) < currentTime.toLocaleTimeString('en-EG', options)) {\r\n            return { 'timeInvalid': true };\r\n          }\r\n        }\r\n      }\r\n      return null;\r\n    };\r\n  }\r\n\r\n  nonEmptyValidator(): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: boolean } | null => {\r\n      if (control.value) {\r\n        const str = control.value;\r\n        if (str.trim() === '') {\r\n          return { 'required': true };\r\n        }\r\n        return null;\r\n      }\r\n    };\r\n  }\r\n  toggleIsOpenEnded() {\r\n    if (this.campaignForm.get('isOpenEnded').value == true) {\r\n      this.campaignForm.get('isOpenEnded').setValue(false);\r\n    } else if (this.campaignForm.get('isOpenEnded').value == false) {\r\n      this.campaignForm.get('isOpenEnded').setValue(true);\r\n      this.campaignForm.get('endDate').setValue(null);\r\n      this.campaignForm.get('endTime').setValue(null);\r\n    }\r\n  }\r\n  greaterValidator(endControlName: string, startControlName: string): ValidatorFn {\r\n    return (formGroup: FormGroup): ValidationErrors => {\r\n      const control = formGroup.controls[endControlName];\r\n      const matchingControl = formGroup.controls[startControlName];\r\n      if (control.value !== null) {\r\n        if (control.value <= matchingControl.value) {\r\n          control.setErrors({ mustBeAfter: true });\r\n        } else {\r\n          let errors = control.errors;\r\n          if (errors && errors['mustBeAfter']) {\r\n            delete errors['mustBeAfter'];\r\n          }\r\n          if (errors && Object.keys(errors).length === 0) {\r\n            errors = null;\r\n          }\r\n          control.setErrors(errors);\r\n        }\r\n      }\r\n      return;\r\n    };\r\n  }\r\n\r\n  greaterTimeValidator(endControlName: string, startControlName: string): ValidatorFn {\r\n    return (formGroup: FormGroup): ValidationErrors => {\r\n      const control = formGroup.controls[endControlName];\r\n      const matchingControl = formGroup.controls[startControlName];\r\n      if (control.value && matchingControl.value) {\r\n        const options = { hour12: false };\r\n        const endControlDate = new Date(control.value);\r\n        const startControlDate = new Date(matchingControl.value);\r\n        if (endControlDate.toLocaleTimeString('en-EG', options) <= startControlDate.toLocaleTimeString('en-EG', options)) {\r\n          control.setErrors({ mustBeAfter: true });\r\n        } else {\r\n          let errors = control.errors;\r\n          if (errors && errors['mustBeAfter']) {\r\n            delete errors['mustBeAfter'];\r\n          }\r\n          if (errors && Object.keys(errors).length === 0) {\r\n            errors = null;\r\n          }\r\n          control.setErrors(errors);\r\n        }\r\n      }\r\n      return;\r\n    };\r\n  }\r\n  // AppProfileTimeWindowValidator(endControlName: string, startControlName: string): ValidatorFn {\r\n  //   return (formGroup: FormGroup): ValidationErrors => {\r\n  //     // debugger;\r\n  //     const endControl = formGroup.controls[endControlName];\r\n  //     const startControl = formGroup.controls[startControlName];\r\n  //     if (this.sendInSpecificTime && (endControl.value !== null || startControl.value !== null)) {\r\n  //       const startD = new Date(startControl.value);\r\n  //       const timeWindowS = new Date(this.entity.timeWindowStart);\r\n  //       const endD = new Date(endControl.value);\r\n  //       const timeWindowE = new Date(this.entity.timeWindowEnd);\r\n  //       console.log(\"Entity => \",this.entity);\r\n  //       // console.log(startD.toLocaleTimeString() < timeWindowS.toLocaleTimeString() + \" / \" + timeWindowS.getHours() + \" /\" +  timeWindowE.getHours())\r\n  //       if (startD.toLocaleTimeString() < timeWindowS.toLocaleTimeString() || startD.toLocaleTimeString() > timeWindowE.toLocaleTimeString()) {\r\n  //         console.log('startD:',startD.toLocaleTimeString());\r\n  //         console.log('timeWindiwS:',timeWindowS.toLocaleTimeString());\r\n  //         console.log('timeWindiwE:',this.entity.timeWindowEnd);\r\n\r\n  //         startControl.setErrors({ mustBeAfterTimeWindowStart: true });\r\n  //       } if (endD.toLocaleTimeString() < timeWindowS.toLocaleTimeString() || endD.toLocaleTimeString() > timeWindowE.toLocaleTimeString()) {\r\n  //         console.log('startD:',endD.toLocaleTimeString());\r\n  //         console.log('timeWindiwS:',timeWindowS.toLocaleTimeString());\r\n  //         console.log('timeWindiwE:',this.entity.timeWindowEnd);\r\n  //         endControl.setErrors({ mustBeAfterTimeWindowEnd: true });\r\n  //       } else {\r\n  //         console.log(\"Violated3\");\r\n  //         endControl.setErrors({ mustBeAfterTimeWindowEnd: false });\r\n  //       }\r\n  //     }else{\r\n  //       startControl.setErrors(null);\r\n  //       endControl.setErrors(null);\r\n  //     }\r\n  //     return;\r\n  //   };\r\n  // }\r\n\r\n  AppProfileTimeWindowValidator(endControlName: string, startControlName: string): ValidatorFn {\r\n    return (formGroup: FormGroup): ValidationErrors => {\r\n      const endControl = formGroup.controls[endControlName];\r\n      const startControl = formGroup.controls[startControlName];\r\n      if (this.sendInSpecificTime && this.entity) {\r\n        const options = { hour12: false };\r\n        if (startControl.value && this.entity.timeWindowStart) {\r\n          const startControlDate = new Date(startControl.value);\r\n          startControlDate.setSeconds(0, 0);\r\n          const appProfileTimeWindowStart = new Date(this.entity.timeWindowStart);\r\n          console.log('startControlDate => ', startControlDate.toLocaleTimeString('en-EG', options));\r\n          console.log('appProfileTimeWindowStart => ', appProfileTimeWindowStart.toLocaleTimeString('en-EG', options));\r\n          console.log('startControlDate < appProfileTimeWindowStart => ', startControlDate.toLocaleTimeString('en-EG', options) < appProfileTimeWindowStart.toLocaleTimeString('en-EG', options));\r\n          if (startControlDate.toLocaleTimeString('en-EG', options) < appProfileTimeWindowStart.toLocaleTimeString('en-EG', options)) {\r\n            startControl.setErrors({ mustBeAfterTimeWindowStart: true });\r\n          } else {\r\n            let errors = startControl.errors;\r\n            if (errors && errors['mustBeAfterTimeWindowStart']) {\r\n              delete errors['mustBeAfterTimeWindowStart'];\r\n            }\r\n            if (errors && Object.keys(errors).length === 0) {\r\n              errors = null;\r\n            }\r\n            startControl.setErrors(errors);\r\n          }\r\n        }\r\n\r\n        if (endControl.value && this.entity.timeWindowEnd) {\r\n          const endControlDate = new Date(endControl.value);\r\n          const appProfileTimeWindowEnd = new Date(this.entity.timeWindowEnd);\r\n          endControlDate.setSeconds(0, 0);\r\n          console.log('endControlDate => ', endControlDate.toLocaleTimeString('en-EG', options));\r\n          console.log('appProfileTimeWindowEnd => ', appProfileTimeWindowEnd.toLocaleTimeString('en-EG', options));\r\n          console.log('endControlDate > appProfileTimeWindowEnd => ', endControlDate.toLocaleTimeString('en-EG', options) > appProfileTimeWindowEnd.toLocaleTimeString('en-EG', options));\r\n          if (endControlDate.toLocaleTimeString('en-EG', options) > appProfileTimeWindowEnd.toLocaleTimeString('en-EG', options)) {\r\n            endControl.setErrors({ mustBeAfterTimeWindowEnd: true });\r\n          } else {\r\n            let errors = endControl.errors;\r\n            if (errors && errors['mustBeAfterTimeWindowEnd']) {\r\n              delete errors['mustBeAfterTimeWindowEnd'];\r\n            }\r\n            if (errors && Object.keys(errors).length === 0) {\r\n              errors = null;\r\n            }\r\n            endControl.setErrors(errors);\r\n          }\r\n        }\r\n      }\r\n      return;\r\n    }\r\n  }\r\n  // specificTimeValidator(endControlName: string, startControlName: string): ValidatorFn {\r\n  //   return (formGroup: FormGroup): ValidationErrors => {\r\n  //     const control = formGroup.controls[endControlName];\r\n  //     const matchingControl = formGroup.controls[startControlName];\r\n  //     if (this.sendInSpecificTime) {\r\n  //       if (control.value <= matchingControl.value) {\r\n  //         control.setErrors({ mustBeAfter: true });\r\n  //       } else {\r\n  //         control.setErrors(null);\r\n  //       }\r\n  //     } else {\r\n  //       control.setErrors(null);\r\n  //     }\r\n  //     return;\r\n  //   };\r\n  // }\r\n\r\n\r\n  onSubmit() {\r\n    this.campaignService.scrollIfFormHasErrors(this.campaignForm);\r\n    for (const i in this.campaignForm.controls) {\r\n      if (this.campaignForm.controls[i]) { this.campaignForm.controls[i].markAsTouched(); }\r\n    }\r\n    console.log('OnSubmit', this.campaignForm);\r\n    /*let tempDate = this.combineDateTime(this.campaignForm.controls['startDate'].value, this.startTime);\r\n    this.campaignForm.controls['startDate'].setValue(tempDate);\r\n    tempDate = this.combineDateTime(this.campaignForm.controls['endDate'].value, this.endTime);\r\n    this.campaignForm.controls['endDate'].setValue(tempDate);*/\r\n    if (this.campaignForm.get('groupId').value && !this.fileFlag) {\r\n      let campaignGroup = this.groupsList.filter(x => {\r\n        return x.groupId === this.campaignForm.get('groupId').value;\r\n      });\r\n      this.placeholders = (campaignGroup && campaignGroup[0].parameters != null) ? campaignGroup[0].parameters : [];\r\n    }\r\n    if ((this.fileType !== null && this.fileType !== 1) || this.campaignForm.get('groupId').value) {\r\n      this.checkPlaceholdersExist(this.campaignForm.get('notificationText').value);\r\n    }\r\n    if (this.cf['paceType'].value !== '3') {\r\n      this.cf['paceRate'].setValue(this.entity.maxThroughput);\r\n    }\r\n\r\n    if (!this.sendInSpecificTime) {\r\n      this.campaignForm.get('sendStartTime').setErrors(null);\r\n      this.campaignForm.get('sendEndTime').setErrors(null);\r\n    }\r\n    if (this.mode !== 1) {\r\n      const campaignRequest = new CampaignRequestModel;\r\n      campaignRequest.campaignModel = new CampaignModel;\r\n      campaignRequest.campaignModel = this.campaignForm.value;\r\n\r\n      if (this.fileFlag) {\r\n        // Make sure we got the latest filetype before submitting\r\n        this.fileModel.fileType = this.fileType;\r\n        campaignRequest.fileRequestModel = new FileModel;\r\n        campaignRequest.fileRequestModel = this.fileModel;\r\n\r\n        this.campaignForm.patchValue({ groupId: null });\r\n        this.campaignForm.get('groupId').clearValidators();\r\n      } else {\r\n        this.campaignForm.get('groupId').setValidators([Validators.required, this.groupDialsSizeValidator(this.groupsList)]);\r\n      }\r\n\r\n      // Stop if form is invalid\r\n      if (this.campaignForm.invalid) {\r\n        return;\r\n      }\r\n\r\n      if (this.fileFlag) {\r\n        campaignRequest.campaignModel.dialsFormat = this.fileType;\r\n      } else {\r\n        campaignRequest.campaignModel.dialsFormat = this.groupsList.find(x => x.groupId === campaignRequest.campaignModel.groupId).fileType;\r\n      }\r\n\r\n      campaignRequest.campaignModel.deliveryReport = this.entity.deliveryReport;\r\n\r\n      if (this.entity) {\r\n        if (this.entity.remainingDailyQuota <= 0) {\r\n          this.messageService.addWarnings(['Daily Quota Limit Reached']);\r\n        }\r\n      }\r\n\r\n      const arabic = /[\\u0600-\\u06FF]/;\r\n      if (arabic.test(this.campaignForm.get('notificationText').value)) {\r\n        campaignRequest.campaignModel.language = 'AR';\r\n      }\r\n\r\n      this.campaignService.create(campaignRequest).subscribe(\r\n        response => {\r\n          console.log('CreateCampaign ', response.responsePayload);\r\n          if (response.status === 0) {\r\n            this.navigateBack();\r\n          }\r\n        });\r\n    } else {\r\n      const campaignRequest = new CampaignRequestModel;\r\n      campaignRequest.campaignModel = new CampaignModel;\r\n      campaignRequest.campaignModel = this.campaignForm.value;\r\n      // Stop if form is invalid\r\n\r\n      if (this.fileFlag) {\r\n        campaignRequest.fileRequestModel = new FileModel;\r\n        campaignRequest.fileRequestModel = this.fileModel;\r\n        this.campaignForm.patchValue({ groupId: null });\r\n        this.campaignForm.get('groupId').clearValidators();\r\n      } else {\r\n        this.campaignForm.get('groupId').setValidators([Validators.required, this.groupDialsSizeValidator(this.groupsList)]);\r\n      }\r\n      if (this.editAfterCampaignStart) {\r\n        if (this.campaignForm.get('endDate').invalid || this.campaignForm.get('endTime').invalid\r\n          || this.campaignForm.get('name').invalid || (this.scheduleFlag && (this.campaignForm.get('sendStartTime').invalid\r\n            || this.campaignForm.get('sendEndTime').invalid)) || this.campaignForm.get('paceRate').invalid) {\r\n          return;\r\n        }\r\n      } else {\r\n        if (this.campaignForm.invalid) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      this.campaignService.update(campaignRequest).subscribe(\r\n        response => {\r\n          console.log('Update Campaign ', response.responsePayload);\r\n          this.navigateBack();\r\n        });\r\n    }\r\n  }\r\n\r\n  now() {\r\n    const d = new Date(new Date().getTime() - (24 * 60 * 60 * 1000));\r\n    return d;\r\n  }\r\n  setScheduled(flag: boolean) {\r\n    this.scheduleFlag = flag;\r\n    if (flag) {\r\n      this.setDateValidator();\r\n    } else {\r\n      this.campaignForm.patchValue({\r\n        startDate: new Date()\r\n      });\r\n      this.clearDateValidator();\r\n    }\r\n  }\r\n\r\n  setFileFlag(flag: boolean) {\r\n    this.fileFlag = flag;\r\n    if (flag === true) {\r\n      this.campaignForm.patchValue({ 'groupId': null });\r\n      this.campaignForm.get('groupId').clearValidators();\r\n    } else {\r\n      this.campaignForm.get('groupId').setValidators([Validators.required, this.groupDialsSizeValidator(this.groupsList)]);\r\n    }\r\n  }\r\n\r\n  setSmsTemplateFlag(flag: boolean) {\r\n    this.smsTemplateFlag = flag;\r\n  }\r\n\r\n  toggleCritical() {\r\n    this.newCampaign.isCritical = !this.newCampaign.isCritical;\r\n  }\r\n\r\n  toggleSendInSpecificTime() {\r\n    // this.sendInSpecificTime = !this.sendInSpecificTime;\r\n    if (!this.sendInSpecificTime) {\r\n      this.campaignForm.get('sendStartTime').setValidators(Validators.required);\r\n      this.campaignForm.get('sendEndTime').setValidators(Validators.required);\r\n    } else {\r\n      console.log(\"errors reset\");\r\n      this.campaignForm.get('sendStartTime').reset();\r\n      this.campaignForm.get('sendStartTime').setErrors(null);\r\n      this.campaignForm.get('sendEndTime').reset();\r\n      this.campaignForm.get('sendEndTime').setErrors(null);\r\n    }\r\n  }\r\n\r\n  combineDateTime(date: Date, time: Date) {\r\n    if (date && time) {\r\n      date.setHours(time.getHours());\r\n      date.setMinutes(time.getMinutes());\r\n      return date;\r\n    }\r\n  }\r\n\r\n  activeFileType(id: number) {\r\n    this.fileType = id;\r\n    this.fileUploaded = null;\r\n  }\r\n\r\n  clearUploadedFile() {\r\n    this.placeholders = this.placeholders.filter(x => { true; });\r\n    this.fileType = null;\r\n    this.fileUploaded = null;\r\n  }\r\n\r\n  public dropped(event: UploadEvent) {\r\n    this.fileUploaded = event.files[0];\r\n    if (event.files.length === 1) {\r\n      if (this.fileUploaded.fileEntry.isFile) {\r\n        const fileEntry = this.fileUploaded.fileEntry as FileSystemFileEntry;\r\n        fileEntry.file((file: File) => {\r\n          // Access the real file\r\n          this.fileModel.fileName = file.name;\r\n          this.fileModel.fileType = this.fileType;\r\n          const reader = this.createFileReader(file);\r\n          reader.readAsText(file);\r\n        });\r\n      } else {\r\n        // It was a directory (empty directories are added, otherwise only files)\r\n        const fileEntry = this.fileUploaded.fileEntry as FileSystemDirectoryEntry;\r\n        console.log(this.fileUploaded.relativePath, fileEntry);\r\n      }\r\n    } else if (this.files.length > 1) {\r\n      this.messageService.addWarnings(['Please Choose One File Only!']);\r\n    }\r\n  }\r\n\r\n  checkPlaceholdersExist(smsScript: string) {\r\n    this.invalidPlaceholders = \"[\";\r\n    let smsScriptPlaceholders: string[] = [];\r\n    let remainingSmsScript = smsScript == null ? \"\" : smsScript;\r\n    let placeholder;\r\n    let hasErrors: boolean = false;\r\n    while (placeholder = remainingSmsScript.match(\"\\{[A-Za-z0-9]+\\}\")) {\r\n      if (this.placeholders[placeholder]) {\r\n        console.log(placeholder);\r\n      } else {\r\n        hasErrors = true;\r\n        this.invalidPlaceholders = this.invalidPlaceholders + placeholder + \" \";\r\n      }\r\n      remainingSmsScript = remainingSmsScript.replace(placeholder, \"\");\r\n    }\r\n    let errors = this.campaignForm.get('notificationText').errors;\r\n    if (hasErrors) {\r\n      if (errors) {\r\n        errors['invalidPlaceholder'] = true;\r\n      } else {\r\n        errors = { invalidPlaceholder: true };\r\n      }\r\n    } else {\r\n      if (errors && errors['invalidPlaceholder']) {\r\n        delete errors['invalidPlaceholder'];\r\n        if (Object.keys(errors).length === 0) {\r\n          errors = null;\r\n        }\r\n      }\r\n    }\r\n    this.campaignForm.get('notificationText').setErrors(errors);\r\n    this.invalidPlaceholders = this.invalidPlaceholders.substr(0, this.invalidPlaceholders.length - 1) + \"]\";\r\n  }\r\n\r\n  public fileOver(event) {\r\n    console.log(event);\r\n  }\r\n\r\n  public fileLeave(event) {\r\n    console.log(event);\r\n  }\r\n\r\n  createFileReader(file): FileReader {\r\n    this.placeholders = this.placeholders.filter(x => { ; });\r\n\r\n    let text: string | ArrayBuffer;\r\n    const reader = new FileReader();\r\n    reader.onloadend = (() => {\r\n      text = reader.result;\r\n      let textString = text.toString();\r\n      let line: string;\r\n      if (text.toString().indexOf('\\n') > 1) {\r\n        line = textString.substr(0, text.toString().indexOf('\\n') + 1);\r\n      } else {\r\n        line = textString + '\\n';\r\n      }\r\n\r\n      if (textString.trim() === '') {\r\n        this.messageService.addWarnings([\"File is empty!\"]);\r\n        this.fileUploaded = null;\r\n        return null;\r\n      } else if (!this.checkForFileType(line)) {\r\n        this.messageService.addWarnings([\"Uploaded File doesn't match the selected type!\"]);\r\n        this.fileUploaded = null;\r\n        return null;\r\n      }\r\n      let params = line.substring(line.indexOf(',') + 1);\r\n      do {\r\n        this.placeholders['{' + params.substring(0, params.indexOf('=')) + '}'] = true;\r\n        params = params.substring((params.indexOf(',') > 0) ? params.indexOf(',') + 1 : params.indexOf('\\n'));\r\n      } while (params.indexOf('\\n') > 0);\r\n\r\n      //const base64String = btoa(text.toString());\r\n      const base64String = Base64.encode(text.toString());\r\n      this.fileModel.b64String = base64String;\r\n      this.messageService.addInfo('File uploaded successfully!');\r\n    });\r\n    return reader;\r\n  }\r\n\r\n  retrieveGroups(): void {\r\n    this.groupService.list().subscribe(response => {\r\n      this.groupsList = response.responsePayload;\r\n      this.campaignForm.get('groupId').setValidators([Validators.required, this.groupDialsSizeValidator(this.groupsList)]);\r\n      this.campaignForm.get('groupId').setValue(this.campaignForm.get('groupId').value);\r\n      if (!this.groupsList) {\r\n        this.fileFlag = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  retrieveSmsTemplates(): void {\r\n    this.smsTemplatesService.listSmsTemplates().subscribe(response => {\r\n      this.smsTemplatesList = response.responsePayload;\r\n      if (!this.smsTemplatesList) {\r\n        this.smsTemplatesList = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  retrieveFakeSenders(): void {\r\n    this.campaignService.listSenders().subscribe(response => this.fakeSenders = response.responsePayload);\r\n  }\r\n\r\n  retrieveEntity(): void {\r\n    this.entityService.getEntity(this.user.entityId).subscribe(response => {\r\n      this.entity = new EntityModel();\r\n      this.entity = response.responsePayload;\r\n      if (this.entity.remainingDailyQuota <= 0) {\r\n        this.messageService.addWarnings(['Daily Quota Limit Reached']);\r\n      }\r\n      this.campaignForm.get('paceRate').setValidators([Validators.required, Validators.min(1), Validators.max(this.entity.maxThroughput)]);\r\n      console.log(this.entity);\r\n    });\r\n  }\r\n\r\n  assignGroup(id: number) {\r\n    this.newCampaign.groupId = id;\r\n    console.log('groupId = ' + this.newCampaign.groupId);\r\n  }\r\n  assignSmsTemplate(text: string) {\r\n    this.newCampaign.notificationText = text;\r\n  }\r\n\r\n  assignSenderName(text: string) {\r\n    this.newCampaign.senderName = text;\r\n  }\r\n\r\n  toggleFakeSender() {\r\n    this.canAddFakeSender = !this.canAddFakeSender;\r\n  }\r\n\r\n  navigateBack() {\r\n    this.router.navigate(['campaigns']);\r\n  }\r\n\r\n  downloadSample() {\r\n    console.log('downloading sample');\r\n    let f: AngularCsv;\r\n    if (this.fileType === 0) {\r\n      f = new AngularCsv(this.sample0, 'Sample', this.csvOptions);\r\n    } else if (this.fileType === 1) {\r\n      f = new AngularCsv(this.sample1, 'Sample', this.csvOptions);\r\n    } else {\r\n      f = new AngularCsv(this.sample2, 'Sample', this.csvOptions);\r\n    }\r\n  }\r\n  checkForFileType(line: string): boolean {\r\n    console.log(\"line\", line);\r\n    console.log(\"selected file type\", this.fileModel.fileType);\r\n    let numberOfComma: number = line.split(\",\").length - 1;\r\n    console.log(\"numberOfComma \", numberOfComma);\r\n    if (this.fileModel.fileType === 0 && numberOfComma === 0) {\r\n      return true;\r\n    } else if (this.fileModel.fileType === 1 && numberOfComma === 1) {\r\n      return true;\r\n    } else if (this.fileModel.fileType === 2 && numberOfComma >= 2) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  groupDialsSizeValidator(groupsList: GroupModel[]): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: boolean } | null => {\r\n      if (control.value && groupsList) {\r\n        const x = groupsList.findIndex(x => x.groupId === control.value);\r\n        if (groupsList[x] && groupsList[x].dialsCount < 1) {\r\n          return { 'zeroDials': true };\r\n        }\r\n      }\r\n      return null;\r\n    };\r\n  }\r\n\r\n  charsetValidator(control: AbstractControl) {\r\n    // const arabic = /[\\u0600-\\u06FF]/;\r\n    // const english = /[\\u0020-\\u007E]/;\r\n    let value: string = control.value;\r\n\r\n    if (value) {\r\n\r\n      let searchResult = value.search('([^\\u0600-\\u06FF\\u0020-\\u007E])');\r\n      if(searchResult != -1){\r\n        console.log(\"serachResult=>\", searchResult);\r\n        console.log(\"invalidCharacterIs ==>\",value.charAt(searchResult));\r\n        return { invalidCharacterFlag: true, invalidCharacter: value.charAt(searchResult)};\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhbXBhaWducy9jYW1wYWlnbi1kZXRhaWxzL2NhbXBhaWduLWRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"campaign-details\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div *ngIf=\\\"campaign.isInternal || campaign.isCritical\\\" class=\\\"col-12 text-left mb-4\\\">\\r\\n      <label *ngIf=\\\"campaign.isCritical\\\" class=\\\"form-input-label mr-2 indicator indicator-red\\\">CRITICAL</label>\\r\\n      <label *ngIf=\\\"campaign.isInternal\\\" class=\\\"form-input-label indicator indicator-green\\\">INTERNAL</label>\\r\\n    </div>\\r\\n    <div class=\\\"text-left mb-4\\\" [ngClass]=\\\"{'col-4': campaign.statusMessage, 'col-8': !campaign.statusMessage}\\\">\\r\\n      <label class=\\\"form-input-label\\\">STATUS</label>\\r\\n      <div class=\\\"title-gray-dark\\\"><b>{{getStatusText()}}</b></div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"campaign.statusMessage\\\" class=\\\"col-4 text-left mb-4\\\">\\r\\n      <label class=\\\"form-input-label\\\">STATUS MESSAGE</label>\\r\\n      <div class=\\\"title-gray-dark\\\"><b>{{campaign.statusMessage}}</b></div>\\r\\n    </div>\\r\\n    <div class=\\\"col-4 text-left mb-4\\\">\\r\\n      <label class=\\\"form-input-label\\\">ENTITY</label>\\r\\n      <div class=\\\"title-gray-dark\\\"><b>{{campaign.entityName}}</b></div>\\r\\n    </div>\\r\\n    <div class=\\\"col-4 text-left mb-4\\\">\\r\\n      <label class=\\\"form-input-label\\\">CAMPAIGN STARTS</label>\\r\\n      <div class=\\\"title-gray-dark\\\">{{campaign.startDate | date :  \\\"dd MMMM yyyy hh:mm aa\\\"}}</div>\\r\\n    </div>\\r\\n    <div class=\\\"col-4 text-left mb-4\\\">\\r\\n      <label class=\\\"form-input-label\\\">CAMPAIGN ENDS</label>\\r\\n      <div *ngIf=\\\"campaign.endDate\\\" class=\\\"title-gray-dark\\\">{{campaign.endDate | date :  \\\"dd MMMM yyyy hh:mm aa\\\"}}\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!campaign.endDate\\\" class=\\\"title-gray-dark\\\">Not Specified</div>\\r\\n    </div>\\r\\n    <div class=\\\"col-4 text-left mb-4\\\">\\r\\n      <label class=\\\"form-input-label\\\">CAMPAIGN CREATION TIME</label>\\r\\n      <div class=\\\"title-gray-dark\\\">{{campaign.creationTime | date :  \\\"dd MMMM yyyy hh:mm aa\\\"}}</div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"campaign\\\" class=\\\"col-12 mb-4\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div *ngIf=\\\"campaign.createdByUsername\\\" class=\\\"col-4 text-left \\\">\\r\\n          <label class=\\\"form-input-label\\\">CREATED BY</label>\\r\\n          <div class=\\\"title-gray-dark\\\">{{campaign.createdByUsername}}</div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"campaign.dialsFormat\\\" class=\\\"col-4 text-left \\\">\\r\\n          <label class=\\\"form-input-label\\\">DIALS FORMAT</label>\\r\\n          <div class=\\\"title-gray-dark\\\">{{getDialsFormat()}}</div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"campaign.groupName\\\" class=\\\"col-4 text-left \\\">\\r\\n          <label class=\\\"form-input-label\\\">TARGET GROUP</label>\\r\\n          <div class=\\\"title-gray-dark\\\">{{campaign.groupName}}</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"campaign\\\" class=\\\"col-12 mb-4\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div *ngIf=\\\"campaign.lastModifiedByUsername\\\" class=\\\"col-4 text-left \\\">\\r\\n          <label class=\\\"form-input-label\\\">LAST MODIFIED BY</label>\\r\\n          <div class=\\\"title-gray-dark\\\">{{campaign.lastModifiedByUsername}}</div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"campaign.lastModificationDate\\\" class=\\\"col-4 text-left \\\">\\r\\n          <label class=\\\"form-input-label\\\">LAST MODIFICATION DATE</label>\\r\\n          <div class=\\\"title-gray-dark\\\">{{campaign.lastModificationDate | date :  \\\"dd MMMM yyyy hh:mm aa\\\"}}</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-4 text-left mb-4\\\">\\r\\n      <label class=\\\"form-input-label\\\">FAKE SENDER NAME</label>\\r\\n      <div class=\\\"title-gray-dark\\\"><b>{{campaign.senderName}}</b></div>\\r\\n    </div>\\r\\n    <div class=\\\"col-12 text-left mb-4\\\">\\r\\n      <label class=\\\"form-input-label\\\">SMS SCRIPT</label>\\r\\n      <div class=\\\"title-gray-dark\\\"><b>{{campaign.notificationText}}</b></div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"campaign.sendStartTime\\\" class=\\\"col-4 text-left mb-4\\\">\\r\\n      <label class=\\\"form-input-label\\\">SMS SENDING STARTS AT</label>\\r\\n      <div class=\\\"title-gray-dark\\\">{{campaign.sendStartTime | date :  \\\"hh:mm aa\\\"}}</div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"campaign.sendEndTime\\\" class=\\\"col-4 text-left mb-4\\\">\\r\\n      <label class=\\\"form-input-label\\\">SMS SENDING ENDS AT</label>\\r\\n      <div class=\\\"title-gray-dark\\\">{{campaign.sendEndTime | date :  \\\"hh:mm aa\\\"}}</div>\\r\\n    </div>\\r\\n    <div class=\\\"col-3 text-left\\\">\\r\\n      <label class=\\\"form-input-label\\\">Sending Pace</label>\\r\\n      <div class=\\\"title-gray-dark\\\">{{getPaceText()}}</div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"campaignStats\\\" class=\\\"col-12\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div *ngIf=\\\"user.requiresDelivery && campaignStats.sent\\\" class=\\\"col-2 text-left \\\">\\r\\n          <label class=\\\"form-input-label\\\">SENT SMS</label>\\r\\n          <div class=\\\"title-gray-dark\\\">{{campaignStats.sent}}</div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"user.requiresDelivery && campaignStats.delivered\\\" class=\\\"col-2 text-left \\\">\\r\\n          <label class=\\\"form-input-label\\\">DELIVERED SMS</label>\\r\\n          <div class=\\\"title-gray-dark\\\">{{campaignStats.delivered}}</div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"user.requiresDelivery && campaignStats.failed\\\" class=\\\"col-2 text-left \\\">\\r\\n          <label class=\\\"form-input-label\\\">FAILED SMS</label>\\r\\n          <div class=\\\"title-gray-dark\\\">{{campaignStats.failed}}</div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"campaignStats.totalCount\\\" class=\\\"col-2 text-left \\\">\\r\\n          <label class=\\\"form-input-label\\\">TOTAL SMS</label>\\r\\n          <div class=\\\"title-gray-dark\\\">{{campaignStats.totalCount}}</div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"user.requiresDelivery && campaignStats.rate\\\" class=\\\"col-2 text-left \\\">\\r\\n          <label class=\\\"form-input-label\\\">SMS RATE</label>\\r\\n          <div class=\\\"title-gray-dark\\\">{{campaignStats.rate}}</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- <div *ngIf=\\\"!campaignStats\\\" class=\\\"row\\\">\\r\\n    <div class=\\\"col-12 text-center p-4\\\">\\r\\n      LOADING CAMPAIGN DETAILS\\r\\n    </div>\\r\\n  </div> -->\\r\\n</div>\"","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\r\nimport { CampaignModel } from 'src/app/shared/models/campaign-model';\r\nimport { CampaignStatisticsModel } from 'src/app/shared/models/campaign-stat-model';\r\nimport { CampaignService } from '../campaign.service';\r\nimport { Defines } from 'src/app/shared/static/defines';\r\nimport { User } from 'src/app/shared/models/user-model';\r\n\r\n@Component({\r\n  selector: 'ndp-campaign-details',\r\n  templateUrl: './campaign-details.component.html',\r\n  styleUrls: ['./campaign-details.component.css']\r\n})\r\nexport class CampaignDetailsComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() campaign: CampaignModel;\r\n  campaignStats: CampaignStatisticsModel;\r\n  private intervalId: any;\r\n  public user:User;\r\n\r\n  constructor(private campaignService: CampaignService) { }\r\n\r\n  ngOnInit() {\r\n    this.user = JSON.parse(localStorage.getItem(Defines.SESSION_KEYS.userModel));\r\n    this.refreshData();\r\n    this.intervalId = setInterval(() => { this.refreshData(); }, 60000);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.intervalId) {\r\n      clearInterval(this.intervalId);\r\n    }\r\n  }\r\n  async refreshData() {\r\n    this.campaignService.getStats(this.campaign.campaignId).subscribe(template => {\r\n      this.campaignStats = template.responsePayload;\r\n    });\r\n  }\r\n\r\n\r\n  getStatus(campaign: CampaignModel) {\r\n    const startDate = new Date(campaign.startDate);\r\n    const endDate = new Date(campaign.endDate);\r\n    const currentDate = new Date();\r\n\r\n    if (campaign.status === Defines.CAMPAIGN_STATUS.PAUSED) {\r\n      return Defines.CAMPAIGN_DISPLAY_STATUS.PAUSED;\r\n    }\r\n    if (campaign.status === Defines.CAMPAIGN_STATUS.PENDING) {\r\n      return Defines.CAMPAIGN_DISPLAY_STATUS.PENDING;\r\n    }\r\n    if (campaign.status === Defines.CAMPAIGN_STATUS.PROCESSING) {\r\n      return Defines.CAMPAIGN_DISPLAY_STATUS.PROCESSING_FILE;\r\n    }\r\n    if (campaign.status === Defines.CAMPAIGN_STATUS.READY && currentDate < startDate) {\r\n      return Defines.CAMPAIGN_DISPLAY_STATUS.SCHEDULED;\r\n    }\r\n    if (campaign.status === Defines.CAMPAIGN_STATUS.FAILED || campaign.status === Defines.CAMPAIGN_STATUS.SNAPSHOT_FAILED) {\r\n      return Defines.CAMPAIGN_DISPLAY_STATUS.FAILED;\r\n    }\r\n    if (campaign.status === Defines.CAMPAIGN_STATUS.HANDLING || campaign.status === Defines.CAMPAIGN_STATUS.SMS_ENQUEUED\r\n      || (campaign.status === Defines.CAMPAIGN_STATUS.READY && currentDate >= startDate)) {\r\n      return Defines.CAMPAIGN_DISPLAY_STATUS.RUNNING;\r\n    }\r\n    if (campaign.status === Defines.CAMPAIGN_STATUS.SUCCESS) {\r\n      return Defines.CAMPAIGN_DISPLAY_STATUS.FINISHED;\r\n    }\r\n    if (campaign.status === Defines.CAMPAIGN_STATUS.ALL_MESSAGES_FAILED) {\r\n      return Defines.CAMPAIGN_DISPLAY_STATUS.ALL_MESSAGES_FAILED;\r\n    }\r\n  }\r\n  get displayStatus() {\r\n    return Defines.CAMPAIGN_DISPLAY_STATUS;\r\n  }\r\n\r\n  getPaceText() {\r\n    switch (+this.campaign.paceType) {\r\n      case 1:\r\n        return 'Maximum Throughput';\r\n      case 2:\r\n        return 'Distributed';\r\n      case 3:\r\n        return this.campaign.paceRate + ' Message / Second';\r\n    }\r\n  }\r\n\r\n  getStatusText() {\r\n    switch (this.getStatus(this.campaign)) {\r\n      case Defines.CAMPAIGN_DISPLAY_STATUS.PAUSED:\r\n        return 'Paused';\r\n      case Defines.CAMPAIGN_DISPLAY_STATUS.PENDING:\r\n        return 'Pending';\r\n      case Defines.CAMPAIGN_DISPLAY_STATUS.PROCESSING_FILE:\r\n        return 'Processing File';\r\n      case Defines.CAMPAIGN_DISPLAY_STATUS.SCHEDULED:\r\n        return 'Scheduled';\r\n      case Defines.CAMPAIGN_DISPLAY_STATUS.RUNNING:\r\n        return 'Running';\r\n      case Defines.CAMPAIGN_DISPLAY_STATUS.FINISHED:\r\n        return 'Finished';\r\n      case Defines.CAMPAIGN_DISPLAY_STATUS.FAILED:\r\n        return 'Failed';\r\n      case Defines.CAMPAIGN_DISPLAY_STATUS.ALL_MESSAGES_FAILED:\r\n        return 'Failed';\r\n    }\r\n  }\r\n  getDialsFormat() {\r\n    switch (this.campaign.dialsFormat) {\r\n      case 0:\r\n        return 'Dials only';\r\n      case 1:\r\n        return 'Dials with name';\r\n      case 2:\r\n        return 'Dials with many values';\r\n    }\r\n  }\r\n}\r\n","module.exports = \".ngx-pagination {\\r\\n\\ttext-align: center;\\r\\n}\\r\\n\\r\\n.campaigns-item-progress .hours-numbers {\\r\\n\\tfont-family: \\\"robotomedium\\\";\\r\\n\\tfont-size: 25px;\\r\\n\\ttext-align: center;\\r\\n}\\r\\n\\r\\n.campaigns-item-title .id {\\r\\n\\tcolor: #464852;\\r\\n}\\r\\n\\r\\n.filter-menu{\\r\\n    position: absolute;\\r\\n    z-index: 100;\\r\\n\\tbox-shadow: 1px 2px 4px rgba(0, 0, 0, .5);\\r\\n\\tright:0;\\r\\n}\\r\\n\\r\\n/*\\r\\nSMS Edit Delete\\r\\n\\r\\n.dropdown { \\r\\n    position: absolute;\\r\\n    top: -15px;\\r\\n    z-index: 500;\\r\\n    right: -30px;\\r\\n    text-align: center;\\r\\n    margin: 0;\\r\\n}\\r\\n.dropdown .field {\\r\\n\\twidth:300px; background:#a3d94e; color:#fff; padding:5px; border:none; cursor:pointer;\\r\\n\\tfont-family:'lucida sans unicode',sans-serif; font-size:1em;\\r\\n\\tborder:solid 1px #a3d94e;\\r\\n\\t-webkit-transition: all .4s ease-in-out;\\r\\n\\ttransition: all .4s ease-in-out;\\r\\n}\\r\\n.dropdown .field:hover {\\r\\n\\tborder:solid 1px #fff;\\r\\n\\t-moz-box-shadow:0 0 5px #999; -webkit-box-shadow:0 0 5px #999; box-shadow:0 0 5px #999\\r\\n}\\r\\n.dropdown>ul.list {\\r\\n\\tposition:relative; \\r\\n\\tz-index:999;\\r\\n\\twidth:100px;\\r\\n\\tmargin:0; padding:10px; list-style:none;\\r\\n\\tbackground:#fff; color:#333;\\r\\n\\t-moz-border-radius:5px; -webkit-border-radius:5px; border-radius:5px;\\r\\n\\t-moz-box-shadow:0 0 5px #999; -webkit-box-shadow:0 0 5px #999; box-shadow:0 0 5px #999\\r\\n}\\r\\n.dropdown>ul.list li {\\r\\n\\tpadding:10px;\\r\\n}\\r\\n.dropdown>ul.list li:hover {\\r\\n\\tbackground:#a3d94e; color:#fff;border-radius: 50px;\\r\\n\\tcursor: pointer;\\r\\n}\\r\\n.dropdown>ul.list li:last-child { border:none }*/\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2FtcGFpZ25zL2NhbXBhaWduLWxpc3QvY2FtcGFpZ24tbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0NBQ0Msa0JBQWtCO0FBQ25COztBQUVBO0NBQ0MsMkJBQTJCO0NBQzNCLGVBQWU7Q0FDZixrQkFBa0I7QUFDbkI7O0FBRUE7Q0FDQyxjQUFjO0FBQ2Y7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsWUFBWTtDQUNmLHlDQUF5QztDQUN6QyxPQUFPO0FBQ1I7O0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2dEQXNDZ0QiLCJmaWxlIjoic3JjL2FwcC9jYW1wYWlnbnMvY2FtcGFpZ24tbGlzdC9jYW1wYWlnbi1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubmd4LXBhZ2luYXRpb24ge1xyXG5cdHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLmNhbXBhaWducy1pdGVtLXByb2dyZXNzIC5ob3Vycy1udW1iZXJzIHtcclxuXHRmb250LWZhbWlseTogXCJyb2JvdG9tZWRpdW1cIjtcclxuXHRmb250LXNpemU6IDI1cHg7XHJcblx0dGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4uY2FtcGFpZ25zLWl0ZW0tdGl0bGUgLmlkIHtcclxuXHRjb2xvcjogIzQ2NDg1MjtcclxufVxyXG5cclxuLmZpbHRlci1tZW51e1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgei1pbmRleDogMTAwO1xyXG5cdGJveC1zaGFkb3c6IDFweCAycHggNHB4IHJnYmEoMCwgMCwgMCwgLjUpO1xyXG5cdHJpZ2h0OjA7XHJcbn1cclxuXHJcbi8qXHJcblNNUyBFZGl0IERlbGV0ZVxyXG5cclxuLmRyb3Bkb3duIHsgXHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IC0xNXB4O1xyXG4gICAgei1pbmRleDogNTAwO1xyXG4gICAgcmlnaHQ6IC0zMHB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbWFyZ2luOiAwO1xyXG59XHJcbi5kcm9wZG93biAuZmllbGQge1xyXG5cdHdpZHRoOjMwMHB4OyBiYWNrZ3JvdW5kOiNhM2Q5NGU7IGNvbG9yOiNmZmY7IHBhZGRpbmc6NXB4OyBib3JkZXI6bm9uZTsgY3Vyc29yOnBvaW50ZXI7XHJcblx0Zm9udC1mYW1pbHk6J2x1Y2lkYSBzYW5zIHVuaWNvZGUnLHNhbnMtc2VyaWY7IGZvbnQtc2l6ZToxZW07XHJcblx0Ym9yZGVyOnNvbGlkIDFweCAjYTNkOTRlO1xyXG5cdC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIC40cyBlYXNlLWluLW91dDtcclxuXHR0cmFuc2l0aW9uOiBhbGwgLjRzIGVhc2UtaW4tb3V0O1xyXG59XHJcbi5kcm9wZG93biAuZmllbGQ6aG92ZXIge1xyXG5cdGJvcmRlcjpzb2xpZCAxcHggI2ZmZjtcclxuXHQtbW96LWJveC1zaGFkb3c6MCAwIDVweCAjOTk5OyAtd2Via2l0LWJveC1zaGFkb3c6MCAwIDVweCAjOTk5OyBib3gtc2hhZG93OjAgMCA1cHggIzk5OVxyXG59XHJcbi5kcm9wZG93bj51bC5saXN0IHtcclxuXHRwb3NpdGlvbjpyZWxhdGl2ZTsgXHJcblx0ei1pbmRleDo5OTk7XHJcblx0d2lkdGg6MTAwcHg7XHJcblx0bWFyZ2luOjA7IHBhZGRpbmc6MTBweDsgbGlzdC1zdHlsZTpub25lO1xyXG5cdGJhY2tncm91bmQ6I2ZmZjsgY29sb3I6IzMzMztcclxuXHQtbW96LWJvcmRlci1yYWRpdXM6NXB4OyAtd2Via2l0LWJvcmRlci1yYWRpdXM6NXB4OyBib3JkZXItcmFkaXVzOjVweDtcclxuXHQtbW96LWJveC1zaGFkb3c6MCAwIDVweCAjOTk5OyAtd2Via2l0LWJveC1zaGFkb3c6MCAwIDVweCAjOTk5OyBib3gtc2hhZG93OjAgMCA1cHggIzk5OVxyXG59XHJcbi5kcm9wZG93bj51bC5saXN0IGxpIHtcclxuXHRwYWRkaW5nOjEwcHg7XHJcbn1cclxuLmRyb3Bkb3duPnVsLmxpc3QgbGk6aG92ZXIge1xyXG5cdGJhY2tncm91bmQ6I2EzZDk0ZTsgY29sb3I6I2ZmZjtib3JkZXItcmFkaXVzOiA1MHB4O1xyXG5cdGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG4uZHJvcGRvd24+dWwubGlzdCBsaTpsYXN0LWNoaWxkIHsgYm9yZGVyOm5vbmUgfSovIl19 */\"","module.exports = \"<div #cont class=\\\"page-content home\\\" *ngIf=\\\"campaignsList\\\">\\r\\n  <div class=\\\"campaigns\\\">\\r\\n    <div *ngIf=\\\"initialized\\\" class=\\\"row no-gutters mb-4\\\">\\r\\n      <div class=\\\"col-xl-6 col-lg-12 p-0 mb-5 mb-xl-0\\\">\\r\\n        <div class=\\\"campaigns-tabs\\\">\\r\\n          <span (click)=\\\"setFilterStatus(displayStatus.ALL)\\\" class=\\\"campaigns-tabs-link\\\"\\r\\n            [ngClass]=\\\"{'active' : status === displayStatus.ALL, 'pointer': status !== displayStatus.ALL}\\\">All</span>\\r\\n          <span (click)=\\\"setFilterStatus(displayStatus.RUNNING)\\\" class=\\\"campaigns-tabs-link\\\"\\r\\n            [ngClass]=\\\"{'active' : status === displayStatus.RUNNING, 'pointer': status !== displayStatus.RUNNING}\\\">Running</span>\\r\\n          <span (click)=\\\"setFilterStatus(displayStatus.SCHEDULED)\\\" class=\\\"campaigns-tabs-link\\\"\\r\\n            [ngClass]=\\\"{'active' : status === displayStatus.SCHEDULED, 'pointer': status !== displayStatus.SCHEDULED}\\\">Scheduled</span>\\r\\n          <span (click)=\\\"setFilterStatus(displayStatus.PENDING)\\\" class=\\\"campaigns-tabs-link\\\"\\r\\n            [ngClass]=\\\"{'active' : status === displayStatus.PENDING, 'pointer': status !== displayStatus.PENDING}\\\">Pending</span>\\r\\n          <span (click)=\\\"setFilterStatus(displayStatus.PAUSED)\\\" class=\\\"campaigns-tabs-link\\\"\\r\\n            [ngClass]=\\\"{'active' : status === displayStatus.PAUSED, 'pointer': status !== displayStatus.PAUSED}\\\">Paused</span>\\r\\n          <span (click)=\\\"setFilterStatus(displayStatus.FINISHED)\\\" class=\\\"campaigns-tabs-link\\\"\\r\\n            [ngClass]=\\\"{'active' : status === displayStatus.FINISHED, 'pointer': status !== displayStatus.FINISHED}\\\">Finished</span>\\r\\n          <span (click)=\\\"setFilterStatus(displayStatus.FAILED)\\\" class=\\\"campaigns-tabs-link\\\"\\r\\n            [ngClass]=\\\"{'active' : status === displayStatus.FAILED, 'pointer': status !== displayStatus.FAILED}\\\">Failed</span>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-xl-4 col-lg-12 text-right\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-12\\\">\\r\\n            <div class=\\\"search-input\\\">\\r\\n              <input [(ngModel)]=\\\"filter\\\" type=\\\"text\\\" class=\\\"\\\" placeholder=\\\"Search By Name / ID\\\">\\r\\n              <i class=\\\"icon-search icon\\\"></i>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-2\\\">\\r\\n        <!--(clickOutside)=\\\"closeDateFilter()\\\"-->\\r\\n        <div class=\\\"campaigns-filter text-right\\\">\\r\\n          <button (click)=\\\"toggleDateFilter()\\\" class=\\\"campaigns-filter-title button button-grey\\\"\\r\\n            [ngClass]=\\\"{'button-green': dateFilterStart || dateFilterEnd}\\\">\\r\\n            <i class=\\\"fa fa-filter\\\" style=\\\"font-size: 12px;\\\"></i>\\r\\n            Filter\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"dateFilter\\\" class=\\\"mt-0 mb-2\\\">\\r\\n      <div class=\\\"section filter-menu\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"row text-left\\\">\\r\\n            <div class=\\\"col-6 form-input form-selectbox\\\">\\r\\n              <label class=\\\"form-input-label\\\">Start Date</label>\\r\\n              <input class=\\\"input\\\" [owlDateTimeTrigger]=\\\"dt_start_date\\\" [owlDateTime]=\\\"dt_start_date\\\"\\r\\n                [(ngModel)]=\\\"dateFilterStart\\\" (change)=\\\"adjustDate(dateFilterStart,false)\\\" placeholder=\\\"\\\">\\r\\n              <owl-date-time [pickerType]=\\\"'calendar'\\\" [hour12Timer]=\\\"'true'\\\" #dt_start_date></owl-date-time>\\r\\n            </div>\\r\\n            <div class=\\\"col-6 form-input form-selectbox\\\">\\r\\n              <label class=\\\"form-input-label\\\">End Date</label>\\r\\n              <input class=\\\"input\\\" [owlDateTimeTrigger]=\\\"dt_end_date\\\" [owlDateTime]=\\\"dt_end_date\\\"\\r\\n                [(ngModel)]=\\\"dateFilterEnd\\\" (change)=\\\"adjustDate(dateFilterEnd,true)\\\" placeholder=\\\"\\\">\\r\\n              <owl-date-time [pickerType]=\\\"'calendar'\\\" [hour12Timer]=\\\"'true'\\\" #dt_end_date></owl-date-time>\\r\\n            </div>\\r\\n            <div class=\\\"col-12 form-input form-selectbox\\\">\\r\\n              <label class=\\\"form-input-label\\\">Entity</label>\\r\\n              <select class=\\\"selectbox\\\" [(ngModel)]=\\\"entityFilter\\\">\\r\\n                <option [ngValue]=\\\"null\\\">All</option>\\r\\n                <option *ngFor=\\\"let entity of entitiesList()\\\" value=\\\"{{entity}}\\\">{{entity}}</option>\\r\\n              </select>\\r\\n              <div class=\\\"form-selectbox-icon\\\"></div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"campaignsList\\\" class=\\\"animated fadeIn faster\\\">\\r\\n      <div\\r\\n        *ngIf=\\\"setFilteredCampaignsList(campaignsList | statusfilter:status | campaignNameFilter:filter | entityFilter:entityFilter | dateFilter:dateFilterStart:dateFilterEnd)\\\">\\r\\n      </div>\\r\\n      <div class=\\\"campaigns-list\\\"\\r\\n        *ngFor=\\\"let campaign of filteredCampaignsList| orderBy: key : reverse : true | paginate: { itemsPerPage: perPage, currentPage: p }\\\">\\r\\n        <div class=\\\"row confirmDialog animated fadeIn faster text-center\\\"\\r\\n          *ngIf=\\\"deleteConfirm && (deleteConfirmId == campaign.campaignId)\\\">\\r\\n          <div class=\\\"col-12\\\">Are you sure you want to delete <b>{{campaign.name}}</b> campaign?</div>\\r\\n          <div class=\\\"col-12 mt-2\\\">\\r\\n            <button class=\\\"button button-green mr-4\\\" (click)=\\\"delete(campaign)\\\">DELETE</button>\\r\\n            <button class=\\\"button button-black \\\" (click)=\\\"hideConfirmDelete()\\\">CANCEL</button>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"dropDownId == campaign.campaignId\\\" [ngClass]=\\\"{'hide':!dropDown}\\\"\\r\\n          class=\\\"dropdown animated flipInX faster\\\" (clickOutside)=\\\"hideDropDown()\\\">\\r\\n          <ul class=\\\"list\\\">\\r\\n            <li *ngIf=\\\"getStatus(campaign) === displayStatus.PENDING\\\" ndpAuthorize\\r\\n              [targetUrl]=\\\"authorizationUrl+ defines.APPROVE\\\" [targetId]=\\\"campaign.campaignId\\\"\\r\\n              (successHandler)=\\\"approveCampaign(campaign)\\\"><span class=\\\"fas fa-check-square\\\"></span>Approve</li>\\r\\n\\r\\n            <li *ngIf=\\\"(getStatus(campaign) === displayStatus.RUNNING \\r\\n                        || getStatus(campaign) === displayStatus.SCHEDULED)\\\" ndpAuthorize\\r\\n            [targetUrl]=\\\"authorizationUrl+ defines.PAUSE\\\" [targetId]=\\\"campaign.campaignId\\\"\\r\\n            (successHandler)=\\\"toggleCampaignPause(campaign)\\\">\\r\\n              <span class=\\\"fas fa-pause\\\"></span>Pause</li>\\r\\n\\r\\n            <li *ngIf=\\\"getStatus(campaign) === displayStatus.PAUSED\\\" ndpAuthorize\\r\\n            [targetUrl]=\\\"authorizationUrl+ defines.PAUSE\\\" [targetId]=\\\"campaign.campaignId\\\"\\r\\n            (successHandler)=\\\"toggleCampaignPause(campaign)\\\"><span\\r\\n                class=\\\"fas fa-play\\\"></span>Resume</li>\\r\\n\\r\\n            <li *ngIf=\\\"getStatus(campaign) !== displayStatus.FINISHED\\r\\n                && getStatus(campaign) !== displayStatus.FAILED\\\" ndpAuthorize\\r\\n              [targetUrl]=\\\"authorizationUrl+ defines.UPDATE\\\" [targetId]=\\\"campaign.campaignId\\\"\\r\\n              (successHandler)=\\\"editButtonClick(campaign.campaignId)\\\"><span class=\\\"fas fa-edit\\\"></span>Edit</li>\\r\\n\\r\\n            <li ndpAuthorize [targetUrl]=\\\"authorizationUrl+ defines.CREATE\\\"\\r\\n            (successHandler)=\\\"cloneButtonClick(campaign.campaignId)\\\"><span class=\\\"fas fa-clone\\\"></span>Clone</li>\\r\\n            \\r\\n            <li *ngIf=\\\"getStatus(campaign) !== displayStatus.RUNNING\\\" ndpAuthorize\\r\\n              [targetUrl]=\\\"authorizationUrl+ defines.DELETE\\\" [targetId]=\\\"campaign.campaignId\\\"\\r\\n              (successHandler)=\\\"confirmDelete(campaign.campaignId)\\\"><span class=\\\"fas fa-trash\\\"></span>Delete</li>\\r\\n          </ul>\\r\\n        </div>\\r\\n        <div class=\\\"campaigns-item animated fadeIn faster\\\">\\r\\n          <div (click)=\\\"showDetails($event, campaign)\\\" (clickOutside)=\\\"hideDetails()\\\" class=\\\"row no-gutters \\\"\\r\\n            [ngClass]=\\\"{ 'blur': deleteConfirm && (deleteConfirmId == campaign.campaignId)}\\\">\\r\\n            <div class=\\\"campaigns-item-status col-lg-2 col-xl-auto\\\">\\r\\n              <span class=\\\"icon-container\\\">\\r\\n                <i *ngIf=\\\"getStatus(campaign) === displayStatus.PENDING\\\" pTooltip=\\\"Pending\\\" tooltipPosition=\\\"right\\\"\\r\\n                  class=\\\"fas fa-exclamation icon pending\\\"></i>\\r\\n                <i *ngIf=\\\"getStatus(campaign) === displayStatus.PROCESSING_FILE\\\" style=\\\"left:0 !important;\\\"\\r\\n                  pTooltip=\\\"Processing File\\\" tooltipPosition=\\\"right\\\" class=\\\"fas fa-file-alt icon running\\\"></i>\\r\\n                <i *ngIf=\\\"getStatus(campaign) === displayStatus.PAUSED\\\" pTooltip=\\\"Paused\\\" tooltipPosition=\\\"right\\\"\\r\\n                  class=\\\"fas fa-pause icon paused\\\"></i>\\r\\n                <i *ngIf=\\\"getStatus(campaign) === displayStatus.SCHEDULED\\\" pTooltip=\\\"Scheduled\\\" tooltipPosition=\\\"right\\\"\\r\\n                  class=\\\"far fa-clock icon scheduled\\\"></i>\\r\\n                <i *ngIf=\\\"getStatus(campaign) === displayStatus.RUNNING\\\" pTooltip=\\\"Running\\\" tooltipPosition=\\\"right\\\"\\r\\n                  class=\\\"fas fa-play icon running\\\"></i>\\r\\n                <i *ngIf=\\\"getStatus(campaign) === displayStatus.FAILED\\\" pTooltip=\\\"Failed\\\" tooltipPosition=\\\"right\\\"\\r\\n                  class=\\\"fas fa-times icon pending\\\"></i>\\r\\n                <i *ngIf=\\\"getStatus(campaign) === displayStatus.FINISHED\\\" pTooltip=\\\"Finished\\\" tooltipPosition=\\\"right\\\"\\r\\n                  class=\\\"fas fa-check icon done\\\"></i>\\r\\n              </span>\\r\\n            </div>\\r\\n            <div class=\\\"campaigns-item-title col-lg-10 col-xl-auto mb-lg-4 mb-xl-0\\\">\\r\\n              <span class=\\\"title\\\">\\r\\n                {{campaign.name}}\\r\\n              </span>\\r\\n              <span class=\\\"id\\\">ID <span class=\\\"id-value\\\">{{campaign.campaignId}}</span> </span>\\r\\n\\r\\n              <span class=\\\"priority\\\">Priority<span class=\\\"priority-value\\\"\\r\\n                  [ngClass]=\\\"{'normal':campaign.priority == 1, 'medium':campaign.priority == 2, 'high':campaign.priority == 3}\\\">\\r\\n                  {{priorities[(campaign.priority)-1]}}</span></span>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"campaigns-item-sender\\\">\\r\\n              <div class=\\\"property\\\">\\r\\n                Fake Sender\\r\\n              </div>\\r\\n              <div *ngIf=\\\"campaign.senderName !== null\\\" class=\\\"value\\\">\\r\\n                {{campaign.senderName}}\\r\\n              </div>\\r\\n              <div *ngIf=\\\"campaign.senderName === null\\\" class=\\\"value\\\">\\r\\n                <b style=\\\"color: #cc0000;\\\">UNASSIGNED</b>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"campaigns-item-start\\\">\\r\\n              <div *ngIf=\\\"campaign.startDate !== null\\\" class=\\\"property\\\">\\r\\n                Start Date\\r\\n              </div>\\r\\n              <div class=\\\"value\\\">\\r\\n                {{campaign.startDate | date :  \\\"dd MMM yyyy\\\"}}\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"campaigns-item-end\\\">\\r\\n              <div *ngIf=\\\"campaign.endDate !== null\\\" class=\\\"property\\\">\\r\\n                End Date\\r\\n              </div>\\r\\n              <div class=\\\"value\\\">\\r\\n                {{campaign.endDate | date :  \\\"dd MMM yyyy\\\"}}\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"campaigns-item-progress my-auto\\\">\\r\\n              <ndp-campaign-progress [campaign]=\\\"campaign\\\"></ndp-campaign-progress>\\r\\n            </div>\\r\\n            <div class=\\\"campaigns-item-actions\\\">\\r\\n              <a (click)=\\\"showDropDown($event, campaign.campaignId)\\\" class=\\\"campaigns-item-actions-link\\\">\\r\\n                <i class=\\\"icon-dropdown-dots icon\\\"></i>\\r\\n              </a>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- CAMPAIGN DETAILS COMPONENT-->\\r\\n          <div *ngIf=\\\"detailedCampaignId === campaign.campaignId\\\" class=\\\"row mt-4\\\">\\r\\n            <div class=\\\"col-12\\\">\\r\\n              <ndp-campaign-details [campaign]=\\\"campaign\\\"></ndp-campaign-details>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- END OF CAMPAIGN DETAILS COMPONENT-->\\r\\n        </div>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"filteredCampaignsList.length === 0 && initialized\\\">\\r\\n        <div class=\\\"row mt-4 animated fadeIn fast\\\">\\r\\n          <div class=\\\"col-12 mt-4 text-center\\\">\\r\\n            <!-- <div class=\\\"col-12 mt-4 fas fa-frown fa-7x faded-grey\\\"></div> -->\\r\\n            <div class=\\\"col-12 mt-4 page-title faded-grey\\\"><b>No Campaigns Found</b></div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"filteredCampaignsList.length === 0 && !initialized\\\">\\r\\n        <div class=\\\"row mt-4 animated fadeIn fast\\\" style=\\\"height:100%;\\\">\\r\\n          <div class=\\\"col-12 mt-4 text-center\\\">\\r\\n            <!-- <div class=\\\"col-12 mt-4 fas fa-spinner fa-7x faded-grey\\\"></div> -->\\r\\n            <div class=\\\"col-12 mt-4 page-title faded-grey\\\"><b>Retrieving Campaigns</b></div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"ngx-pagination\\\">\\r\\n      <div class=\\\"form-input form-input-select form-selectbox itemsNum animate fadeInUp\\\">\\r\\n        <label class=\\\"form-input-label\\\">Item/Page</label>\\r\\n        <select [(ngModel)]=\\\"perPage\\\" (change)=\\\"resetPagination()\\\" class=\\\"paginSelect\\\">\\r\\n          <option>2</option>\\r\\n          <option>5</option>\\r\\n          <option>10</option>\\r\\n          <option>20</option>\\r\\n          <option>50</option>\\r\\n        </select>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"campaignsList\\\" style=\\\"margin-left: 170px;\\\">\\r\\n        <pagination-controls *ngIf=\\\"perPage < campaignsList.length\\\" class=\\\"animate fadeInUp\\\" (pageChange)=\\\"p = $event\\\">\\r\\n        </pagination-controls>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { CampaignService } from '../campaign.service';\r\nimport { CampaignModel } from 'src/app/shared/models/campaign-model';\r\nimport { Dropdown } from 'primeng/dropdown';\r\nimport { Defines } from 'src/app/shared/static/defines';\r\nimport { Router } from '@angular/router';\r\nimport { defineBase } from '@angular/core/src/render3';\r\nimport { User } from 'src/app/shared/models/user-model';\r\nimport { CampaignRequestModel } from 'src/app/shared/models/campaign-request-model';\r\nimport { Observable, of, timer } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'ndp-campaign-list',\r\n  templateUrl: './campaign-list.component.html',\r\n  styleUrls: ['./campaign-list.component.css']\r\n})\r\nexport class CampaignListComponent implements OnInit, OnDestroy {\r\n\r\n  initialized: boolean;\r\n  campaignsList: Array<CampaignModel>;\r\n  filteredCampaignsList: Array<CampaignModel>;\r\n  dropDown: boolean;\r\n  dropDownClick: number;\r\n  dropDownId: number;\r\n  priorities = ['High', 'Medium', 'Low'];\r\n  detailedCampaign: CampaignModel;\r\n  detailedCampaignId: number;\r\n  entitiesMap: Map<String, String>;\r\n  /*=============================*/\r\n  /* Pagination Filtering & Sorting*/\r\n  p = 1;\r\n  perPage = 10;\r\n  /*FILTERING*/\r\n  filter: string;\r\n  /*SORTING*/\r\n  key = 'startDate';\r\n  reverse = true;\r\n  /*=============================*/\r\n  deleteConfirm = false;\r\n  deleteConfirmId: number;\r\n\r\n  status = Defines.CAMPAIGN_DISPLAY_STATUS.ALL;\r\n\r\n  //Authorization Vars\r\n  authorizationUrl: string;\r\n  defines = Defines.API_CRUD;\r\n  // Access Levels attributes\r\n  user: User;\r\n  listAccessLevel = 0;\r\n  editAccessLevel = 0;\r\n  deleteAccessLevel = 0;\r\n  canCreate: boolean;\r\n  canApproveflag = false;\r\n\r\n  contextMenu = false;\r\n  justOpened = false;\r\n\r\n  progress = 30;\r\n  intervalId: any;\r\n  dateFilter: boolean;\r\n  dateFilterStart: Date;\r\n  dateFilterEnd: Date;\r\n  entityFilter: String;\r\n\r\n  setAccessLevel() {\r\n    this.user = JSON.parse(localStorage.getItem(Defines.SESSION_KEYS.userModel));\r\n    if (this.user.privilegeList) {\r\n      this.user.privilegeList.forEach(rolePrivilege => {\r\n        switch (rolePrivilege.privilegeId) {\r\n          case Defines.PRIVILEGES.CAMPAIGN.EDIT: {\r\n            this.editAccessLevel = rolePrivilege.accessLevel;\r\n            break;\r\n          } case Defines.PRIVILEGES.CAMPAIGN.LIST: {\r\n            this.listAccessLevel = rolePrivilege.accessLevel;\r\n            break;\r\n          } case Defines.PRIVILEGES.CAMPAIGN.DELETE: {\r\n            this.deleteAccessLevel = rolePrivilege.accessLevel;\r\n            break;\r\n          } case Defines.PRIVILEGES.CAMPAIGN.CREATE: {\r\n            this.canCreate = true;\r\n            break;\r\n          } case Defines.PRIVILEGES.CAMPAIGN.approve: {\r\n            this.canApproveflag = true;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      );\r\n    }\r\n  }\r\n\r\n  setFilterStatus(s: number) {\r\n    this.status = s;\r\n  }\r\n\r\n  sort(key) {\r\n    this.key = key;\r\n    this.reverse = !this.reverse;\r\n  }\r\n\r\n  constructor(private campaignService: CampaignService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.initialized = false;\r\n    this.campaignsList = new Array<CampaignModel>();\r\n    this.refreshData();\r\n    this.intervalId = setInterval(() => { this.refreshData(); }, 30000);\r\n    this.filteredCampaignsList = this.campaignsList;\r\n    this.authorizationUrl = this.campaignService.authorizationUrl;\r\n  }\r\n\r\n  getAllEntities() {\r\n    if (this.campaignsList) {\r\n      console.log('list size', this.campaignsList.length);\r\n      this.entitiesMap = new Map();\r\n      this.campaignsList.forEach(camp => {\r\n        this.entitiesMap.set(camp.entityName, camp.entityName);\r\n      });\r\n      console.log('entities', this.entitiesMap.keys());\r\n    }\r\n  }\r\n\r\n  entitiesList() {\r\n    return Array.from(this.entitiesMap.keys());\r\n  }\r\n  canApprove() {\r\n    return !this.user.needsApproval;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.intervalId) {\r\n      clearInterval(this.intervalId);\r\n    }\r\n  }\r\n\r\n  async refreshData() {\r\n    this.campaignService.list().subscribe(templates => {\r\n      this.campaignsList = templates.responsePayload;\r\n      this.initialized = true;\r\n      this.getAllEntities();\r\n      this.setAccessLevel();\r\n      this.setAccessLevels(this.campaignsList);\r\n    });\r\n  }\r\n\r\n  private setAccessLevels(campList: Array<CampaignModel>) {\r\n    if (campList) {\r\n      campList.forEach(model => {\r\n        if (model.createdBy === this.user.id) {\r\n          if (this.editAccessLevel >= Defines.ACCESS_LEVELS.OWN) {\r\n            model.canEdit = true;\r\n          }\r\n          if (this.deleteAccessLevel >= Defines.ACCESS_LEVELS.OWN) {\r\n            model.canDelete = true;\r\n          }\r\n          if (this.listAccessLevel >= Defines.ACCESS_LEVELS.OWN) {\r\n            model.canView = true;\r\n          }\r\n        } else if (model.entityId === this.user.entityId) {\r\n          if (this.editAccessLevel >= Defines.ACCESS_LEVELS.ENTITY) {\r\n            model.canEdit = true;\r\n          }\r\n          if (this.deleteAccessLevel >= Defines.ACCESS_LEVELS.ENTITY) {\r\n            model.canDelete = true;\r\n          }\r\n          if (this.listAccessLevel >= Defines.ACCESS_LEVELS.ENTITY) {\r\n            model.canView = true;\r\n          }\r\n        } else {\r\n          if (this.editAccessLevel >= Defines.ACCESS_LEVELS.EVERYTHING) {\r\n            model.canEdit = true;\r\n          }\r\n          if (this.deleteAccessLevel >= Defines.ACCESS_LEVELS.EVERYTHING) {\r\n            model.canDelete = true;\r\n          }\r\n          if (this.listAccessLevel >= Defines.ACCESS_LEVELS.EVERYTHING) {\r\n            model.canView = true;\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  resetPagination() {\r\n    if (this.p > 1) {\r\n      this.p = 1;\r\n    }\r\n  }\r\n  showDropDown(event: Event, campaign: number) {\r\n    this.dropDown = true;\r\n    this.dropDownId = campaign;\r\n    event.stopPropagation();\r\n  }\r\n  hideDropDown() {\r\n    this.dropDown = false;\r\n    this.dropDownId = null;\r\n    event.stopPropagation();\r\n  }\r\n\r\n  showDetails(event: Event, campaign: CampaignModel) {\r\n    debugger;\r\n    if (this.dropDown !== false) {\r\n      this.dropDown = false;\r\n    }\r\n    if (this.detailedCampaignId !== campaign.campaignId) {\r\n      this.detailedCampaign = campaign;\r\n      this.detailedCampaignId = campaign.campaignId;\r\n    } else {\r\n      this.hideDetails();\r\n    }\r\n    event.stopPropagation();\r\n  }\r\n  hideDetails() {\r\n    this.detailedCampaign = null;\r\n    this.detailedCampaignId = null;\r\n    event.stopPropagation();\r\n  }\r\n\r\n  editButtonClick(campaignId: number) {\r\n    this.router.navigate(['campaigns/edit', campaignId]);\r\n  }\r\n\r\n  cloneButtonClick(campaignId: number) {\r\n    this.router.navigate(['campaigns/clone', campaignId]);\r\n  }\r\n\r\n  confirmDelete(id: number) {\r\n    this.deleteConfirm = true;\r\n    this.deleteConfirmId = id;\r\n  }\r\n  hideConfirmDelete() {\r\n    this.deleteConfirm = false;\r\n    this.deleteConfirmId = null;\r\n  }\r\n\r\n  delete(campaign: CampaignModel) {\r\n    const campaignRequest = new CampaignRequestModel();\r\n    campaignRequest.campaignModel = campaign;\r\n    this.deleteConfirm = false;\r\n    this.campaignService.delete(campaignRequest).subscribe(template => {\r\n      if (template.errors.length === 0) {\r\n        this.campaignsList = this.campaignsList.filter(x => x.campaignId !== campaign.campaignId);\r\n        this.status = Defines.CAMPAIGN_DISPLAY_STATUS.ALL;\r\n      }\r\n    });\r\n  }\r\n\r\n  getDuration(campaign: CampaignModel) {\r\n    if (campaign.status === Defines.CAMPAIGN_STATUS.PENDING) {\r\n      return 'Pending';\r\n    }\r\n    if (campaign.status === Defines.CAMPAIGN_STATUS.PAUSED) {\r\n      return 'Paused';\r\n    }\r\n    const date1 = new Date();\r\n    // const date2 = new Date(campaign.endDate);\r\n    const date2 = new Date(campaign.startDate);\r\n    if (date1 < date2) {\r\n      const diffInMs: number = date2.getTime() - +date1.getTime();\r\n      const diffInDays: number = diffInMs / 1000 / 60 / 60 / 24;\r\n      const diffInHours: number = (diffInDays - Math.trunc(diffInDays)) * 24;\r\n\r\n      const remainingMinutes: number = (diffInHours - Math.trunc(diffInHours)) * 60;\r\n      return Math.trunc(diffInDays) + ' : ' + Math.trunc(diffInHours) + ' : ' + Math.round(remainingMinutes);\r\n    }\r\n  }\r\n\r\n  getStatus(campaign: CampaignModel) {\r\n    const startDate = new Date(campaign.startDate);\r\n    const endDate = new Date(campaign.endDate);\r\n    const currentDate = new Date();\r\n\r\n    if (campaign.status === Defines.CAMPAIGN_STATUS.PAUSED) {\r\n      return Defines.CAMPAIGN_DISPLAY_STATUS.PAUSED;\r\n    }\r\n    if (campaign.status === Defines.CAMPAIGN_STATUS.PENDING) {\r\n      return Defines.CAMPAIGN_DISPLAY_STATUS.PENDING;\r\n    }\r\n    if (campaign.status === Defines.CAMPAIGN_STATUS.PROCESSING) {\r\n      return Defines.CAMPAIGN_DISPLAY_STATUS.PROCESSING_FILE;\r\n    }\r\n    if (campaign.status === Defines.CAMPAIGN_STATUS.READY && currentDate < startDate) {\r\n      return Defines.CAMPAIGN_DISPLAY_STATUS.SCHEDULED;\r\n    }\r\n    if (campaign.status === Defines.CAMPAIGN_STATUS.FAILED || campaign.status === Defines.CAMPAIGN_STATUS.SNAPSHOT_FAILED || campaign.status === Defines.CAMPAIGN_STATUS.ALL_MESSAGES_FAILED) {\r\n      return Defines.CAMPAIGN_DISPLAY_STATUS.FAILED;\r\n    }\r\n    if (campaign.status === Defines.CAMPAIGN_STATUS.HANDLING || campaign.status === Defines.CAMPAIGN_STATUS.SMS_ENQUEUED\r\n      || (campaign.status === Defines.CAMPAIGN_STATUS.READY && currentDate >= startDate)) {\r\n      return Defines.CAMPAIGN_DISPLAY_STATUS.RUNNING;\r\n    }\r\n    if (campaign.status === Defines.CAMPAIGN_STATUS.SUCCESS) {\r\n      return Defines.CAMPAIGN_DISPLAY_STATUS.FINISHED;\r\n    }\r\n  }\r\n  get displayStatus() {\r\n    return Defines.CAMPAIGN_DISPLAY_STATUS;\r\n  }\r\n\r\n  toggleCampaignPause(campaign: CampaignModel) {\r\n    const s = this.getStatus(campaign);\r\n    const campaignRequest = new CampaignRequestModel();\r\n    campaignRequest.campaignModel = campaign;\r\n    if (s === Defines.CAMPAIGN_DISPLAY_STATUS.RUNNING || s === Defines.CAMPAIGN_DISPLAY_STATUS.SCHEDULED) {\r\n      campaignRequest.campaignModel.status = Defines.CAMPAIGN_STATUS.PAUSED;\r\n      this.campaignService.pause(campaignRequest).subscribe(template => {\r\n        console.log('Pausing  ==> ', template.responsePayload);\r\n        if (template.status === 200) {\r\n          campaign.status = Defines.CAMPAIGN_STATUS.PAUSED;\r\n        }\r\n      });\r\n    } else if (s === Defines.CAMPAIGN_DISPLAY_STATUS.PAUSED) {\r\n      campaignRequest.campaignModel.status = Defines.CAMPAIGN_STATUS.READY;\r\n      this.campaignService.pause(campaignRequest).subscribe(template => {\r\n        console.log('Unpausing  ==> ', template.responsePayload);\r\n        if (template.status === 200) {\r\n          campaign.status = Defines.CAMPAIGN_STATUS.READY;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  approveCampaign(campaign: CampaignModel) {\r\n    campaign.status = Defines.CAMPAIGN_STATUS.APPROVED;\r\n    const campaignRequest = new CampaignRequestModel();\r\n    campaignRequest.campaignModel = campaign;\r\n    this.campaignService.approve(campaignRequest).subscribe(template => {\r\n      console.log('Approve Campaign ', template.responsePayload);\r\n    });\r\n  }\r\n\r\n  setFilteredCampaignsList(filtered: CampaignModel[]) {\r\n    this.filteredCampaignsList = filtered;\r\n  }\r\n\r\n  toggleDateFilter() {\r\n    if (this.dateFilter) {\r\n      this.dateFilter = !this.dateFilter;\r\n    } else {\r\n      this.dateFilter = true;\r\n    }\r\n  }\r\n  closeDateFilter(e: Event) {\r\n    if (this.dateFilter === true) {\r\n      this.dateFilter = false;\r\n      e.stopPropagation();\r\n    }\r\n  }\r\n\r\n  adjustDate(d: Date, type: boolean) {\r\n    if (d) {\r\n      if (!type) {\r\n        d.setHours(0);\r\n        d.setMinutes(0);\r\n        d.setSeconds(0);\r\n      } else {\r\n        d.setHours(23);\r\n        d.setMinutes(59);\r\n        d.setSeconds(59);\r\n      }\r\n    }\r\n  }\r\n\r\n  getStatusText(campaign: CampaignModel) {\r\n    switch (this.getStatus(campaign)) {\r\n      case Defines.CAMPAIGN_DISPLAY_STATUS.PAUSED:\r\n        return 'Paused';\r\n      case Defines.CAMPAIGN_DISPLAY_STATUS.PENDING:\r\n        return 'Pending';\r\n      case Defines.CAMPAIGN_DISPLAY_STATUS.PROCESSING_FILE:\r\n        return 'Processing File';\r\n      case Defines.CAMPAIGN_DISPLAY_STATUS.SCHEDULED:\r\n        return 'Scheduled';\r\n      case Defines.CAMPAIGN_DISPLAY_STATUS.RUNNING:\r\n        return 'Running';\r\n      case Defines.CAMPAIGN_DISPLAY_STATUS.FINISHED:\r\n        return 'Finished';\r\n      case Defines.CAMPAIGN_DISPLAY_STATUS.FAILED:\r\n        return 'Failed';\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhbXBhaWducy9jYW1wYWlnbi1wcm9ncmVzcy9jYW1wYWlnbi1wcm9ncmVzcy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div\\r\\n  *ngIf=\\\"campaignStats && (getStatus(campaign) === displayStatus.RUNNING || getStatus(campaign) === displayStatus.PAUSED)\\\"\\r\\n  class=\\\"row no-gutters my-auto pl-0\\\">\\r\\n  <div class=\\\"col-9\\\">\\r\\n    <p-progressBar [showValue]=\\\"false\\\" [value]=\\\"getPercentage()\\\" [style]=\\\"{height:'20px', color:'#fff'}\\\">\\r\\n    </p-progressBar>\\r\\n  </div>\\r\\n  <div class=\\\"col-2 ml-2 my-auto\\\" style=\\\"font-size:12px;\\\"><b>{{getPercentage()}}%</b></div>\\r\\n</div>\\r\\n<div\\r\\n  *ngIf=\\\"!campaignStats && (getStatus(campaign) === displayStatus.RUNNING)\\\"\\r\\n  class=\\\"row no-gutters my-auto pl-0\\\">\\r\\n  <div class=\\\"col-9\\\">\\r\\n    <div class=\\\"caption-text\\\">\\r\\n      <div class=\\\"hours-numbers\\\">\\r\\n        In Progress\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div\\r\\n  *ngIf=\\\"!campaignStats &&  (getStatus(campaign) === displayStatus.PAUSED)\\\"\\r\\n  class=\\\"row no-gutters my-auto pl-0\\\">\\r\\n  <div class=\\\"col-9\\\">\\r\\n    <div class=\\\"caption-text\\\">\\r\\n      <div class=\\\"hours-numbers\\\">\\r\\n        Paused\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"getStatus(campaign) === displayStatus.FINISHED && campaignStats && !campaign.isOpenEnded\\\" class=\\\"row no-gutters my-auto pl-0\\\">\\r\\n  <div class=\\\"col-9\\\">\\r\\n    <p-progressBar [showValue]=\\\"false\\\" [value]=\\\"getPercentage()\\\" [style]=\\\"{height:'20px', color:'#fff'}\\\">\\r\\n    </p-progressBar>\\r\\n  </div>\\r\\n  <div class=\\\"col-2 ml-2 my-auto\\\" style=\\\"font-size:12px;\\\"><b>{{getPercentage()}}%</b></div>\\r\\n</div>\\r\\n<div *ngIf=\\\"getStatus(campaign) === displayStatus.SCHEDULED\\\" class=\\\"caption\\\">\\r\\n  <div class=\\\"caption-media caption-media-gutter\\\">\\r\\n    <i class=\\\"icon-time icon icon-gray icon-meduim\\\"></i>\\r\\n  </div>\\r\\n  <div class=\\\"caption-text\\\">\\r\\n    <div class=\\\"hours-numbers\\\">\\r\\n      {{getDuration(campaign)}}\\r\\n    </div>\\r\\n    <div *ngIf=\\\"getStatus(campaign) === displayStatus.SCHEDULED && !daysflag\\\" class=\\\"hours-text\\\">\\r\\n      <span class=\\\"pr-3\\\">HOUR</span>\\r\\n      <span class=\\\"pr-4\\\">MIN</span>\\r\\n      <span class=\\\"\\\">SEC</span>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"campaign.status === displayStatus.PENDING\\\" class=\\\"hours-text\\\">\\r\\n      <span class=\\\"pl-2\\\">Needs Approval</span>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\r\nimport { CampaignModel } from 'src/app/shared/models/campaign-model';\r\nimport { Defines } from 'src/app/shared/static/defines';\r\nimport { CampaignService } from '../campaign.service';\r\nimport { CampaignStatisticsModel } from 'src/app/shared/models/campaign-stat-model';\r\nimport { formatDate } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'ndp-campaign-progress',\r\n  templateUrl: './campaign-progress.component.html',\r\n  styleUrls: ['./campaign-progress.component.css']\r\n})\r\nexport class CampaignProgressComponent implements OnInit, OnDestroy {\r\n  @Input() campaign: CampaignModel;\r\n  campaignStats: CampaignStatisticsModel;\r\n  private intervalId: any;\r\n  private statsInterval: any;\r\n  daysflag = true;\r\n  constructor(private campaignService: CampaignService) { }\r\n\r\n  ngOnInit() {\r\n    // this.refreshData();\r\n    this.intervalId = setInterval(() => { this.getDuration(this.campaign); }, 1000);\r\n    this.refreshData();\r\n    this.statsInterval = setInterval(() => { this.refreshData(); }, 60000);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.intervalId) {\r\n      clearInterval(this.intervalId);\r\n    }\r\n    if (this.statsInterval) {\r\n      clearInterval(this.statsInterval);\r\n    }\r\n  }\r\n  async refreshData() {\r\n    if (this.getStatus(this.campaign) === this.displayStatus.RUNNING || this.displayStatus.FINISHED || this.displayStatus.PAUSED) {\r\n      this.campaignService.getStats(this.campaign.campaignId).subscribe(template => {\r\n        this.campaignStats = template.responsePayload;\r\n      });\r\n    }\r\n  }\r\n  getStatus(campaign: CampaignModel) {\r\n    const startDate = new Date(campaign.startDate);\r\n    const endDate = new Date(campaign.endDate);\r\n    const currentDate = new Date();\r\n\r\n    if (campaign.status === Defines.CAMPAIGN_STATUS.PAUSED) {\r\n      return Defines.CAMPAIGN_DISPLAY_STATUS.PAUSED;\r\n    }\r\n    if (campaign.status === Defines.CAMPAIGN_STATUS.PENDING) {\r\n      return Defines.CAMPAIGN_DISPLAY_STATUS.PENDING;\r\n    }\r\n    if (campaign.status === Defines.CAMPAIGN_STATUS.PROCESSING) {\r\n      return Defines.CAMPAIGN_DISPLAY_STATUS.PROCESSING_FILE;\r\n    }\r\n    if (campaign.status === Defines.CAMPAIGN_STATUS.READY && currentDate < startDate) {\r\n      return Defines.CAMPAIGN_DISPLAY_STATUS.SCHEDULED;\r\n    }\r\n    if (campaign.status === Defines.CAMPAIGN_STATUS.FAILED || campaign.status === Defines.CAMPAIGN_STATUS.SNAPSHOT_FAILED) {\r\n      return Defines.CAMPAIGN_DISPLAY_STATUS.FAILED;\r\n    }\r\n    if (campaign.status === Defines.CAMPAIGN_STATUS.HANDLING || campaign.status === Defines.CAMPAIGN_STATUS.SMS_ENQUEUED\r\n      || (campaign.status === Defines.CAMPAIGN_STATUS.READY && currentDate >= startDate)) {\r\n      return Defines.CAMPAIGN_DISPLAY_STATUS.RUNNING;\r\n    }\r\n    if (campaign.status === Defines.CAMPAIGN_STATUS.SUCCESS) {\r\n      return Defines.CAMPAIGN_DISPLAY_STATUS.FINISHED;\r\n    }\r\n  }\r\n  get displayStatus() {\r\n    return Defines.CAMPAIGN_DISPLAY_STATUS;\r\n  }\r\n\r\n  getDuration(campaign: CampaignModel) {\r\n    if (campaign.status === Defines.CAMPAIGN_STATUS.PENDING) {\r\n      return 'Pending';\r\n    }\r\n    if (campaign.status === Defines.CAMPAIGN_STATUS.PAUSED) {\r\n      return 'Paused';\r\n    }\r\n    const date1 = new Date();\r\n    // const date2 = new Date(campaign.endDate);\r\n    const date2 = new Date(campaign.startDate);\r\n    if (date1 < date2) {\r\n      const diffInMs: number = date2.getTime() - +date1.getTime();\r\n      const diffInDays: number = diffInMs / 1000 / 60 / 60 / 24;\r\n      const diffInHours: number = (diffInDays - Math.trunc(diffInDays)) * 24;\r\n      if (Math.trunc(diffInDays) > 0) {\r\n        this.daysflag = true;\r\n        return 'In ' + Math.trunc(diffInDays) + ' Days';\r\n      }\r\n      this.daysflag = false;\r\n      const remainingHours: number = (Math.floor((diffInMs / 1000) / 60 / 60)) % 24;\r\n      const remainingMinutes: number = (Math.floor((diffInMs / 1000) / 60)) % 60;\r\n      const remainingSeconds: number = (diffInMs / 1000) % 60;\r\n\r\n      return (((Math.trunc(remainingHours) < 10) ? ('0' + Math.trunc(remainingHours)) : (Math.trunc(remainingHours))) + '    :    '\r\n        + ((Math.trunc(remainingMinutes) < 10) ? ('0' + Math.trunc(remainingMinutes)) : (Math.trunc(remainingMinutes))) + '    :    '\r\n        + ((Math.trunc(remainingSeconds) < 10) ? ('0' + Math.trunc(remainingSeconds)) : (Math.trunc(remainingSeconds))));\r\n    }\r\n  }\r\n\r\n  getProgress() {\r\n    if (this.campaignStats) {\r\n      return (this.campaignStats.sent + this.campaignStats.delivered) >= 0 ? (this.campaignStats.sent + this.campaignStats.delivered) : 0;\r\n    }\r\n  }\r\n  getTotal() {\r\n    if (this.campaignStats) {\r\n      return this.campaignStats.totalCount > 0 ? this.campaignStats.totalCount : 1;\r\n    }\r\n  }\r\n\r\n  getPercentage() {\r\n    /*const d = new Date();\r\n    if (this.campaign.endDate && d <= this.campaign.endDate && d >= this.campaign.startDate) {\r\n      return Math.round((+d.getTime() - (+this.campaign.startDate)) / (+this.campaign.endDate - (+this.campaign.startDate)) * 100);\r\n    } else {\r\n      return 0;\r\n    }*/\r\n    if (this.campaignStats) {\r\n      return Math.round((this.getProgress() / this.getTotal()) * 100);\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhbXBhaWducy9jYW1wYWlnbi1zdGF0cy9jYW1wYWlnbi1zdGF0cy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"row no-gutters mb-4\\\">\\r\\n  <div class=\\\"col-4 mb-2\\\">\\r\\n    <div class=\\\"col-12 campaigns-stats animated fadeIn faster\\\">\\r\\n      <div class=\\\"row mt-2\\\">\\r\\n        <div class=\\\"col-2 ml-1 campaigns-stats-status\\\">\\r\\n          <span class=\\\" icon-container blue\\\">\\r\\n            <i class=\\\"fas fa-play icon running\\\"></i>\\r\\n          </span>\\r\\n        </div>\\r\\n        <div class=\\\"col-8 ml-2 my-auto\\\">\\r\\n          <span>Running</span>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row text-center\\\">\\r\\n        <div *ngIf=\\\"countsMap !== null\\\" class=\\\"col-12 p-2\\\" style=\\\"font-size: 40px; font-weight: 600;\\\">{{getRunning()}}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-4 pl-2 mb-2\\\">\\r\\n    <div class=\\\"col-12 campaigns-stats animated fadeIn faster\\\">\\r\\n      <div class=\\\"row mt-2\\\">\\r\\n        <div class=\\\"col-2 ml-1 campaigns-stats-status\\\">\\r\\n          <span class=\\\" icon-container red\\\">\\r\\n            <i class=\\\"fas fa-pause icon paused\\\"></i>\\r\\n          </span>\\r\\n        </div>\\r\\n        <div class=\\\"col-8 ml-2 my-auto\\\">\\r\\n          <span>Paused</span>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-12 text-center\\\">\\r\\n        <div *ngIf=\\\"countsMap !== null\\\" class=\\\"col-12 p-2\\\" style=\\\"font-size: 40px; font-weight: 600;\\\">{{getPaused()}}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-4 pl-2 mb-2\\\">\\r\\n    <div class=\\\"col-12 campaigns-stats animated fadeIn faster\\\">\\r\\n      <div class=\\\"row mt-2\\\">\\r\\n        <div class=\\\"col-2 ml-1 campaigns-stats-status\\\">\\r\\n          <span class=\\\" icon-container green\\\">\\r\\n            <i class=\\\"fas fa-check icon done\\\"></i>\\r\\n          </span>\\r\\n        </div>\\r\\n        <div class=\\\"col-8 ml-2 my-auto\\\">\\r\\n          <span>Finished</span>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row text-center\\\">\\r\\n        <div *ngIf=\\\"countsMap !== null\\\" class=\\\"col-12 p-2\\\" style=\\\"font-size: 40px; font-weight: 600;\\\">{{getDone()}}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-4 mb-2\\\">\\r\\n    <div class=\\\"col-12 campaigns-stats animated fadeIn faster\\\">\\r\\n      <div class=\\\"row mt-2\\\">\\r\\n        <div class=\\\"col-2 ml-1 campaigns-stats-status\\\">\\r\\n          <span class=\\\"icon-container yellow\\\">\\r\\n            <i class=\\\"far fa-clock icon scheduled\\\"></i>\\r\\n          </span>\\r\\n        </div>\\r\\n        <div class=\\\"col-8 ml-2 my-auto\\\">\\r\\n          <span>Scheduled</span>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row text-center\\\">\\r\\n        <div *ngIf=\\\"countsMap !== null\\\" class=\\\"col-12 p-2\\\" style=\\\"font-size: 40px; font-weight: 600;\\\">{{getScheduled()}}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-4 pl-2 mb-2\\\">\\r\\n    <div class=\\\"col-12 campaigns-stats animated fadeIn faster\\\">\\r\\n      <div class=\\\"row mt-2\\\">\\r\\n        <div class=\\\"col-2 ml-1 campaigns-stats-status\\\">\\r\\n          <span class=\\\" icon-container darkred\\\">\\r\\n            <i class=\\\"fas fa-exclamation icon pending\\\"></i>\\r\\n          </span>\\r\\n        </div>\\r\\n        <div class=\\\"col-8 ml-2 my-auto\\\">\\r\\n          <span>Pending</span>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-12 text-center\\\">\\r\\n        <div *ngIf=\\\"countsMap !== null\\\" class=\\\"col-12 p-2\\\" style=\\\"font-size: 40px; font-weight: 600;\\\">{{getPending()}}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-4 pl-2 mb-2\\\">\\r\\n    <div class=\\\"col-12 campaigns-stats animated fadeIn faster\\\">\\r\\n      <div class=\\\"row mt-2\\\">\\r\\n        <div class=\\\"col-2 ml-1 campaigns-stats-status\\\">\\r\\n          <span class=\\\" icon-container darkred\\\">\\r\\n            <i class=\\\"fas fa-times icon pending\\\"></i>\\r\\n          </span>\\r\\n        </div>\\r\\n        <div class=\\\"col-8 ml-2 my-auto\\\">\\r\\n          <span>Failed</span>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-12 text-center\\\">\\r\\n        <div *ngIf=\\\"countsMap !== null\\\" class=\\\"col-12 p-2\\\" style=\\\"font-size: 40px; font-weight: 600;\\\">{{getFailed()}}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\"","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { CampaignService } from '../campaign.service';\r\nimport { Defines } from 'src/app/shared/static/defines';\r\nimport { timer, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'ndp-campaign-stats',\r\n  templateUrl: './campaign-stats.component.html',\r\n  styleUrls: ['./campaign-stats.component.css']\r\n})\r\nexport class CampaignStatsComponent implements OnInit, OnDestroy {\r\n\r\n  constructor(private campaignService: CampaignService) { }\r\n  intervalId: any;\r\n  countsMap: Map<number, number>;\r\n  subscription: Subscription;\r\n  @Input() refreshInterval: number;\r\n\r\n  ngOnInit() {\r\n    if (this.refreshInterval == null) {\r\n      this.refreshInterval = 15000;\r\n    }\r\n    this.refreshData();\r\n    this.intervalId = setInterval(() => { this.refreshData(); }, this.refreshInterval);\r\n  }\r\n\r\n\r\n  ngOnDestroy() {\r\n    if (this.intervalId) {\r\n      clearInterval(this.intervalId);\r\n    }\r\n  }\r\n\r\n  async refreshData() {\r\n    this.subscription = this.campaignService.getCounts().subscribe(response => {\r\n      this.countsMap = response.responsePayload;\r\n    });\r\n  }\r\n\r\n  getRunning() {\r\n    if (this.countsMap) {\r\n      const handling = this.countsMap[Defines.CAMPAIGN_STATUS.HANDLING];\r\n      const enqueued = this.countsMap[Defines.CAMPAIGN_STATUS.SMS_ENQUEUED];\r\n      return (handling ? handling : 0) + (enqueued ? enqueued : 0);\r\n    }\r\n  }\r\n  getPending() {\r\n    if (this.countsMap) {\r\n      const pending = this.countsMap[Defines.CAMPAIGN_STATUS.PENDING];\r\n      return (pending ? pending : 0);\r\n    }\r\n  }\r\n  getDone() {\r\n    if (this.countsMap) {\r\n      const success = this.countsMap[Defines.CAMPAIGN_STATUS.SUCCESS];\r\n      return (success ? success : 0);\r\n    }\r\n  }\r\n  getScheduled() {\r\n    if (this.countsMap) {\r\n      const ready = this.countsMap[Defines.CAMPAIGN_STATUS.READY];\r\n      return (ready ? ready : 0);\r\n    }\r\n  }\r\n\r\n  getPaused() {\r\n    if (this.countsMap) {\r\n      const paused = this.countsMap[Defines.CAMPAIGN_STATUS.PAUSED];\r\n      return (paused ? paused : 0);\r\n    }\r\n  }\r\n\r\n  getFailed() {\r\n    if (this.countsMap) {\r\n      const failed = this.countsMap[Defines.CAMPAIGN_STATUS.FAILED] + this.countsMap[Defines.CAMPAIGN_STATUS.ALL_MESSAGES_FAILED];\r\n      return (failed ? failed : 0);\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { CampaignModel } from '../shared/models/campaign-model';\r\nimport { B2bSenderNameModel } from '../shared/models/b2b_sender_name_model';\r\nimport { BaseService } from '../shared/services/base-service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ApiResponse } from '../shared/models/api-response';\r\nimport { ApiRequest } from '../shared/models/api-request';\r\nimport { Defines } from '../shared/static/defines';\r\nimport { CampaignRequestModel } from '../shared/models/campaign-request-model';\r\nimport { TestSmsModel } from '../shared/models/test-sms-model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CampaignService extends BaseService {\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n    super(httpClient);\r\n    console.log(\"Campaign Service\" + this.backendUrl);\r\n  }\r\n  initAuthorizationUrl() {\r\n    this.authorizationUrl += this.secureApi + Defines.API_ENDPOINTS.CAMPAIGNS;\r\n    console.log(\"Authorization Url =>\", this.authorizationUrl);\r\n}\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  public list(): Observable<ApiResponse<Array<CampaignModel>>> {\r\n    const apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.CAMPAIGNS + Defines.API_ENDPOINTS.LIST;\r\n    const obs: Observable<any> = this.http.post<ApiResponse<Array<CampaignModel>>>\r\n      (apiUrl, new ApiRequest(null, ''), this.httpOptions);\r\n    return obs;\r\n  }\r\n\r\n  public get(campaign: CampaignRequestModel): Observable<ApiResponse<CampaignModel>> {\r\n    const apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.CAMPAIGNS + Defines.API_ENDPOINTS.GET;\r\n    const obs: Observable<any> = this.http.post<ApiResponse<CampaignModel>>\r\n      (apiUrl, new ApiRequest(campaign, ''), this.httpOptions);\r\n    return obs;\r\n  }\r\n\r\n  public create(campaign: CampaignRequestModel): Observable<ApiResponse<any>> {\r\n    const apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.CAMPAIGNS + Defines.API_ENDPOINTS.CREATE;\r\n    const obs: Observable<any> = this.http.post<ApiResponse<Array<any>>>\r\n      (apiUrl, new ApiRequest(campaign, ''), this.httpOptions);\r\n    return obs;\r\n  }\r\n\r\n  public delete(campaign: CampaignRequestModel): Observable<ApiResponse<any>> {\r\n    const apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.CAMPAIGNS + Defines.API_ENDPOINTS.DELETE;\r\n    const obs: Observable<any> = this.http.post<ApiResponse<Array<any>>>\r\n      (apiUrl, new ApiRequest(campaign, ''), this.httpOptions);\r\n    return obs;\r\n  }\r\n\r\n  public update(campaign: CampaignRequestModel): Observable<ApiResponse<any>> {\r\n    const apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.CAMPAIGNS + Defines.API_ENDPOINTS.UPDATE;\r\n    const obs: Observable<any> = this.http.post<ApiResponse<Array<any>>>\r\n      (apiUrl, new ApiRequest(campaign, ''), this.httpOptions);\r\n    return obs;\r\n  }\r\n\r\n  public approve(campaign: CampaignRequestModel): Observable<ApiResponse<any>> {\r\n    const apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.CAMPAIGNS + Defines.API_ENDPOINTS.approve;\r\n    const obs: Observable<any> = this.http.post<ApiResponse<Array<any>>>\r\n      (apiUrl, new ApiRequest(campaign, ''), this.httpOptions);\r\n    return obs;\r\n  }\r\n\r\n  public pause(campaign: CampaignRequestModel): Observable<ApiResponse<any>> {\r\n    const apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.CAMPAIGNS + Defines.API_ENDPOINTS.PAUSE;\r\n    const obs: Observable<any> = this.http.post<ApiResponse<Array<any>>>\r\n      (apiUrl, new ApiRequest(campaign, ''), this.httpOptions);\r\n    return obs;\r\n  }\r\n\r\n  public listSenders(): Observable<ApiResponse<Array<B2bSenderNameModel>>> {\r\n    const apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.B2BSENDERNAME + Defines.API_ENDPOINTS.LIST;\r\n    const obs: Observable<any> = this.http.post<ApiResponse<Array<any>>>\r\n      (apiUrl, new ApiRequest(null, ''), this.httpOptions);\r\n    return obs;\r\n  }\r\n\r\n  public testSms(testSms: TestSmsModel): Observable<ApiResponse<any>> {\r\n    const apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.TEST_SMS;\r\n    const obs: Observable<any> = this.http.post<ApiResponse<any>>\r\n      (apiUrl, new ApiRequest(testSms, ''), this.httpOptions);\r\n    return obs;\r\n  }\r\n\r\n  public getCounts(): Observable<ApiResponse<any>> {\r\n    const apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.CAMPAIGNS + '/counts';\r\n    const obs: Observable<any> = this.http.post<ApiResponse<any>>\r\n      (apiUrl, new ApiRequest(null, ''), this.httpOptions);\r\n    return obs;\r\n  }\r\n\r\n  public getStats(n: number): Observable<ApiResponse<any>> {\r\n    const apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.CAMPAIGNS + '/stats';\r\n    const obs: Observable<any> = this.http.post<ApiResponse<any>>\r\n      (apiUrl, new ApiRequest(n, ''), this.httpOptions);\r\n    return obs;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CampaignListComponent } from './campaign-list/campaign-list.component';\r\nimport { AddEditCampaignComponent } from './add-edit-campaign/add-edit-campaign.component';\r\nimport { CampaignService } from './campaign.service';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\nimport { OrderModule } from 'ngx-order-pipe';\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FileDropModule } from 'ngx-file-drop';\r\nimport { CampaignStatusFilter } from 'src/app/shared/Pipes/campaign-status-filter.pipe';\r\nimport { CampaignNameFilter } from '../shared/Pipes/campaign-name-filter.pipe';\r\nimport { ClickOutsideModule } from 'ng-click-outside';\r\nimport { ProgressBarModule } from 'primeng/progressbar';\r\nimport { DynamicDialogModule } from 'primeng/dynamicdialog';\r\nimport { TestSmsComponent } from './test-sms/test-sms.component';\r\nimport { CampaignStatsComponent } from './campaign-stats/campaign-stats.component';\r\nimport { CampaignDetailsComponent } from './campaign-details/campaign-details.component';\r\nimport { CampaignProgressComponent } from './campaign-progress/campaign-progress.component';\r\nimport { CampaignDateFilter } from '../shared/Pipes/campaign-date-filter.pipe';\r\nimport { AutosizeModule } from 'ngx-autosize';\r\nimport {TooltipModule} from 'primeng/tooltip';\r\nimport { CampaignEntityFilter } from '../shared/Pipes/campaign-entity-filter.pipe';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CampaignListComponent,\r\n    AddEditCampaignComponent,\r\n    CampaignStatusFilter,\r\n    CampaignNameFilter,\r\n    CampaignDateFilter,\r\n    CampaignEntityFilter,\r\n    TestSmsComponent,\r\n    CampaignStatsComponent,\r\n    CampaignDetailsComponent,\r\n    CampaignProgressComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    NgxPaginationModule,\r\n    Ng2SearchPipeModule,\r\n    OrderModule,\r\n    OwlDateTimeModule,\r\n    OwlNativeDateTimeModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FileDropModule,\r\n    ReactiveFormsModule,\r\n    ClickOutsideModule,\r\n    ProgressBarModule,\r\n    DynamicDialogModule,\r\n    AutosizeModule,\r\n    TooltipModule\r\n  ], providers: [CampaignService],\r\n  exports: [CampaignListComponent, AddEditCampaignComponent, CampaignStatsComponent],\r\n  entryComponents: [\r\n    TestSmsComponent\r\n  ]\r\n})\r\nexport class CampaignsModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhbXBhaWducy90ZXN0LXNtcy90ZXN0LXNtcy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"row p-3\\\">\\r\\n  <div class=\\\"col-12\\\">\\r\\n    <form [formGroup]=\\\"smsTestForm\\\">\\r\\n      <div class=\\\"form-input\\\">\\r\\n        <label class=\\\"form-input-label\\\">Test SMS String</label>\\r\\n        <input class=\\\"input\\\" formControlName=\\\"dialWithParameters\\\" placeholder=\\\"01111111111,Placeholder=value,...\\\"\\r\\n          [ngClass]=\\\"{ 'invalid-input': fc.dialWithParameters.errors  && (fc.dialWithParameters.touched || fc.dialWithParameters.dirty)}\\\">\\r\\n      </div>\\r\\n      <div *ngIf=\\\"fc.dialWithParameters.errors  && (fc.dialWithParameters.touched || fc.dialWithParameters.dirty)\\\">\\r\\n        <div *ngIf=\\\"fc.dialWithParameters.errors.required\\\" class=\\\"invalid-text\\\">This field is required</div>\\r\\n        <div *ngIf=\\\"fc.dialWithParameters.errors.pattern\\\" class=\\\"invalid-text\\\">Invalid input format\\r\\n          [ex.\\\"01111111111,Placeholder=value,...\\\"]\\r\\n        </div>\\r\\n        <div *ngIf=\\\"fc.dialWithParameters.errors.invalidPlaceholder\\\" class=\\\"invalid-text\\\">Missing parameters in dial \\r\\n          {{invalidPlaceholders}}.\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n    <!--<button class=\\\"button button-green\\\" type=\\\"submit\\\">Test</button>  -->\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row p-2 mt-2\\\">\\r\\n  <div class=\\\"col-12\\\">\\r\\n    <button (click)=\\\"send()\\\" class=\\\"button button-green mr-2\\\">\\r\\n      Send Test SMS\\r\\n    </button>\\r\\n    <button (click)=\\\"close()\\\" class=\\\"button button-black\\\">\\r\\n      Cancel\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { DynamicDialogRef } from 'primeng/api';\r\nimport { DynamicDialogConfig } from 'primeng/api';\r\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'ndp-test-sms',\r\n  templateUrl: './test-sms.component.html',\r\n  styleUrls: ['./test-sms.component.css']\r\n})\r\nexport class TestSmsComponent implements OnInit {\r\n\r\n  constructor(public ref: DynamicDialogRef, public config: DynamicDialogConfig, private formBuilder: FormBuilder) { }\r\n  smsTestForm: FormGroup;\r\n  smsText: string;\r\n  public invalidPlaceholders;\r\n  ngOnInit() {\r\n    // msg: this.config.msg;\r\n    this.smsText = this.config.data.msg;\r\n\r\n    this.smsTestForm = this.formBuilder.group({\r\n      dialWithParameters: ['', [Validators.required, Validators.pattern('[+]?[0][1][1|0|2|5][0-9]{8}([,][A-z0-9]+[=][\\u0001-\\u002B\\u002D-\\u06FF]+)*')]]\r\n    });\r\n  }\r\n  get fc() {\r\n    return this.smsTestForm.controls;\r\n  }\r\n  send() {\r\n    console.log('sending test sms: ', this.smsTestForm.get('dialWithParameters').value);\r\n    const placeholders = this.populatePlaceHolders(this.smsTestForm.controls['dialWithParameters'].value);\r\n    this.invalidPlaceholders = this.checkPlaceholdersExist(this.smsText,placeholders,this.smsTestForm.get('dialWithParameters'));\r\n    \r\n    for (const i in this.smsTestForm.controls) {\r\n      if (this.smsTestForm.controls[i]) { this.smsTestForm.controls[i].markAsTouched(); }\r\n    }\r\n\r\n    if (this.smsTestForm.invalid) {\r\n      console.log('form is invalid =>', this.smsTestForm);\r\n      return;\r\n    }\r\n    this.ref.close(this.smsTestForm.get('dialWithParameters').value);\r\n  }\r\n  close() {\r\n    console.log('closing');\r\n    this.ref.close();\r\n  }\r\n\r\n  populatePlaceHolders(dial:string) : any {\r\n    let placeholders = {};\r\n    let line: string  = dial + '\\n';\r\n\r\n    let params = line.substring(line.indexOf(',') + 1);\r\n\r\n    do {\r\n      placeholders['{' + params.substring(0, params.indexOf('=')) + '}'] = true;\r\n      params = params.substring((params.indexOf(',') > 0) ? params.indexOf(',') + 1 : params.indexOf('\\n'));\r\n    } while (params.indexOf('\\n') > 0);\r\n    \r\n    console.log('placeholders =>',placeholders);\r\n    return placeholders;\r\n  }\r\n\r\n  checkPlaceholdersExist(smsScript: string, placeholdersMap:any, formControl:AbstractControl):string {\r\n    let invalidPlaceholders = \"[\";\r\n    let remainingSmsScript = smsScript == null ? \"\" : smsScript;\r\n    let placeholder;\r\n    let hasErrors: boolean = false;\r\n    while (placeholder = remainingSmsScript.match(\"\\{[A-Za-z0-9]+\\}\")) {\r\n      if (placeholdersMap[placeholder]) {\r\n        console.log(placeholder+\" hwhw\");\r\n      } else {\r\n        hasErrors = true;\r\n        if(!invalidPlaceholders.match(placeholder)){\r\n          invalidPlaceholders = invalidPlaceholders + placeholder + \" \";\r\n        }\r\n      }\r\n      remainingSmsScript = remainingSmsScript.replace(placeholder, \"\");\r\n    }\r\n    let errors = formControl.errors;\r\n\r\n    if (hasErrors) {\r\n      if (errors) {\r\n        errors['invalidPlaceholder'] = true;\r\n      } else {\r\n        errors = { invalidPlaceholder: true };\r\n      }\r\n    } else {\r\n      if (errors && errors['invalidPlaceholder']) {\r\n        delete errors['invalidPlaceholder'];\r\n        if (Object.keys(errors).length === 0) {\r\n          errors = null;\r\n        }\r\n      }\r\n    }\r\n    formControl.setErrors(errors);\r\n    if(hasErrors){\r\n      invalidPlaceholders = invalidPlaceholders.substr(0, invalidPlaceholders.length - 1) + \"]\";\r\n    }else{\r\n      invalidPlaceholders = \"\";\r\n    }\r\n    return invalidPlaceholders;\r\n  }\r\n\r\n}\r\n","module.exports = \".invalid-feedback {\\r\\n     display: block !important; \\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZW50aXR5L2VudGl0eS1hZGQtZWRpdC9lbnRpdHktYWRkLWVkaXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtLQUNLLHlCQUF5Qjs7QUFFOUIiLCJmaWxlIjoic3JjL2FwcC9lbnRpdHkvZW50aXR5LWFkZC1lZGl0L2VudGl0eS1hZGQtZWRpdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmludmFsaWQtZmVlZGJhY2sge1xyXG4gICAgIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7IFxyXG5cclxufVxyXG5cclxuXHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"page-content \\\">\\r\\n    <div *ngIf=\\\"modelToAdd != null\\\" class=\\\"business-entities-details\\\">\\r\\n        <div class=\\\"row no-gutters animated fadeInUp\\\">\\r\\n            <div class=\\\"col-5\\\">\\r\\n                <div class=\\\"page-title \\\">\\r\\n                    Business Entity\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"section animated fadeInUp\\\">\\r\\n\\r\\n            <div class=\\\"row my-auto\\\">\\r\\n                <div *ngIf=\\\"mode==1\\\" class=\\\"col-6 text-left section-title\\\">\\r\\n                    Edit Business Entity\\r\\n                </div>\\r\\n                <div *ngIf=\\\"mode==0\\\" class=\\\"col-6 text-left section-title\\\">\\r\\n                    Add Business Entity\\r\\n                </div>\\r\\n                <div class=\\\"col-3 text-right\\\">\\r\\n                    <!-- Default switch -->\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"col-3 text-right\\\">\\r\\n\\r\\n                    <!-- Default switch -->\\r\\n                    <span class=\\\"p-2\\\">{{modelToAdd.active ? 'Active' : 'Inactive'}}</span>\\r\\n                    <p-inputSwitch [(ngModel)]=\\\"modelToAdd.active\\\"></p-inputSwitch>\\r\\n                </div>\\r\\n            </div>\\r\\n            <form [formGroup]=\\\"mainForm\\\">\\r\\n                <div class=\\\"row mt-4 \\\">\\r\\n                    <div class=\\\"col-3 \\\">\\r\\n                        <div class=\\\"p-p\\\">\\r\\n                            <img src=\\\"./assets/img/buildingLogo.svg\\\" class=\\\"profile-pic\\\">\\r\\n                            <div class=\\\"edit\\\">\\r\\n                                <i class=\\\"fas fa-pencil-alt\\\"></i>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-5\\\">\\r\\n\\r\\n                        <div class=\\\"form-input form-input-timepicker \\\">\\r\\n                            <label class=\\\"form-input-label\\\">Business Entity Name </label>\\r\\n                            <input class=\\\"input\\\" nfSpecialCharacters formControlName=\\\"entityName\\\"\\r\\n                                [(ngModel)]=\\\"modelToAdd.entityName\\\" placeholder=\\\"\\\">\\r\\n                            <div *ngIf=\\\"submitted && !!f.entityName.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"!!f.entityName.errors.required\\\">Entity Name is required</div>\\r\\n                                <div *ngIf=\\\"!f.entityName.errors.required && !!f.entityName.errors.nfSpecialCharacters\\\">\\r\\n                                    Entity Name Must be a valid username</div>\\r\\n                                <!-- <div *ngIf=\\\"!f.entityName.errors.required && !!f.entityName.errors.nfNoSpaces\\\">Spaces only not allowed</div> -->\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"col-3\\\">\\r\\n                        <div class=\\\"form-input form-selectbox \\\">\\r\\n                            <label class=\\\"form-input-label\\\">Business Entity Type</label>\\r\\n                            <!-- <select class=\\\"selectbox\\\">\\r\\n                          <option>Internal</option>\\r\\n                          <option selected>External</option>\\r\\n                          <option>...</option>\\r\\n                      </select> -->\\r\\n\\r\\n                            <p-dropdown formControlName=\\\"entityType\\\" [options]=\\\"entityType\\\" styleclass=\\\"form-selectbox\\\"\\r\\n                                [(ngModel)]=\\\"selectedrEntityType\\\">\\r\\n\\r\\n                                <ng-template let-type pTemplate=\\\"item\\\">\\r\\n                                    <div class=\\\"ui-helper-clearfix\\\" style=\\\"position: relative;height: 25px;\\\">\\r\\n                                        <div style=\\\"font-size:14px;float:right;margin-top:4px\\\">{{type.label}}</div>\\r\\n                                    </div>\\r\\n                                </ng-template>\\r\\n                            </p-dropdown>\\r\\n                            <!-- <div class=\\\"form-selectbox-icon\\\">\\r\\n                      </div> -->\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row mt-5 \\\">\\r\\n                    <div class=\\\"col-3\\\">\\r\\n                        <div class=\\\"form-input form-input-timepicker \\\">\\r\\n                            <label type=\\\"number\\\" class=\\\"form-input-label\\\">Maximum Throughput/Second </label>\\r\\n                            <input class=\\\"input\\\" (change)=\\\"checkvalues()\\\" min=\\\"1\\\" formControlName=\\\"maxThroughput\\\"\\r\\n                                type=\\\"number\\\" [(ngModel)]=\\\"modelToAdd.maxThroughput\\\" placeholder=\\\"\\\">\\r\\n                            <div *ngIf=\\\"submitted && !!f.maxThroughput.errors && MaxThroughputValid\\\"\\r\\n                                class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"!!f.maxThroughput.errors.required\\\">Maximum Throughput is required</div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"submitted && !!f.maxThroughput.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"!!f.maxThroughput.errors.min\\\">Negative value and 0 not allowed </div>\\r\\n                            </div>\\r\\n\\r\\n\\r\\n                            <div *ngIf=\\\"submitted && !MaxThroughputValid \\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div>Value must be less than app profile value </div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-3\\\">\\r\\n                        <div class=\\\"form-input form-input-timepicker\\\">\\r\\n                            <label type=\\\"number\\\" class=\\\"form-input-label\\\">Maximum Daily Quota</label>\\r\\n                            <input class=\\\"input\\\" (change)=\\\"checkvalues()\\\" min=\\\"1\\\" formControlName=\\\"dailyQuota\\\"\\r\\n                                type=\\\"number\\\" [(ngModel)]=\\\"modelToAdd.dailyQuota\\\" placeholder=\\\"\\\">\\r\\n                            <div *ngIf=\\\"submitted && !!f.dailyQuota.errors && dailyQuotaValid\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"!!f.dailyQuota.errors.required\\\">Daily Quote is required</div>\\r\\n                            </div>\\r\\n\\r\\n                            <div *ngIf=\\\"submitted && !!f.dailyQuota.errors \\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"!!f.dailyQuota.errors.min\\\">Negative value and 0 not allowed</div>\\r\\n                            </div>\\r\\n\\r\\n                            <div *ngIf=\\\"submitted && !dailyQuotaValid \\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div>Value must be less than app profile value </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-3\\\">\\r\\n                        <div class=\\\"form-input form-selectbox \\\">\\r\\n                            <label class=\\\"form-input-label\\\"> APP profile</label>\\r\\n                            <!-- <select class=\\\"selectbox\\\">\\r\\n                          <option>...</option>\\r\\n                          <option selected>APP Accounts</option>\\r\\n                          <option>...</option>\\r\\n                      </select>\\r\\n                      <div class=\\\"form-selectbox-icon\\\">\\r\\n                      </div> -->\\r\\n\\r\\n                            <p-dropdown (onChange)=\\\"checkvalues()\\\" [options]=\\\"profileItems\\\" formControlName=\\\"appProfile\\\"\\r\\n                                placeholder=\\\"\\\" [(ngModel)]=\\\"modelToAdd.appProfileId\\\" filter=\\\"true\\\">\\r\\n\\r\\n                                <ng-template let-profile pTemplate=\\\"item\\\">\\r\\n                                    <div class=\\\"ui-helper-clearfix\\\" style=\\\"position: relative;height: 25px;\\\">\\r\\n\\r\\n                                        <div style=\\\"font-size:14px;float:right;margin-top:4px\\\">{{profile.label}}</div>\\r\\n                                    </div>\\r\\n                                </ng-template>\\r\\n                            </p-dropdown>\\r\\n\\r\\n\\r\\n                            <div *ngIf=\\\"submitted && !!f.appProfile.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"!!f.appProfile.errors.required\\\">select App profile </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div *ngIf=\\\"submitted && !!f.appProfile.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"!!f.appProfile.errors.min\\\">select App profile </div>\\r\\n                            </div>\\r\\n\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div *ngIf=\\\"reportDeliveryValid\\\" class=\\\"col-3\\\">\\r\\n                        <label class=\\\"form-input-label\\\">Delivery Report</label>\\r\\n                        <div class=\\\"input\\\">\\r\\n                            <p-inputSwitch formControlName=\\\"deliveryReport\\\" [(ngModel)]=\\\"modelToAdd.deliveryReport\\\">\\r\\n                            </p-inputSwitch>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </form>\\r\\n\\r\\n            <form [formGroup]=\\\"balanceForm\\\">\\r\\n                <div class=\\\"row mt-5\\\">\\r\\n\\r\\n                    <div class=\\\"col-3\\\">\\r\\n                        <!-- <form class=\\\"pt-4\\\"> -->\\r\\n                        <div class=\\\"custom-control custom-checkbox text-muted caption-gutter-left-0\\\">\\r\\n                            <p-checkbox formControlName=\\\"isLimited\\\" [(ngModel)]=\\\"modelToAdd.isLimited\\\"\\r\\n                                label=\\\"Limited Account\\\" binary=\\\"true\\\">\\r\\n                            </p-checkbox>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"modelToAdd.isLimited\\\" class=\\\"col-3\\\">\\r\\n                        <div class=\\\"form-input form-input-timepicker \\\">\\r\\n                            <label class=\\\"form-input-label\\\">Balance </label>\\r\\n                            <!-- -->\\r\\n                            <input *ngIf=\\\"mode !== 1\\\" class=\\\"input\\\" formControlName=\\\"balance\\\"\\r\\n                                [(ngModel)]=\\\"modelToAdd.balance\\\" placeholder=\\\"\\\">\\r\\n                            <input *ngIf=\\\"mode == 1\\\" class=\\\"input\\\" formControlName=\\\"balance\\\"\\r\\n                                [(ngModel)]=\\\"modelToAdd.balance\\\" placeholder=\\\"\\\" readonly title=\\\"This balance is subject to live change if any campaigns belonging to ({{modelToAdd.entityName}}) are running at the moment, add/subtract any amount you need to modify in the below input.\\\">\\r\\n                            <div *ngIf=\\\"submitted && !!getBalanceControlls.balance.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"!!getBalanceControlls.balance.errors.required\\\">balance required</div>\\r\\n                                <!-- <div *ngIf=\\\"!!f.entityName.errors.nfNoSpaces\\\">Spaces only not allowed</div> -->\\r\\n                            </div>\\r\\n\\r\\n                            <div *ngIf=\\\"submitted && !!getBalanceControlls.balance.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"!!getBalanceControlls.balance.errors.min\\\">You cannot subtract more than the available balance\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"mode == 1\\\" class=\\\"form-input form-input-timepicker \\\">\\r\\n                            <label class=\\\"form-input-label\\\">Balance To Add</label>\\r\\n                            <!-- -->\\r\\n                            <input class=\\\"input\\\" formControlName=\\\"balanceToAdd\\\" [(ngModel)]=\\\"modelToAdd.balanceToAdd\\\"\\r\\n                                placeholder=\\\"\\\" type=\\\"number\\\">\\r\\n                            <div *ngIf=\\\"submitted && !!getBalanceControlls.balanceToAdd.errors\\\"\\r\\n                                class=\\\"invalid-feedback\\\">\\r\\n                                <div *ngIf=\\\"!!getBalanceControlls.balanceToAdd.errors.required\\\">Balance to add can't be\\r\\n                                    empty</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n            <div class=\\\"row mt-5\\\">\\r\\n                <div class=\\\"col-12\\\">\\r\\n                    <div class=\\\"form-input form-input-timepicker \\\">\\r\\n                        <label class=\\\"form-input-label-dark\\\">Default SMS script </label>\\r\\n                        <input class=\\\"input\\\" [(ngModel)]=\\\"modelToAdd.smsScript\\\" placeholder=\\\"\\\">\\r\\n                    </div>\\r\\n    \\r\\n                </div>\\r\\n            </div>\\r\\n    \\r\\n            </form>\\r\\n\\r\\n           \\r\\n\\r\\n            <div *ngIf=\\\"canAddFakeSenderValid\\\" class=\\\"row mt-5\\\">\\r\\n                <div class=\\\"col-3\\\">\\r\\n                    <button (click)=\\\"addfakeSender()\\\" class=\\\"button button-green mr-2 pr-4 pl-4\\\">\\r\\n                        Add Fake sender\\r\\n                    </button>\\r\\n                </div>\\r\\n\\r\\n                <!-- <div *ngIf=\\\"fakeSenderArray.length > 0\\\" class=\\\"col-3\\\">\\r\\n                    <button (click)=\\\"removeFakeSender()\\\" class=\\\"button button-black mr-2 pr-4 pl-4\\\">\\r\\n                        Remove\\r\\n                    </button>\\r\\n                </div> -->\\r\\n            </div>\\r\\n            <div *ngIf=\\\"fakesenderDuplicated\\\" class=\\\"invalid-feedback\\\">\\r\\n                <div>Duplicated Fake sender</div>\\r\\n            </div>\\r\\n            <div *ngFor=\\\"let fakeSender of fakeSenderArray; let i = index\\\" class=\\\"row mt-5\\\">\\r\\n                <div class=\\\"col-4\\\">\\r\\n                    <div class=\\\"form-input form-input-timepicker \\\">\\r\\n                        <label class=\\\"form-input-label-dark\\\">Fake Sender </label>\\r\\n                        <input class=\\\"input\\\" (blur)=\\\"checkFakeSenderDuplication(fakeSender.fakeSenderName)\\\"\\r\\n                            [(ngModel)]=\\\"fakeSender.fakeSenderName\\\" placeholder=\\\"\\\" maxlength=\\\"11\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-4\\\">\\r\\n                    <div class=\\\"form-input form-input-timepicker \\\">\\r\\n                        <label class=\\\"form-input-label-dark\\\"></label>\\r\\n                        <p-radioButton name=\\\"group1\\\" [value]=\\\"true\\\" label=\\\"Default\\\" [(ngModel)]=\\\"fakeSender.isDefault\\\"\\r\\n                            inputId=\\\"opt1\\\"></p-radioButton>\\r\\n                        <button (click)=\\\"removeSpecificSender(i)\\\" class=\\\"button button-black ml-2 pr-2 pl-2\\\">\\r\\n                            Remove\\r\\n                        </button>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"row mt-5\\\">\\r\\n                <div class=\\\"col-12\\\">\\r\\n                    <div class=\\\"form-input form-input-timepicker \\\">\\r\\n                        <div class=\\\"form-input-label-dark mr-3\\\">Delegated Groups </div>\\r\\n                        <!-- <input class=\\\"input\\\" placeholder=\\\"8500000\\\"> -->\\r\\n                        <p-multiSelect styleClass=\\\"form-input mt-2\\\" [options]=\\\"groupsSlectItem\\\"\\r\\n                            [(ngModel)]=\\\"selectedGroups\\\"></p-multiSelect>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"row mt-5 pt-3 pb-2\\\">\\r\\n                <div class=\\\"col-12 justify-content-center text-right\\\">\\r\\n                    <button (click)=\\\"saveEntity()\\\" class=\\\"button button-green mr-2 pr-4 pl-4\\\">\\r\\n                        Save\\r\\n                    </button>\\r\\n                    <button (click)=\\\"cancel()\\\" class=\\\"button button-black mr-2 pr-4 pl-4\\\">\\r\\n                        Cancel\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- </form> -->\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { EntityServiceService } from '../entity-service.service';\r\nimport { AppProfileModel } from 'src/app/shared/models/app-profile-model';\r\nimport { EntityModel } from 'src/app/shared/models/entity-model';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { FakeSenderModel } from 'src/app/shared/models/fake-sender-model';\r\nimport { LkGroup } from 'src/app/shared/models/lk-group';\r\nimport { User } from 'src/app/shared/models/user-model';\r\nimport { Defines } from 'src/app/shared/static/defines';\r\n\r\n@Component({\r\n  selector: 'ndp-entity-add-edit',\r\n  templateUrl: './entity-add-edit.component.html',\r\n  styleUrls: ['./entity-add-edit.component.css'],\r\n})\r\nexport class EntityAddEditComponent implements OnInit {\r\n  groupsSlectItem: SelectItem[];\r\n  selectedGroups = [];\r\n  modelToAdd: EntityModel = new EntityModel();\r\n  submitted = false;\r\n  selectedrEntityType = \"2\";\r\n  selectedProfile = 1;\r\n  mainForm: FormGroup;\r\n  balanceForm: FormGroup;\r\n  modelToEdit = new EntityModel();\r\n  fakeSenderArray = new Array<FakeSenderModel>();\r\n  fakesenderDuplicated = false;\r\n  fakesenderEmpty = false;\r\n  public mode = 0;\r\n  profilemap = new Map();\r\n  dailyQuotaValid = true;\r\n  MaxThroughputValid = true;\r\n  reportDeliveryValid = true;\r\n  canAddFakeSenderValid = true;\r\n  initialBalance: number;\r\n  allAppProfiles = new Array<AppProfileModel>();\r\n  profileItems = new Array<SelectItem>();\r\n  public user: User;\r\n\r\n  entityType: SelectItem[];\r\n  constructor(private entityService: EntityServiceService, private route: Router, private formBuilder: FormBuilder) { }\r\n  get f() { return this.mainForm.controls; }\r\n  get getBalanceControlls() { return this.balanceForm.controls; }\r\n\r\n  ngOnInit() {\r\n    this.user = JSON.parse(localStorage.getItem(Defines.SESSION_KEYS.userModel));\r\n    this.mainForm = this.formBuilder.group({\r\n      entityName: ['', Validators.required],\r\n      entityType: new FormControl(),\r\n      dailyQuota: ['', [Validators.required, Validators.min(1)]],\r\n      appProfile: ['', [Validators.required, Validators.min(1)]],\r\n      maxThroughput: ['', [Validators.required, Validators.min(1)]],\r\n      deliveryReport: new FormControl(),\r\n\r\n    });\r\n\r\n    this.balanceForm = this.formBuilder.group({\r\n      isLimited: new FormControl(),\r\n      balance: ['', [Validators.required, Validators.min(this.modelToAdd.balance)]],\r\n      balanceToAdd: [0, [Validators.required]]\r\n    });\r\n    this.groupsSlectItem = [];\r\n    this.entityService.listGroup().subscribe(resp => {\r\n\r\n      let groupListAllAuthorized = this.entityService.accessGranted(Defines.PRIVILEGES.GROUP.LIST, Defines.ACCESS_LEVELS.EVERYTHING);\r\n      console.log(\"groupListAllAuthorized\", groupListAllAuthorized);\r\n      resp.responsePayload.forEach(group => {\r\n\r\n        if (groupListAllAuthorized || (group.ownerEntity !== this.modelToEdit.entityId && group.ownerEntity == this.user.entityId)) {\r\n          this.groupsSlectItem.push({ label: group.groupName, value: group.groupId });\r\n        }\r\n      });\r\n      this.groupsSlectItem = JSON.parse(JSON.stringify(this.groupsSlectItem));\r\n    });\r\n\r\n    this.entityType = [\r\n      { label: 'External', value: '2' },\r\n      { label: 'Internal', value: '1' }\r\n\r\n    ];\r\n    this.mode = this.entityService.mode;\r\n\r\n    this.entityService.getAllAppProfile().subscribe(res => {\r\n\r\n      this.allAppProfiles = res.responsePayload;\r\n      this.profileItems.push({ label: \"select app profile \", value: -1 });\r\n      this.allAppProfiles.forEach(profile => {\r\n        this.profileItems.push({ label: profile.appProfileName, value: profile.appProfileId });\r\n        this.profilemap.set(profile.appProfileId, profile);\r\n      })\r\n\r\n      this.profileItems = JSON.parse(JSON.stringify(this.profileItems));\r\n\r\n\r\n    });\r\n\r\n    // let editModel = <EntityModel>this.entityService.popSessionObject(Defines.SESSION_KEYS.entityToEdit);\r\n    if (this.mode == 1) {\r\n      this.modelToAdd = this.entityService.modeltoEdit;//TODO ==> make this get from service live ( Service returns lot of unset fields (problem in DAO))\r\n\r\n      this.modelToAdd.balanceToAdd = 0;\r\n      this.selectedrEntityType = this.modelToAdd.isInternal ? \"1\" : \"2\";\r\n      this.fakeSenderArray = this.modelToAdd.fakeSendrName;\r\n      if (this.modelToAdd.groupList.length > 0)\r\n        this.modelToAdd.groupList.forEach(element => {\r\n          this.selectedGroups.push(element.groupId);\r\n        });\r\n    }\r\n  }\r\n\r\n  saveEntity() {\r\n    this.submitted = true;\r\n    if (this.mainForm.invalid) {\r\n      return;\r\n    }\r\n    if (this.fakesenderDuplicated)\r\n      return;\r\n    if (this.modelToAdd.isLimited != undefined && this.modelToAdd.isLimited && this.balanceForm.invalid) {\r\n      return;\r\n    }\r\n    if (this.modelToAdd.dailyQuota > this.profilemap.get(this.modelToAdd.appProfileId).maximumDailyQuota) {\r\n      this.dailyQuotaValid = false;\r\n      return;\r\n    }\r\n\r\n    if (this.modelToAdd.maxThroughput > this.profilemap.get(this.modelToAdd.appProfileId).maxThroughput) {\r\n      this.MaxThroughputValid = false;\r\n      return;\r\n    }\r\n    console.log(\"console : \", this.selectedGroups);\r\n\r\n    this.modelToAdd.groupList = [];\r\n\r\n    // this.modelToAdd.groupList\r\n    this.selectedGroups.forEach(element => {\r\n      let tempgroup = new LkGroup(\"\", element);\r\n      this.modelToAdd.groupList.push(tempgroup);\r\n    });\r\n    this.modelToAdd.fakeSendrName = this.fakeSenderArray;\r\n\r\n    this.modelToAdd.isInternal = this.selectedrEntityType == \"1\";\r\n    if (this.modelToAdd.active == undefined)\r\n      this.modelToAdd.active = false;\r\n\r\n    if (this.modelToAdd.isLimited == undefined)\r\n      this.modelToAdd.isLimited = false;\r\n\r\n    if (this.modelToAdd.deliveryReport == undefined)\r\n      this.modelToAdd.deliveryReport = false;\r\n\r\n    if (this.mode == 0) {\r\n      this.entityService.addEntity(this.modelToAdd).subscribe(resp => {\r\n\r\n        //debugger;\r\n        console.log(\"response \", resp.responsePayload);\r\n        if (resp.status == 0) {\r\n          this.modelToAdd = new EntityModel();\r\n\r\n          this.route.navigate(['/entity']);\r\n        }\r\n      });\r\n    } else if (this.mode == 1) {\r\n      if (this.initialBalance != this.modelToAdd.balance) {\r\n        //this.balanceToAdd\r\n      }\r\n      this.entityService.editEntity(this.modelToAdd).subscribe(resp => {\r\n\r\n        //debugger;\r\n        if (resp.status == 0) {\r\n          this.route.navigate(['/entity']);\r\n        }\r\n        console.log(\"response \", resp.responsePayload);\r\n        // this.outputEntity.emit(this.modelToAdd);\r\n\r\n      });\r\n    }\r\n\r\n\r\n  }\r\n\r\n  cancel() {\r\n    if (this.mode == 0) {\r\n      this.modelToAdd = new EntityModel();\r\n      this.entityService.mode = 0;\r\n      this.route.navigate(['/entity']);\r\n    } else {\r\n      this.modelToAdd = this.entityService.modeltoEdit;\r\n      this.entityService.mode = 0;\r\n      this.route.navigate(['/entity']);\r\n      // this.outputEntity.emit(null);\r\n    }\r\n  }\r\n\r\n  addfakeSender() {\r\n    if (this.fakeSenderArray.length == 0) {\r\n\r\n      let temp = new FakeSenderModel();\r\n      temp.isDefault = true;\r\n      this.fakeSenderArray.push(temp);\r\n    }\r\n    else {\r\n      this.fakeSenderArray.push(new FakeSenderModel());\r\n    }\r\n  }\r\n\r\n  removeFakeSender() {\r\n    this.fakeSenderArray.splice(this.fakeSenderArray.length - 1, 1);\r\n  }\r\n\r\n  removeSpecificSender(n: number) {\r\n    if (this.fakeSenderArray[n].isDefault) {\r\n      if (n - 1 > -1)\r\n        this.fakeSenderArray[n - 1].isDefault = true;\r\n      else if (n + 1 < this.fakeSenderArray.length)\r\n        this.fakeSenderArray[n + 1].isDefault = true;\r\n    }\r\n    this.fakeSenderArray.splice(n, 1);\r\n  }\r\n\r\n  checkFakeSenderDuplication(fakesender) {\r\n    let count = 0;\r\n    console.log(\"fakesender : \", fakesender);\r\n    if (fakesender != undefined) {\r\n\r\n      this.fakeSenderArray.forEach(element => {\r\n        if (fakesender.toLowerCase().trim() == element.fakeSenderName.toLowerCase().trim()) {\r\n          count++;\r\n        }\r\n      });\r\n\r\n      if (count > 1) {\r\n        console.log(fakesender, \"duplicated \");\r\n        this.fakesenderDuplicated = true;\r\n      } else {\r\n        this.fakesenderDuplicated = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  checkvalues() {\r\n    if (this.modelToAdd.appProfileId > 0) {\r\n      if (this.modelToAdd.dailyQuota > this.profilemap.get(this.modelToAdd.appProfileId).maximumDailyQuota) {\r\n        this.dailyQuotaValid = false;\r\n\r\n      } else {\r\n        this.dailyQuotaValid = true;\r\n      }\r\n\r\n\r\n      if (this.modelToAdd.maxThroughput > this.profilemap.get(this.modelToAdd.appProfileId).maxThroughput) {\r\n        this.MaxThroughputValid = false;\r\n\r\n      } else {\r\n        this.MaxThroughputValid = true;\r\n\r\n      }\r\n\r\n      if (this.profilemap.get(this.modelToAdd.appProfileId).requiresDeliveryReport) {\r\n        this.reportDeliveryValid = true;\r\n      } else {\r\n        this.reportDeliveryValid = false;\r\n        this.modelToAdd.deliveryReport = false;\r\n      }\r\n\r\n    }\r\n  }\r\n}\r\n\r\n","module.exports = \".filter-menu{\\r\\n    position: absolute;\\r\\n    z-index: 100;\\r\\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, .5);\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZW50aXR5L2VudGl0eS1saXN0L2VudGl0eS1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLHlDQUF5QztBQUM3QyIsImZpbGUiOiJzcmMvYXBwL2VudGl0eS9lbnRpdHktbGlzdC9lbnRpdHktbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZpbHRlci1tZW51e1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgei1pbmRleDogMTAwO1xyXG4gICAgYm94LXNoYWRvdzogMXB4IDJweCA0cHggcmdiYSgwLCAwLCAwLCAuNSk7XHJcbn1cclxuXHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"page-content\\\" (click)=\\\"dropDownClose()\\\">\\r\\n  <div class=\\\"row no-gutters mb-4\\\">\\r\\n    <div class=\\\"col-4\\\">\\r\\n      <div class=\\\"page-title\\\">\\r\\n        Business Entities\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-8\\\">\\r\\n      <div class=\\\"row no-gutters my-auto\\\">\\r\\n        <div *ngIf=\\\"filterMenuEnabled\\\" class=\\\"section filter-menu\\\">\\r\\n          <div class=\\\"row form-input form-selectbox\\\">\\r\\n            <label class=\\\"form-input-label\\\">Entity Status</label>\\r\\n            <select class=\\\"selectbox\\\" [(ngModel)]=\\\"statusFilter\\\">\\r\\n              <option [ngValue]=\\\"null\\\">All</option>\\r\\n              <option [ngValue]=\\\"true\\\">Active</option>\\r\\n              <option [ngValue]=\\\"false\\\">Inactive</option>\\r\\n            </select>\\r\\n            <div class=\\\"form-selectbox-icon\\\"></div>\\r\\n          </div>\\r\\n          <div class=\\\"row form-input form-selectbox form-input-margin\\\">\\r\\n            <label class=\\\"form-input-label\\\">Entity Type</label>\\r\\n            <select class=\\\"selectbox\\\" [(ngModel)]=\\\"typeFilter\\\">\\r\\n              <option value=\\\"all\\\">All</option>\\r\\n              <option value=\\\"internal\\\">Internal</option>\\r\\n              <option value=\\\"external\\\">External</option>\\r\\n            </select>\\r\\n            <div class=\\\"form-selectbox-icon\\\"></div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-2 text-center\\\">\\r\\n          <button (click)=\\\"showHideFilterMenu()\\\" class=\\\"button button-grey\\\">\\r\\n            <i class=\\\"fa fa-filter\\\" style=\\\"font-size:12px\\\"></i> Filter</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-8 text-right\\\">\\r\\n          <div class=\\\"search-input\\\">\\r\\n            <input [(ngModel)]=\\\"nameFilter\\\" type=\\\"text\\\" class=\\\"\\\" placeholder=\\\"Search By Entity Name\\\">\\r\\n            <i class=\\\"icon-search icon\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-2 text-right\\\">\\r\\n          <a ndpAuthorize [targetUrl]=\\\"authorizationUrl+ defines.CREATE\\\"\\r\\n          (successHandler)=\\\"addEntity()\\\" class=\\\"button button-green\\\">Create Entity</a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n  <div *ngIf=\\\"allEntities\\\" (click)=\\\"filterMenuEnabled = false\\\">\\r\\n    <div\\r\\n      *ngIf=\\\"setFilteredEntities(allEntities | entitynameFilter:nameFilter | entityStatusFilter: statusFilter | entityTypeFilter: typeFilter)\\\">\\r\\n    </div>\\r\\n    <div class=\\\"campaigns-list\\\"\\r\\n      *ngFor=\\\"let Entity of filteredEntities | orderBy: key : reverse | paginate: { itemsPerPage: perPage, currentPage: p }; let i = index\\\">\\r\\n\\r\\n      <div *ngIf=\\\"(dropDownEntityId === Entity.entityId)\\\" [ngClass] = \\\"{'hide':!dropDown}\\\" class=\\\"dropdown\\\" style=\\\"z-index: 999;\\\" (click)=\\\"$event.stopPropagation();\\\">\\r\\n        <ul class=\\\"list\\\">\\r\\n          <li ndpAuthorize [targetUrl]=\\\"authorizationUrl+ defines.GET\\\" [targetId]=\\\"Entity.entityId\\\"\\r\\n          (successHandler)=\\\"viewEntity(Entity)\\\"><span class=\\\"fas fa-eye\\\"></span>Details</li>\\r\\n          <li ndpAuthorize [targetUrl]=\\\"authorizationUrl+ defines.UPDATE\\\" [targetId]=\\\"Entity.entityId\\\"\\r\\n          (successHandler)=\\\"editEntity(Entity)\\\"><span class=\\\"fas fa-edit\\\"></span>Edit</li>\\r\\n          <li ndpAuthorize [targetUrl]=\\\"authorizationUrl+ defines.DELETE\\\" [targetId]=\\\"Entity.entityId\\\"\\r\\n          (successHandler)=\\\"showConfirmDelete(Entity)\\\"><span class=\\\"fas fa-trash\\\"></span>Delete</li>\\r\\n        </ul>\\r\\n      </div>\\r\\n      <div class=\\\"row confirmDialog animated fadeIn faster\\\" *ngIf=\\\"deleteConfirm && (deletedId == Entity.entityId)\\\">\\r\\n        <div class=\\\"col-12\\\">Are you sure you want to delete entity <b>{{Entity.entityName}}</b> ?</div>\\r\\n        <div class=\\\"col-12 mt-2\\\">\\r\\n          <button class=\\\"button button-green mr-4\\\" (click)=\\\"deleteEntity(Entity)\\\">DELETE</button>\\r\\n          <button class=\\\"button button-black \\\" (click)=\\\"hideConfirmDelete()\\\">CANCEL</button>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"campaigns-item animated fadeIn faster\\\">\\r\\n        <div class=\\\"row no-gutters my-auto\\\">\\r\\n          <div class=\\\"col-3\\\">\\r\\n            <div class=\\\"title-small title-robotomedium\\\">\\r\\n              <span class=\\\"mr-4\\\"><img src=\\\"./assets/img/buildingLogo.svg\\\"></span>\\r\\n              {{Entity.entityName}}\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-2 text-left \\\">\\r\\n            <div *ngIf=\\\"Entity.active\\\" class=\\\"color-green pt-3\\\">\\r\\n              <i class=\\\"fas fa-circle mr-2 heading-8\\\"></i>\\r\\n              <span> Active</span>\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"!Entity.active\\\" class=\\\"color-red pt-3\\\">\\r\\n              <i class=\\\"fas fa-circle mr-2 heading-8\\\"></i>\\r\\n              <span> Inactive </span>\\r\\n            </div>\\r\\n\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"col-3 my-auto\\\">\\r\\n            <div class=\\\"property heading-8 color-gray\\\">\\r\\n              Entity Type\\r\\n            </div>\\r\\n            <div *ngIf=\\\"Entity.active\\\" class=\\\" value heading-7\\\">\\r\\n              {{Entity.isInternal ? \\\"Internal\\\" : \\\"External\\\"}}\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"!Entity.active\\\" class=\\\" value heading-7 color-dimmed\\\">\\r\\n              {{Entity.isInternal ? \\\"Internal\\\" : \\\"External\\\"}}\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-3 my-auto\\\">\\r\\n            <div class=\\\"property heading-8 color-gray\\\">\\r\\n              Maximum Daily Quota\\r\\n            </div>\\r\\n            <div *ngIf=\\\"Entity.active\\\" class=\\\"value heading-7\\\">\\r\\n              {{Entity.dailyQuota}}\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"!Entity.active\\\" class=\\\" value heading-7 color-dimmed\\\">\\r\\n              {{Entity.dailyQuota}}\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-1 my-auto text-right\\\">\\r\\n            <a (click)=\\\"dropDownOpen($event,Entity)\\\" class=\\\"campaigns-item-actions-link\\\">\\r\\n              <i class=\\\"icon-dropdown-dots icon icon-lg icon-gray\\\"></i>\\r\\n            </a>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <ndp-entity-view *ngIf=\\\"showEditFlag &&   showEditId == Entity.entityId\\\" [viewmodel]=\\\"entitytoView\\\"\\r\\n          (action)=\\\"doAfterViewAction($event)\\\"></ndp-entity-view>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n    <!-- <div *ngIf=\\\"showDetailsFlag && ShowDetailsSelectedId == Entity.entityId\\\">\\r\\n        <div class=\\\"ui-grid\\\">\\r\\n          <div class=\\\"ui-grid-col-3\\\">\\r\\n            <div class=\\\"ui-grid\\\">\\r\\n              <div class=\\\"ui-grid-col-6\\\">Maximum throughput </div>\\r\\n              <div class=\\\"ui-grid-col-6\\\">{{Entity.quotaLimit}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"ui-grid-col-3\\\">\\r\\n            <div class=\\\"ui-grid\\\">\\r\\n              <div class=\\\"ui-grid-col-6\\\">daily quota</div>\\r\\n              <div class=\\\"ui-grid-col-6\\\">{{Entity.dailyQuota}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"ui-grid-col-3\\\">\\r\\n            <div class=\\\"ui-grid\\\">\\r\\n              <div class=\\\"ui-grid-col-6\\\">APP profile</div>\\r\\n              <div class=\\\"ui-grid-col-6\\\">{{Entity.appProfileName}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"ui-grid-col-3\\\">\\r\\n            <div class=\\\"ui-grid\\\">\\r\\n              <div class=\\\"ui-grid-col-6\\\">Limited account</div>\\r\\n              <div class=\\\"ui-grid-col-6\\\">\\r\\n                <p-inputSwitch [(ngModel)]=\\\"Entity.isLimitid\\\"></p-inputSwitch>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"ui-grid\\\">\\r\\n          <div class=\\\"ui-grid-col-3\\\">\\r\\n            <div class=\\\"ui-grid\\\">\\r\\n              <div class=\\\"ui-grid-col-6\\\">Balance </div>\\r\\n              <div class=\\\"ui-grid-col-6\\\"></div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"ui-grid-col-3\\\">\\r\\n            <div class=\\\"ui-grid\\\">\\r\\n              <div class=\\\"ui-grid-col-6\\\">Delivery report</div>\\r\\n              <div class=\\\"ui-grid-col-6\\\">\\r\\n                <p-inputSwitch [(ngModel)]=\\\"Entity.deliveryReport\\\"></p-inputSwitch>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"ui-grid-col-3\\\">\\r\\n            <div class=\\\"ui-grid\\\">\\r\\n              <div class=\\\"ui-grid-col-6\\\">created by</div>\\r\\n              <div class=\\\"ui-grid-col-6\\\"> {{Entity.creatorFName  + \\\" \\\" + Entity.creatorLName}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"ui-grid-col-3\\\">\\r\\n            <div class=\\\"ui-grid\\\">\\r\\n              <div class=\\\"ui-grid-col-6\\\">creation date</div>\\r\\n              <div class=\\\"ui-grid-col-6\\\">{{Entity.creationDate}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div> -->\\r\\n    <div *ngIf=\\\"filteredEntities.length == 0 && inialized\\\">\\r\\n      <div class=\\\"row mt-4 animated fadeIn fast\\\">\\r\\n        <div class=\\\"col-12 mt-4 text-center\\\">\\r\\n          <div class=\\\"col-12 mt-4 fas fa-user-slash fa-7x faded-grey\\\"></div>\\r\\n          <div class=\\\"col-12 mt-4 page-title faded-grey\\\"><b>No Entities Found</b></div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"ngx-pagination\\\">\\r\\n      <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { EntityServiceService } from '../entity-service.service';\r\nimport { EntityModel } from 'src/app/shared/models/entity-model';\r\nimport { forEach } from '@angular/router/src/utils/collection';\r\nimport { Router } from '@angular/router';\r\nimport { User } from 'src/app/shared/models/user-model';\r\nimport { Defines } from 'src/app/shared/static/defines';\r\n\r\n@Component({\r\n  selector: 'ndp-entity-list',\r\n  templateUrl: './entity-list.component.html',\r\n  styleUrls: ['./entity-list.component.css']\r\n})\r\nexport class EntityListComponent implements OnInit {\r\n\r\n\r\n\r\n  allEntities: Array<EntityModel>;\r\n  filteredEntities = null;\r\n  inialized = false;\r\n  showDetailsFlag = false;\r\n  ShowDetailsSelectedId = 0;\r\n  dropDown: boolean;\r\n  dropDownEntityId: number;\r\n  showEditFlag = false;\r\n  showEditId = 0;\r\n  deleteConfirm = false;\r\n  deletedId: number;\r\n  entitytoView: EntityModel;\r\n  user: User;\r\n  listAccessLevel: number = 0;\r\n  editAccessLevel: number = 0;\r\n  deleteAccessLevel: number = 0;\r\n  canCreate: boolean;\r\n  constructor(private entityService: EntityServiceService, private route: Router) { }\r\n\r\n  /*=============================*/\r\n  /* Pagination Filtering & Sorting*/\r\n  p = 1;\r\n  perPage = 5;\r\n  /*FILTERING*/\r\n  filter: string;\r\n  /*SORTING*/\r\n  key = 'entityId';\r\n  reverse = true;\r\n  /*=============================*/\r\n\r\n  //Filter Menu\r\n  filterMenuEnabled: boolean;\r\n\r\n  //filtering\r\n  statusFilter: boolean;\r\n  typeFilter: string;\r\n  nameFilter: string;\r\n\r\n  //Authorization Vars\r\n  authorizationUrl: string;\r\n  defines = Defines.API_CRUD;\r\n\r\n  ngOnInit() {\r\n    this.authorizationUrl = this.entityService.authorizationUrl;\r\n    this.statusFilter = null;\r\n    this.typeFilter = 'all';\r\n    this.allEntities = new Array<EntityModel>();\r\n    //this.filteredEntities = this.allEntities;\r\n    this.entityService.mode = 0;\r\n    this.entityService.modeltoEdit = null;\r\n    this.setAccessLevel();\r\n    console.log(\"Can create\", this.canCreate)\r\n    this.listEntity();\r\n  }\r\n\r\n  listEntity() {\r\n    this.entityService.getAllEntity().subscribe(resp => {\r\n      this.allEntities = resp.responsePayload;\r\n      this.inialized = true;\r\n      this.allEntities.forEach(entity => {\r\n        if (entity.createdBy === this.user.id) {\r\n          if (this.editAccessLevel >= Defines.ACCESS_LEVELS.OWN) {\r\n            entity.canEdit = true\r\n          }\r\n          if (this.deleteAccessLevel >= Defines.ACCESS_LEVELS.OWN) {\r\n            entity.canDelete = true\r\n          }\r\n          if (this.listAccessLevel >= Defines.ACCESS_LEVELS.OWN) {\r\n            entity.canView = true\r\n          }\r\n        } else if (entity.creatorEntityId === this.user.entityId) {\r\n          if (this.editAccessLevel >= Defines.ACCESS_LEVELS.ENTITY) {\r\n            entity.canEdit = true\r\n          }\r\n          if (this.deleteAccessLevel >= Defines.ACCESS_LEVELS.ENTITY) {\r\n            entity.canDelete = true\r\n          }\r\n          if (this.listAccessLevel >= Defines.ACCESS_LEVELS.ENTITY) {\r\n            entity.canView = true\r\n          }\r\n        } else {\r\n          if (this.editAccessLevel >= Defines.ACCESS_LEVELS.EVERYTHING) {\r\n            entity.canEdit = true\r\n          }\r\n          if (this.deleteAccessLevel >= Defines.ACCESS_LEVELS.EVERYTHING) {\r\n            entity.canDelete = true\r\n          }\r\n          if (this.listAccessLevel >= Defines.ACCESS_LEVELS.EVERYTHING) {\r\n            entity.canView = true\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  addEntity() {\r\n    this.route.navigateByUrl('/entity/add');\r\n  }\r\n  showDetails(showdetialsId: number) {\r\n    this.showDetailsFlag = true;\r\n    this.ShowDetailsSelectedId = showdetialsId;\r\n  }\r\n  showHideFilterMenu() {\r\n    this.filterMenuEnabled = !this.filterMenuEnabled;\r\n  }\r\n  setStatusFilter(statusToFilterBy: string) {\r\n    switch (statusToFilterBy) {\r\n      case \"all\":\r\n        this.statusFilter = null;\r\n        break;\r\n      case \"active\":\r\n        this.statusFilter = true;\r\n        break;\r\n      case \"inactive\":\r\n        this.statusFilter = false;\r\n        break;\r\n    }\r\n  }\r\n  setTypeFilter(statusToFilterBy: string) {\r\n    switch (statusToFilterBy) {\r\n      case \"all\":\r\n        this.typeFilter = 'all';\r\n        break;\r\n      case \"internal\":\r\n        this.typeFilter = 'internal';\r\n        break;\r\n      case \"external\":\r\n        this.typeFilter = 'external';\r\n        break;\r\n    }\r\n  }\r\n  dropDownOpen(event: Event, entity: EntityModel) {\r\n    event.stopPropagation();\r\n    if (!this.dropDown || this.dropDownEntityId != entity.entityId) {\r\n      this.dropDownEntityId = entity.entityId;\r\n      this.dropDown = true;\r\n    } else {\r\n      this.dropDown = false;\r\n    }\r\n  }\r\n\r\n  dropDownClose() {\r\n    this.dropDownEntityId = null;\r\n    this.dropDown = false;\r\n  }\r\n\r\n\r\n  editEntity(entity: EntityModel) {\r\n    this.dropDownClose();\r\n    // this.entitytoEdit = entity;\r\n    // this.showEditFlag = true;\r\n    // this.showEditId =  entity.entityId;\r\n    // this.entityService.cacheSessionObject(Defines.SESSION_KEYS.entityToEdit, JSON.stringify(entity));\r\n    this.entityService.setmodelTobeEdit(entity);\r\n    this.route.navigate(['/entity/add']);\r\n  }\r\n\r\n  afterEditentity(outputEntity: any) {\r\n\r\n    if (outputEntity != null) {\r\n      console.log(\"output entity \", outputEntity);\r\n\r\n      let tempEntities = [];\r\n      this.allEntities.forEach(entity => {\r\n        if (entity.entityId == outputEntity.entityId) {\r\n          console.log(\"list before \", this.allEntities)\r\n          tempEntities.push(outputEntity);\r\n          console.log(\"list after \", this.allEntities)\r\n        }\r\n        else {\r\n          tempEntities.push(entity);\r\n        }\r\n      });\r\n\r\n      console.log(\"list before \", this.allEntities)\r\n\r\n      this.allEntities = tempEntities;\r\n      console.log(\"list after \", this.allEntities)\r\n    }\r\n    this.showEditFlag = false;\r\n    this.showEditId = null;\r\n  }\r\n\r\n\r\n  deleteEntity(inEntity: EntityModel) {\r\n    this.dropDownClose();\r\n    this.entityService.deleteEntity(inEntity.entityId).subscribe(resp => {\r\n      if (resp.status === 0) {\r\n        this.allEntities = this.allEntities.filter(x => x.entityId !== inEntity.entityId);\r\n      } else {\r\n        this.hideConfirmDelete()\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  viewEntity(entity: EntityModel) {\r\n    this.dropDownClose();\r\n    this.entitytoView = entity;\r\n    this.showEditFlag = true;\r\n    this.showEditId = entity.entityId;\r\n  }\r\n  doAfterViewAction($event) {\r\n    console.log(\"Action \", $event);\r\n    if ($event == 1)\r\n      this.editEntity(this.entitytoView);\r\n    else if ($event == 2)\r\n      this.showEditFlag = false;\r\n  }\r\n\r\n  showConfirmDelete(entity: EntityModel) {\r\n    this.deleteConfirm = true;\r\n    this.deletedId = entity.entityId;\r\n  }\r\n\r\n  hideConfirmDelete() {\r\n    this.deleteConfirm = false;\r\n    this.deletedId = 0;\r\n  }\r\n\r\n  setFilteredEntities(filtered: EntityModel[]) {\r\n    this.filteredEntities = filtered;\r\n  }\r\n\r\n  setAccessLevel() {\r\n    this.user = JSON.parse(localStorage.getItem(Defines.SESSION_KEYS.userModel));\r\n    this.user.privilegeList.forEach(rolePrivilege => {\r\n      switch (rolePrivilege.privilegeId) {\r\n        case Defines.PRIVILEGES.ENTITY.EDIT: {\r\n          this.editAccessLevel = rolePrivilege.accessLevel;\r\n          break;\r\n        } case Defines.PRIVILEGES.ENTITY.LIST: {\r\n          this.listAccessLevel = rolePrivilege.accessLevel;\r\n          break;\r\n        } case Defines.PRIVILEGES.ENTITY.DELETE: {\r\n          this.deleteAccessLevel = rolePrivilege.accessLevel;\r\n          break;\r\n        } case Defines.PRIVILEGES.ENTITY.CREATE: {\r\n          this.canCreate = true;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    )\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, observable, of } from 'rxjs';\r\nimport { ApiResponse } from '../shared/models/api-response';\r\nimport { EntityModel } from '../shared/models/entity-model';\r\nimport { Defines } from '../shared/static/defines';\r\nimport { BaseService } from '../shared/services/base-service';\r\nimport { ApiRequest } from '../shared/models/api-request';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AppProfileModel } from '../shared/models/app-profile-model';\r\nimport { GroupModel } from '../shared/models/group-model';\r\nimport { tap, catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EntityServiceService extends BaseService {\r\n  modeltoEdit: EntityModel;\r\n  mode=0;\r\n  constructor(private client: HttpClient) {\r\n    super(client);\r\n  }\r\n  initAuthorizationUrl() {\r\n    this.authorizationUrl += this.secureApi + Defines.API_ENDPOINTS.entity;\r\n    console.log(\"Authorization Url =>\", this.authorizationUrl);\r\n}\r\n\r\n  public getAllEntity(): Observable<ApiResponse<Array<EntityModel>>> {\r\n    let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.entity + Defines.API_ENDPOINTS.LIST;\r\n    let obs: Observable<any> = this.http.post<ApiResponse<Array<EntityModel>>>\r\n      (apiUrl, new ApiRequest(null, ''), this.httpOptions);\r\n\r\n    return obs;\r\n  }\r\n\r\n  public getEntity(id: number): Observable<ApiResponse<EntityModel>> {\r\n    const apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.entity + Defines.API_ENDPOINTS.GET;\r\n    const obs: Observable<any> = this.http.post<ApiResponse<EntityModel>>\r\n      (apiUrl, new ApiRequest(id, ''), this.httpOptions);\r\n    return obs;\r\n  }\r\n\r\n  public getAllAppProfile(): Observable<ApiResponse<Array<AppProfileModel>>> {\r\n    let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.appprofile + Defines.API_ENDPOINTS.LIST;\r\n    let obs: Observable<any> = this.http.post<ApiResponse<Array<AppProfileModel>>>\r\n      (apiUrl, new ApiRequest(null, ''), this.httpOptions);\r\n\r\n    return obs;\r\n  }\r\n\r\n\r\n  public addEntity(entity: EntityModel): Observable<ApiResponse<string>> {\r\n    let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.entity + Defines.API_ENDPOINTS.CREATE;\r\n    let obs: Observable<any> = this.http.post<ApiResponse<string>>\r\n      (apiUrl, new ApiRequest(entity, ''), this.httpOptions);\r\n\r\n    return obs;\r\n\r\n  }\r\n\r\n\r\n  public editEntity(entity: EntityModel): Observable<ApiResponse<string>> {\r\n    let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.entity + Defines.API_ENDPOINTS.UPDATE;\r\n    let obs: Observable<any> = this.http.post<ApiResponse<string>>\r\n      (apiUrl, new ApiRequest(entity, ''), this.httpOptions);\r\n\r\n    return obs;\r\n\r\n  }\r\n\r\n  public deleteEntity(entityId: number): Observable<ApiResponse<string>> {\r\n    let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.entity + Defines.API_ENDPOINTS.DELETE;\r\n    let obs: Observable<any> = this.http.post<ApiResponse<string>>\r\n      (apiUrl, new ApiRequest(entityId, ''), this.httpOptions);\r\n\r\n    return obs;\r\n\r\n  }\r\n\r\n\r\n\r\n  public listGroup(): Observable<ApiResponse<Array<GroupModel>>> {\r\n    let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.GROUPS + Defines.API_CRUD.LIST;\r\n    let obs: Observable<any> = this.http.post<ApiResponse<Array<GroupModel>>>\r\n      (apiUrl, new ApiRequest(null, \"\"), this.httpOptions).pipe(\r\n        tap(list_ => console.log('get List group: ' + list_)),\r\n        catchError(this.handleError<any>('Error'))\r\n      );\r\n    return obs;\r\n  }\r\n\r\n\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      console.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n\r\n  }\r\n\r\n\r\n  public setmodelTobeEdit(entity: EntityModel) {\r\n    debugger;\r\n    this.modeltoEdit = entity;\r\n    this.mode = 1;\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0eS9lbnRpdHktdmlldy9lbnRpdHktdmlldy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!-- <div class=\\\"page-content \\\"> -->\\r\\n<div class=\\\"business-entities-details\\\">\\r\\n    <div class=\\\"row no-gutters animated fadeIn faster\\\">\\r\\n        <div class=\\\"col-5\\\">\\r\\n            <div class=\\\"page-title \\\">\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"animated fadeIn faster\\\">\\r\\n        <div class=\\\"row mt-4 \\\">\\r\\n            <div class=\\\"col-3 \\\">\\r\\n                <div class=\\\"p-p\\\">\\r\\n                    <img src=\\\"\\\" class=\\\"profile-pic\\\">\\r\\n                    <div class=\\\"edit\\\">\\r\\n                        <i class=\\\"fas fa-pencil-alt\\\"></i>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-6\\\">\\r\\n                <div class=\\\"form-input form-input-timepicker \\\">\\r\\n                    <label class=\\\"form-input-label\\\">Business Entity Name </label>\\r\\n                    <input class=\\\"input\\\" [disabled]=\\\"'disabled'\\\" [(ngModel)]=\\\"modelToview.entityName\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-3\\\">\\r\\n                <div class=\\\"form-input form-selectbox \\\">\\r\\n                    <label class=\\\"form-input-label\\\">Business Entity Type</label>\\r\\n                    <input class=\\\"input\\\" [disabled]=\\\"'disabled'\\\" [(ngModel)]=\\\"entityType \\\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row mt-5 \\\">\\r\\n            <div class=\\\"col-3\\\">\\r\\n                <div class=\\\"form-input form-input-timepicker \\\">\\r\\n                    <label class=\\\"form-input-label\\\">Maximum throughput/second </label>\\r\\n                    <input class=\\\"input\\\" [disabled]=\\\"'disabled'\\\" [(ngModel)]=\\\"modelToview.maxThroughput\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-3\\\">\\r\\n                <div class=\\\"form-input form-input-timepicker\\\">\\r\\n                    <label class=\\\"form-input-label\\\">Maximum daily quota</label>\\r\\n                    <input class=\\\"input\\\" [disabled]=\\\"'disabled'\\\" [(ngModel)]=\\\"modelToview.dailyQuota\\\">\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-3\\\">\\r\\n                <div class=\\\"form-input form-selectbox \\\">\\r\\n                    <label class=\\\"form-input-label\\\">Assigned APP profile</label>\\r\\n                    <input class=\\\"input\\\" [disabled]=\\\"'disabled'\\\" [(ngModel)]=\\\"modelToview.appProfileName\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-3\\\">\\r\\n                <label class=\\\"form-input-label\\\">Delivery Report</label>\\r\\n                <div class=\\\"input\\\">\\r\\n                    <p-inputSwitch [disabled]=\\\"'disabled'\\\" [(ngModel)]=\\\"modelToview.deliveryReport\\\"></p-inputSwitch>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"row mt-5 \\\">\\r\\n            <div class=\\\"col-3\\\">\\r\\n                <div class=\\\"form-input form-input-timepicker \\\">\\r\\n                    <label class=\\\"form-input-label\\\"> Created By </label>\\r\\n                    <input class=\\\"input\\\" [disabled]=\\\"'disabled'\\\" [(ngModel)]=\\\"createdby\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-3\\\">\\r\\n                <div class=\\\"form-input form-input-timepicker\\\">\\r\\n                    <label class=\\\"form-input-label\\\"> Creation Date</label>\\r\\n                    <input class=\\\"input\\\" [disabled]=\\\"'disabled'\\\" [(ngModel)]=\\\"creationDate\\\">\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"modelToview.updatedFName !=null\\\" class=\\\"col-3\\\">\\r\\n                <div class=\\\"form-input form-selectbox \\\">\\r\\n                    <label class=\\\"form-input-label\\\">Entity last modified by</label>\\r\\n                    <input class=\\\"input\\\" [disabled]=\\\"'disabled'\\\" [(ngModel)]=\\\"updatedby\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"modelToview.updatedFName !=null\\\" class=\\\"col-3\\\">\\r\\n                <div class=\\\"form-input form-selectbox \\\">\\r\\n                    <label class=\\\"form-input-label\\\">Entity last modification date</label>\\r\\n                    <input class=\\\"input\\\" [disabled]=\\\"'disabled'\\\" [(ngModel)]=\\\"upddateDate\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"row mt-5\\\">\\r\\n            <div class=\\\"col-3\\\">\\r\\n                <p-checkbox [disabled]=\\\"'disabled'\\\" [(ngModel)]=\\\"modelToview.isLimitid\\\" label=\\\"Limited Account\\\"\\r\\n                    binary=\\\"true\\\"></p-checkbox>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"modelToview.isLimitid\\\" class=\\\"col-3\\\">\\r\\n                <div class=\\\"form-input form-input-timepicker \\\">\\r\\n                    <label class=\\\"form-input-label\\\">Balance </label>\\r\\n                    <input class=\\\"input\\\" [disabled]=\\\"'disabled'\\\" [(ngModel)]=\\\"modelToview.balance\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"showFakeSender\\\" class=\\\"row mt-5\\\">\\r\\n            <div class=\\\"col-12\\\">\\r\\n                <div class=\\\"form-input form-input-timepicker \\\">\\r\\n                    <label class=\\\"form-input-label-dark\\\">Fake Senders </label>\\r\\n                    <input class=\\\"input\\\" [disabled]=\\\"'disabled'\\\" [(ngModel)]=\\\"fakesender\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row mt-5\\\">\\r\\n            <div class=\\\"col-12\\\">\\r\\n                <div class=\\\"form-input form-input-timepicker \\\">\\r\\n                    <label class=\\\"form-input-label-dark\\\">Default SMS script </label>\\r\\n                    <input class=\\\"input\\\" [(ngModel)]=\\\"modelToview.smsScript\\\" placeholder=\\\"\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div *ngIf=\\\"shwoDlegatedGroup\\\" class=\\\"row mt-5\\\">\\r\\n            <div class=\\\"col-12\\\">\\r\\n                <div class=\\\"form-input form-input-timepicker \\\">\\r\\n                    <label class=\\\"form-input-label-dark\\\">Delegated Groups </label>\\r\\n                    <input class=\\\"input\\\" [disabled]=\\\"'disabled'\\\" [(ngModel)]=\\\"groups\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row mt-5 pt-3 pb-2\\\">\\r\\n            <div class=\\\"col-12 justify-content-center text-right\\\">\\r\\n                <a (click)=\\\"editEntity()\\\" class=\\\"button button-green mr-2 pr-4 pl-4\\\">\\r\\n                    Edit\\r\\n                </a>\\r\\n                <a (click)=\\\"cancelEntity()\\\" class=\\\"button button-primary mr-2\\\">\\r\\n                    Cancel\\r\\n                </a>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- </div> -->\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { EntityModel } from 'src/app/shared/models/entity-model';\r\n\r\n\r\n@Component({\r\n  selector: 'ndp-entity-view',\r\n  templateUrl: './entity-view.component.html',\r\n  styleUrls: ['./entity-view.component.css']\r\n})\r\nexport class EntityViewComponent implements OnInit {\r\n\r\n  @Input(\"viewmodel\")\r\n  modelToview: EntityModel;\r\n  @Output(\"action\")\r\n  actionTaken = new EventEmitter<number>();\r\n  entityType: string;\r\n  fakesender = \"\";\r\n  groups: string = \"\";\r\n  createdby = \"\";\r\n  updatedby = \"\";\r\n  creationDate: string;\r\n  upddateDate: string;\r\n  showFakeSender = false;\r\n  shwoDlegatedGroup = false;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.entityType = this.modelToview.isInternal ? \"Internal\" : \"external\";\r\n\r\n    this.modelToview.fakeSendrName.forEach(element => {\r\n      this.showFakeSender =true;\r\n      if (element.isDefault) {\r\n        this.fakesender += element.fakeSenderName + \" (*) , \";\r\n      } else {\r\n        this.fakesender += element.fakeSenderName + \",\"\r\n      }\r\n    });\r\n    this.fakesender = this.fakesender.substring(0, this.fakesender.length - 1);\r\n\r\n\r\n    this.modelToview.groupList.forEach(element => {\r\n      this.groups += element.groupName + \",\"\r\n      this.shwoDlegatedGroup = true;\r\n    });\r\n    this.groups = this.groups.substring(0, this.groups.length - 1);\r\n\r\n\r\n    this.createdby = this.modelToview.creatorFName + \" \" + this.modelToview.creatorLName;\r\n    this.updatedby = this.modelToview.updatedFName != null ? this.modelToview.updatedFName + \" \" + this.modelToview.updatedLName : \"\";\r\n    let creationDate_Date = new Date(this.modelToview.creationDate);\r\n    this.creationDate = creationDate_Date.getDate() + \"-\" + (creationDate_Date.getMonth() + 1) + \"-\" + creationDate_Date.getFullYear()\r\n    let update_Date = new Date(this.modelToview.updatedDate);\r\n    debugger;\r\n    this.upddateDate = update_Date.getDate() + \"-\" + (update_Date.getMonth() + 1) + \"-\" + update_Date.getFullYear()\r\n\r\n  }\r\n\r\n  editEntity() {\r\n    this.actionTaken.emit(1);\r\n  }\r\n\r\n  cancelEntity() {\r\n    this.actionTaken.emit(2);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { EntityListComponent } from './entity-list/entity-list.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\nimport { OrderModule } from 'ngx-order-pipe';\r\nimport { InputSwitchModule } from 'primeng/inputswitch';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { EntityAddEditComponent } from './entity-add-edit/entity-add-edit.component';\r\nimport { EntityViewComponent } from './entity-view/entity-view.component';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { RadioButtonModule } from 'primeng/radiobutton';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { EntityStatusFilter } from '../shared/Pipes/entity-status-filter.pipe';\r\nimport { EntityTypeFilter } from '../shared/Pipes/entity-type-filter.pipe';\r\nimport { EntityEntityNameFilter } from '../shared/Pipes/entity-entityname-filter.pipe';\r\nimport { GeneralModule } from '../general/general.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\n@NgModule({\r\n  declarations: [EntityListComponent, EntityAddEditComponent, EntityViewComponent, EntityStatusFilter, EntityTypeFilter, EntityEntityNameFilter],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    NgxPaginationModule,\r\n    Ng2SearchPipeModule,\r\n    OrderModule,\r\n    InputSwitchModule,\r\n    ButtonModule,\r\n    InputTextModule,\r\n    DropdownModule,\r\n    CheckboxModule,\r\n    RadioButtonModule,\r\n    ReactiveFormsModule,\r\n    MultiSelectModule,\r\n    GeneralModule\r\n  ]\r\n})\r\nexport class EntityModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dlbmVyYWwvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ndp-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { SidebarComponent } from './sidebar/sidebar.component';\r\nimport { MenuModule } from 'primeng/menu';\r\nimport { TableModule } from 'primeng/table';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { SidebarModule } from 'primeng/sidebar';\r\nimport { NdpMessageComponent } from './ndp-message/ndp-message.component';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { SplitButtonModule } from 'primeng/splitbutton';\r\nimport { NotAuthorizedComponent } from './not-authorized/not-authorized.component';\r\nimport { OrderModule } from 'ngx-order-pipe';\r\nimport { ClickOutsideModule } from 'ng-click-outside';\r\n@NgModule({\r\n  declarations: [FooterComponent, HeaderComponent, SidebarComponent, NdpMessageComponent, NotAuthorizedComponent],\r\n  imports: [\r\n    CommonModule, MenuModule, TableModule, MultiSelectModule,\r\n    SharedModule, SidebarModule, ToastModule, ButtonModule, SplitButtonModule, OrderModule, ClickOutsideModule\r\n  ], exports: [FooterComponent, HeaderComponent, SidebarComponent,\r\n    NdpMessageComponent]\r\n\r\n})\r\nexport class GeneralModule { }\r\n","module.exports = \".right-menu{\\r\\n    right:0;\\r\\n}\\r\\n.dropdownH{\\r\\n\\tright: 0px;\\r\\n    top: 30px;\\r\\n}\\r\\n.ui-menu { \\r\\n    position: absolute;\\r\\n    /* float: right; */\\r\\n    top: -15px;\\r\\n    z-index: 500;\\r\\n    right: -30px;\\r\\n    text-align: center;\\r\\n    margin: 0;\\r\\n}\\r\\n.ui-menu .field {\\r\\n\\twidth:300px; background:#a3d94e; color:#fff; padding:5px; border:none; cursor:pointer;\\r\\n\\tfont-family:'lucida sans unicode',sans-serif; font-size:1em;\\r\\n\\tborder:solid 1px #a3d94e;\\r\\n\\ttransition: all .4s ease-in-out;\\r\\n}\\r\\n.ui-menu .field:hover {\\r\\n\\tborder:solid 1px #fff; box-shadow:0 0 5px #999\\r\\n}\\r\\n.ui-menu>ul.list {\\r\\n\\tposition:relative; \\r\\n\\tz-index:999;\\r\\n\\twidth:100px;\\r\\n\\tmargin:0; padding:10px; list-style:none;\\r\\n\\tbackground:#fff; color:#333; border-radius:5px; box-shadow:0 0 5px #999\\r\\n}\\r\\n.ui-menu>ul.list li {\\r\\n\\tpadding:10px;\\r\\n\\t/*border-bottom: solid 1px #ccc;*/\\r\\n}\\r\\n.ui-menu>ul.list li:hover {\\r\\n\\tbackground:#a3d94e; color:#fff;border-radius: 50px;\\r\\n\\tcursor: pointer;\\r\\n}\\r\\n.ui-menu>ul.list li:last-child { border:none }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZ2VuZXJhbC9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxPQUFPO0FBQ1g7QUFDQTtDQUNDLFVBQVU7SUFDUCxTQUFTO0FBQ2I7QUFJQTtJQUNJLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsVUFBVTtJQUNWLFlBQVk7SUFDWixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLFNBQVM7QUFDYjtBQUNBO0NBQ0MsV0FBVyxFQUFFLGtCQUFrQixFQUFFLFVBQVUsRUFBRSxXQUFXLEVBQUUsV0FBVyxFQUFFLGNBQWM7Q0FDckYsNENBQTRDLEVBQUUsYUFBYTtDQUMzRCx3QkFBd0I7Q0FFeEIsK0JBQStCO0FBQ2hDO0FBQ0E7Q0FDQyxxQkFBcUIsRUFDMEM7QUFDaEU7QUFDQTtDQUNDLGlCQUFpQjtDQUNqQixXQUFXO0NBQ1gsV0FBVztDQUNYLFFBQVEsRUFBRSxZQUFZLEVBQUUsZUFBZTtDQUN2QyxlQUFlLEVBQUUsVUFBVSxFQUN3QixpQkFBaUIsRUFDTDtBQUNoRTtBQUNBO0NBQ0MsWUFBWTtDQUNaLGlDQUFpQztBQUNsQztBQUNBO0NBQ0Msa0JBQWtCLEVBQUUsVUFBVSxDQUFDLG1CQUFtQjtDQUNsRCxlQUFlO0FBQ2hCO0FBQ0EsaUNBQWlDLFlBQVkiLCJmaWxlIjoic3JjL2FwcC9nZW5lcmFsL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5yaWdodC1tZW51e1xyXG4gICAgcmlnaHQ6MDtcclxufVxyXG4uZHJvcGRvd25Ie1xyXG5cdHJpZ2h0OiAwcHg7XHJcbiAgICB0b3A6IDMwcHg7XHJcbn1cclxuXHJcblxyXG5cclxuLnVpLW1lbnUgeyBcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIC8qIGZsb2F0OiByaWdodDsgKi9cclxuICAgIHRvcDogLTE1cHg7XHJcbiAgICB6LWluZGV4OiA1MDA7XHJcbiAgICByaWdodDogLTMwcHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBtYXJnaW46IDA7XHJcbn1cclxuLnVpLW1lbnUgLmZpZWxkIHtcclxuXHR3aWR0aDozMDBweDsgYmFja2dyb3VuZDojYTNkOTRlOyBjb2xvcjojZmZmOyBwYWRkaW5nOjVweDsgYm9yZGVyOm5vbmU7IGN1cnNvcjpwb2ludGVyO1xyXG5cdGZvbnQtZmFtaWx5OidsdWNpZGEgc2FucyB1bmljb2RlJyxzYW5zLXNlcmlmOyBmb250LXNpemU6MWVtO1xyXG5cdGJvcmRlcjpzb2xpZCAxcHggI2EzZDk0ZTtcclxuXHQtd2Via2l0LXRyYW5zaXRpb246IGFsbCAuNHMgZWFzZS1pbi1vdXQ7XHJcblx0dHJhbnNpdGlvbjogYWxsIC40cyBlYXNlLWluLW91dDtcclxufVxyXG4udWktbWVudSAuZmllbGQ6aG92ZXIge1xyXG5cdGJvcmRlcjpzb2xpZCAxcHggI2ZmZjtcclxuXHQtbW96LWJveC1zaGFkb3c6MCAwIDVweCAjOTk5OyAtd2Via2l0LWJveC1zaGFkb3c6MCAwIDVweCAjOTk5OyBib3gtc2hhZG93OjAgMCA1cHggIzk5OVxyXG59XHJcbi51aS1tZW51PnVsLmxpc3Qge1xyXG5cdHBvc2l0aW9uOnJlbGF0aXZlOyBcclxuXHR6LWluZGV4Ojk5OTtcclxuXHR3aWR0aDoxMDBweDtcclxuXHRtYXJnaW46MDsgcGFkZGluZzoxMHB4OyBsaXN0LXN0eWxlOm5vbmU7XHJcblx0YmFja2dyb3VuZDojZmZmOyBjb2xvcjojMzMzO1xyXG5cdC1tb3otYm9yZGVyLXJhZGl1czo1cHg7IC13ZWJraXQtYm9yZGVyLXJhZGl1czo1cHg7IGJvcmRlci1yYWRpdXM6NXB4O1xyXG5cdC1tb3otYm94LXNoYWRvdzowIDAgNXB4ICM5OTk7IC13ZWJraXQtYm94LXNoYWRvdzowIDAgNXB4ICM5OTk7IGJveC1zaGFkb3c6MCAwIDVweCAjOTk5XHJcbn1cclxuLnVpLW1lbnU+dWwubGlzdCBsaSB7XHJcblx0cGFkZGluZzoxMHB4O1xyXG5cdC8qYm9yZGVyLWJvdHRvbTogc29saWQgMXB4ICNjY2M7Ki9cclxufVxyXG4udWktbWVudT51bC5saXN0IGxpOmhvdmVyIHtcclxuXHRiYWNrZ3JvdW5kOiNhM2Q5NGU7IGNvbG9yOiNmZmY7Ym9yZGVyLXJhZGl1czogNTBweDtcclxuXHRjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuLnVpLW1lbnU+dWwubGlzdCBsaTpsYXN0LWNoaWxkIHsgYm9yZGVyOm5vbmUgfSJdfQ== */\"","module.exports = \"<div class=\\\"header\\\">\\r\\n  <div class=\\\"row no-gutters \\\">\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <a style=\\\"cursor: pointer\\\" class=\\\"sidemenu-toggle\\\" (click)=\\\"toggleMenu()\\\">\\r\\n        <i class=\\\"icon-menu icon\\\"></i>\\r\\n      </a>\\r\\n      <a routerLink=\\\"/home\\\" class=\\\"logo\\\">\\r\\n        <img src=\\\"./assets/img/etisalat.png\\\" alt=\\\"\\\">\\r\\n        <span class=\\\"logo-title\\\">Etisalat\\r\\n          <span class=\\\"title-gray\\\">Notification Delivery</span>\\r\\n        </span>\\r\\n      </a>\\r\\n    </div>\\r\\n    <div class=\\\"col-6 text-right\\\">\\r\\n      <div class=\\\"header-menu\\\">\\r\\n        <!--div class=\\\"notification\\\">\\r\\n            <a href=\\\"#\\\" class=\\\"notification-link\\\">\\r\\n              <i class=\\\"icon-notification icon\\\"></i>\\r\\n            </a>\\r\\n            <span class=\\\"notification-badge\\\">20</span>\\r\\n          </div-->\\r\\n        <div *ngIf=\\\"userMenu\\\" class=\\\"dropdown dropdownH animated fadeInDown faster\\\" (clickOutside)=\\\"closeMenu($event)\\\">\\r\\n          <ul class=\\\"list\\\">\\r\\n            <li (click)=\\\"myAccount()\\\"><span class=\\\"fas fa-user\\\"></span>My Account</li>\\r\\n            <li (click)=\\\"logout()\\\"><span class=\\\"fas fa-sign-out-alt\\\"></span>Logout</li>\\r\\n          </ul>\\r\\n        </div>\\r\\n        \\r\\n        <div class=\\\"logged-user\\\">\\r\\n          <div class=\\\"caption\\\">\\r\\n            <div class=\\\"caption-text text-left caption-text-gutter\\\">\\r\\n              <div class=\\\"logged-user-welcome\\\">\\r\\n                Welcome,\\r\\n              </div>\\r\\n              <div class=\\\"logged-user-name\\\">\\r\\n                <span>{{user.fName | titlecase}} {{user.lName | titlecase}}</span>\\r\\n                <i (click)=\\\"openMenu()\\\" class=\\\"fas fa-chevron-down icon\\\" style=\\\"cursor:pointer;\\\"></i>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <!--<div class=\\\"setting pointer\\\">-->\\r\\n          <!--p-splitButton styleClass=\\\"ui-button-secondary\\\" icon=\\\"icon-settings\\\" [model]=\\\"items\\\"></p-splitButton-->\\r\\n          <!--<span class=\\\"icon fas fa-cog\\\"></span>\\r\\n        </div>-->\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\"","\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { LoginServiceService } from 'src/app/login/login-service.service';\r\nimport { Defines } from 'src/app/shared/static/defines';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'ndp-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  items = [];\r\n  user: any;\r\n  largeMenuFlag: boolean = true;\r\n\r\n  constructor(private loginservice: LoginServiceService, private router: Router) { }\r\n\r\n  userMenu = false;\r\n  justOpened = false;\r\n\r\n  openMenu() {\r\n    this.userMenu = true;\r\n    this.justOpened = true;\r\n    console.log('openingMenu');\r\n  }\r\n  closeMenu(e: Event) {\r\n    if (!this.justOpened) {\r\n      this.userMenu = false;\r\n      console.log('closingMenu');\r\n    }\r\n    this.justOpened = false;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.user = JSON.parse(localStorage.getItem(Defines.SESSION_KEYS.userModel));\r\n    console.log(\"user : \" + this.user.fName)\r\n    this.items = [\r\n      {\r\n        label: 'My Account', icon: 'pi pi-user', command: () => {\r\n          this.myAccount();\r\n        }\r\n      },\r\n      {\r\n        label: 'Logout', icon: 'pi pi-sign-out', command: () => {\r\n          this.logout();\r\n        }\r\n      },\r\n    ];\r\n  }\r\n\r\n  myAccount() {\r\n    this.router.navigate(['myprofile/view']);\r\n  }\r\n\r\n  logout() {\r\n    this.loginservice.sendLogoutRequest().pipe(catchError((err, caught) => {\r\n      //debugger;\r\n      console.log(\"Error in doLogin \", err, caught);\r\n      throw err;\r\n    }\r\n    )).subscribe(\r\n      authTokenModel => {\r\n        localStorage.removeItem(Defines.SESSION_KEYS.authToken);\r\n        localStorage.removeItem(Defines.SESSION_KEYS.userModel);\r\n        this.router.navigate(['login']);\r\n      }\r\n    );\r\n  }\r\n  toggleMenu() {\r\n    let largeMenu = document.getElementsByClassName(\"sidemenu-large\")[0];\r\n    let pageContent = document.getElementsByClassName(\"page-content\")[0];\r\n    let sideMenuTitle = document.querySelectorAll(\".sidemenu-link-title\");\r\n    const menuCont = document.getElementById('sidem');\r\n\r\n    console.log(\"Large Menu\", largeMenu);\r\n    console.log(\"pageContent\", pageContent);\r\n    console.log(\"sideMenuTitle\", sideMenuTitle);\r\n    this.largeMenuFlag = !this.largeMenuFlag;\r\n\r\n    // console.log(largeMenuFlag)\r\n\r\n    if (this.largeMenuFlag == false) {\r\n      for (var i = 0; i < sideMenuTitle.length; i++) {\r\n        sideMenuTitle[i].classList.add(\"hide\");\r\n      }\r\n      //pageContent.classList.add(\"sidemenu-active\");\r\n      largeMenu.classList.add(\"hide\");\r\n      largeMenu.classList.remove(\"show\");\r\n\r\n      menuCont.classList.add('smallM');\r\n      menuCont.classList.remove('largeM');\r\n    }\r\n\r\n    else if (this.largeMenuFlag == true) {\r\n      for (var i = 0; i < sideMenuTitle.length; i++) {\r\n        sideMenuTitle[i].classList.remove(\"hide\");\r\n      }\r\n      //pageContent.classList.remove(\"sidemenu-active\");\r\n      largeMenu.classList.add(\"show\");\r\n      largeMenu.classList.remove(\"hide\");\r\n\r\n      menuCont.classList.add('largeM');\r\n      menuCont.classList.remove('smallM');\r\n    }\r\n\r\n\r\n  }\r\n}\r\n","module.exports = \":host ::ng-deep button {\\r\\n  margin-right: 0.25em;\\r\\n}\\r\\n\\r\\n:host ::ng-deep .custom-toast .ui-toast-message {\\r\\n  color: #ffffff;\\r\\n  background: #fc466b;\\r\\n  background: linear-gradient(to right, #3f5efb, #fc466b);\\r\\n}\\r\\n\\r\\n:host ::ng-deep .custom-toast .ui-toast-close-icon {\\r\\n  color: #ffffff;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZ2VuZXJhbC9uZHAtbWVzc2FnZS9uZHAtbWVzc2FnZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usb0JBQW9CO0FBQ3RCOztBQUVBO0VBQ0UsY0FBYztFQUNkLG1CQUFtQjtFQUVuQix1REFBdUQ7QUFDekQ7O0FBR0E7RUFDRSxjQUFjO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvZ2VuZXJhbC9uZHAtbWVzc2FnZS9uZHAtbWVzc2FnZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3QgOjpuZy1kZWVwIGJ1dHRvbiB7XHJcbiAgbWFyZ2luLXJpZ2h0OiAwLjI1ZW07XHJcbn1cclxuXHJcbjpob3N0IDo6bmctZGVlcCAuY3VzdG9tLXRvYXN0IC51aS10b2FzdC1tZXNzYWdlIHtcclxuICBjb2xvcjogI2ZmZmZmZjtcclxuICBiYWNrZ3JvdW5kOiAjZmM0NjZiO1xyXG4gIGJhY2tncm91bmQ6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjM2Y1ZWZiLCAjZmM0NjZiKTtcclxuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICMzZjVlZmIsICNmYzQ2NmIpO1xyXG59XHJcblxyXG5cclxuOmhvc3QgOjpuZy1kZWVwIC5jdXN0b20tdG9hc3QgLnVpLXRvYXN0LWNsb3NlLWljb24ge1xyXG4gIGNvbG9yOiAjZmZmZmZmO1xyXG59XHJcbiJdfQ== */\"","module.exports = \"\\r\\n<!-- <button type=\\\"button\\\" pButton (click)=\\\"showSuccess()\\\" label=\\\"Success\\\" class=\\\"ui-button-raised ui-button-rounded\\\">Success</button> -->\\r\\n\\r\\n<p-toast position=\\\"bottom-right\\\" ></p-toast>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { MessageService, Message } from 'primeng/api';\r\nimport { Observable } from 'rxjs';\r\nimport { NdpMessageService } from 'src/app/shared/services/ndp-message.service';\r\n\r\n@Component({\r\n  selector: 'ndp-message',\r\n  templateUrl: './ndp-message.component.html',\r\n  styleUrls: ['./ndp-message.component.css'],\r\n  providers: [MessageService]\r\n})\r\nexport class NdpMessageComponent implements OnInit {\r\n\r\n  constructor(private primeNgMsgService: MessageService, private ndpMsgService: NdpMessageService) { }\r\n\r\n  ngOnInit() {\r\n    this.initMsgObservation();\r\n  }\r\n\r\n  initMsgObservation() {\r\n    this.ndpMsgService.allMessages().subscribe(msgsArray => {\r\n      console.log(\"Received new Messages \", msgsArray);\r\n\r\n      this.primeNgMsgService.addAll(msgsArray);\r\n      \r\n    });\r\n  }\r\n\r\n\r\n\r\n  onClose() { }\r\n  showCustom() {\r\n    this.primeNgMsgService.add({ key: 'custom', severity: 'info', summary: 'Custom Toast', detail: 'With a Gradient' });\r\n  }\r\n  showConfirm() {\r\n    this.primeNgMsgService.clear();\r\n    this.primeNgMsgService.addAll([{ key: 'c', sticky: true, severity: 'warn', summary: 'Are you sure?', detail: 'Confirm to proceed' },\r\n    { key: 'c', sticky: true, severity: 'warn', summary: 'Are you sure?', detail: 'Confirm to proceedddd' }]);\r\n  }\r\n  showSuccess() {\r\n    this.primeNgMsgService.add({ severity: 'success', summary: 'Success Message', detail: 'Order submitted' });\r\n  }\r\n\r\n\r\n  onConfirm() {\r\n    this.primeNgMsgService.clear('c');\r\n  }\r\n\r\n  onReject() {\r\n    this.primeNgMsgService.clear('c');\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dlbmVyYWwvbm90LWF1dGhvcml6ZWQvbm90LWF1dGhvcml6ZWQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"ui-g-12\\\">\\r\\n  <div class=\\\"ui-g-12 \\\">\\r\\n    <img src=\\\"./assets/img/not-authorized.jpg\\\">\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ndp-not-authorized',\r\n  templateUrl: './not-authorized.component.html',\r\n  styleUrls: ['./not-authorized.component.css']\r\n})\r\nexport class NotAuthorizedComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".scrollbar {\\r\\n    overflow-y: auto;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZ2VuZXJhbC9zaWRlYmFyL3NpZGViYXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL2dlbmVyYWwvc2lkZWJhci9zaWRlYmFyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2Nyb2xsYmFyIHtcclxuICAgIG92ZXJmbG93LXk6IGF1dG87XHJcbn1cclxuXHJcbiJdfQ== */\"","module.exports = \"<!-- <button type=\\\"text\\\" (click)=\\\"display = true\\\" pButton icon=\\\"pi pi-plus\\\" label=\\\"Show\\\"></button> -->\\r\\n\\r\\n<div class=\\\"sidemenu scrollbar\\\">\\r\\n  <div class=\\\"sidemenu-large show\\\">\\r\\n    <a *ngIf=\\\"checkUserCanAddCampaign()\\\" routerLink=\\\"campaigns/create\\\" ndpActiveLink class=\\\"button button-primary add-campaign\\\">\\r\\n      <i class=\\\"fas fa-plus icon\\\"></i>\\r\\n      <span class=\\\"text\\\">Add Campaign</span>\\r\\n    </a>\\r\\n    <ul class=\\\"sidemenu-list\\\">\\r\\n\\r\\n      <li *ngFor=\\\"let item of items | orderBy: key : reverse\\\" class=\\\"sidemenu-item\\\">\\r\\n        <a routerLink={{item.actionUrl}} class=\\\"sidemenu-link\\\" ndpActiveLink [activeClass]=\\\"'active'\\\">\\r\\n          <i class={{item.icon}}></i>\\r\\n          <span class=\\\"sidemenu-link-title\\\">{{item.label}}</span>\\r\\n        </a>\\r\\n      </li>\\r\\n\\r\\n      <span class=\\\"sidemenu-link\\\">\\r\\n        <i></i>\\r\\n        <span class=\\\"sidemenu-link-title\\\"></span>\\r\\n      </span>\\r\\n      <!-- <li class=\\\"sidemenu-item\\\">\\r\\n\\r\\n          <a routerLink=\\\"/campaigns\\\" ndpActiveLink [activeClass]=\\\"'active'\\\" class=\\\"sidemenu-link\\\">\\r\\n            <i class=\\\"icon-campaigns icon\\\"></i>\\r\\n            <span class=\\\"sidemenu-link-title\\\">Campaigns</span>\\r\\n          </a>\\r\\n        </li>\\r\\n        <li class=\\\"sidemenu-item\\\">\\r\\n          <a routerLink=\\\"/groups\\\" class=\\\"sidemenu-link\\\" ndpActiveLink [activeClass]=\\\"'active'\\\">\\r\\n            <i class=\\\"icon-groups icon\\\"></i>\\r\\n            <span class=\\\"sidemenu-link-title\\\">Groups</span>\\r\\n          </a>\\r\\n        </li>\\r\\n        <li class=\\\"sidemenu-item\\\">\\r\\n          <a routerLink=\\\"/smstemplates\\\" class=\\\"sidemenu-link\\\" ndpActiveLink [activeClass]=\\\"'active'\\\">\\r\\n            <span class=\\\"icon-sms icon sms\\\"></span>\\r\\n            <span class=\\\"sidemenu-link-title\\\">SMS Templates</span>\\r\\n          </a>\\r\\n        </li>\\r\\n        <li class=\\\"sidemenu-item\\\">\\r\\n          <a href=\\\"#\\\" class=\\\"sidemenu-link\\\" ndpActiveLink [activeClass]=\\\"'active'\\\">\\r\\n            <span class=\\\"icon-report icon reports\\\"></span>\\r\\n            <span class=\\\"sidemenu-link-title\\\">Reports</span>\\r\\n          </a>\\r\\n        </li>\\r\\n        <li class=\\\"sidemenu-item\\\">\\r\\n            <a href=\\\"/roles\\\" class=\\\"sidemenu-link\\\" ndpActiveLink [activeClass]=\\\"'active'\\\">\\r\\n              <span class=\\\"icon-report icon sms\\\"></span>\\r\\n              <span class=\\\"sidemenu-link-title\\\">Roles</span>\\r\\n            </a>\\r\\n          </li> -->\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { MenuModule } from 'primeng/menu';\r\nimport { MenuItem } from 'primeng/api';\r\nimport { MenuItemModel } from 'src/app/shared/models/menu-item-model';\r\nimport { User } from 'src/app/shared/models/user-model';\r\nimport { Defines } from 'src/app/shared/static/defines';\r\nimport { OrderModule } from 'ngx-order-pipe';\r\n\r\n\r\n@Component({\r\n  selector: 'ndp-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.css']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n  items: MenuItemModel[];\r\n  user: User;\r\n  //sorting\r\n  key: string = 'label';\r\n  reverse: boolean = false;\r\n  sort(key) {\r\n    this.key = key;\r\n    this.reverse = !this.reverse;\r\n  }\r\n  constructor() { }\r\n  display: boolean = true;\r\n  ngOnInit() {\r\n    //debugger;\r\n    this.user = JSON.parse(localStorage.getItem(Defines.SESSION_KEYS.userModel));\r\n    this.items = this.user.menuItemModels;\r\n    console.log(\"this is item menus => \", this.items);\r\n  }\r\n\r\n  toggleSidebar() {\r\n    if (this.display == true) {\r\n      this.display = false;\r\n    } else {\r\n      this.display = true;\r\n    }\r\n  }\r\n\r\n  checkUserCanAddCampaign() {\r\n    let found = false;\r\n    this.user.privilegeList.forEach(p => {\r\n      if (p.privilegeId === 16) {\r\n        found = true;\r\n      }\r\n    });\r\n    return found;\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dyb3VwL2FkZC1lZGl0LWdyb3VwL2FkZC1lZGl0LWdyb3VwLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"page-content groups-details\\\">\\r\\n  <div class=\\\"groups\\\">\\r\\n    <div class=\\\"section\\\">\\r\\n      <form [formGroup]=\\\"profileForm\\\" (ngSubmit)=\\\"save()\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div *ngIf=\\\"!isCreate\\\" class=\\\"col-12 text-left section-title\\\">\\r\\n            Edit Group\\r\\n          </div>\\r\\n          <div *ngIf=\\\"isCreate\\\" class=\\\"col-12 text-left section-title\\\">\\r\\n            Create Group\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row \\\">\\r\\n          <div class=\\\"col-4\\\">\\r\\n            <div *ngIf=\\\"group\\\" class=\\\"form-input\\\">\\r\\n              <label class=\\\"form-input-label\\\">Group Name</label>\\r\\n              <input nfSpecialCharacters   type=\\\"text\\\" pInputText formControlName=\\\"groupName\\\" [(ngModel)]=\\\"group.groupName\\\" />\\r\\n              <div class=\\\"invalid-text\\\" *ngIf=\\\"!profileForm.required && !!profileForm.nfSpecialCharacters\\\" >Field Must be valid</div>\\r\\n            <div *ngIf=\\\"!!pfc.groupName.errors && (!!pfc.groupName.touched || !!pfc.groupName.dirty || !!pfc.groupName.value)\\\">\\r\\n              <div *ngIf=\\\"!!pfc.groupName.errors.required\\\" class=\\\"invalid-text\\\">Group name is required</div>     \\r\\n              <div *ngIf=\\\"!!pfc.groupName.errors.maxlength\\\" class=\\\"invalid-text\\\">Group name must not exceed 25\\r\\n                characters</div>\\r\\n                <div class=\\\"invalid-text\\\" *ngIf=\\\"!profileForm.controls.groupName.errors.required && !!profileForm.controls.groupName.errors.nfSpecialCharacters\\\" >Group Name Must be valid</div>\\r\\n            </div>\\r\\n            \\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row \\\">\\r\\n          <div class=\\\"col-12 title-medium title gutter-top\\\">\\r\\n            Select one format of CSV files\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row \\\">\\r\\n          <div *ngFor=\\\"let fileType of fileTypes\\\" class=\\\"col-4\\\">\\r\\n            <div class=\\\"col-10\\\">\\r\\n              <a (click)=\\\"activeFileType(fileType.id)\\\"  class=\\\"caption pointer\\\">\\r\\n                <div *ngIf=\\\"!fileType.isActive\\\" class=\\\"caption-media\\\">\\r\\n                  <span class=\\\"icon-paper icon-lg icon-gray\\\"></span>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"fileType.isActive\\\" class=\\\"caption-media\\\">\\r\\n                  <div>\\r\\n                    <span class=\\\"icon-paper icon-lg icon-green\\\">\\r\\n                      <div class=\\\"position-relative\\\">\\r\\n                        <span class=\\\"icon-checked checked-mark\\\"></span>\\r\\n                      </div>\\r\\n                    </span>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"caption-text caption-text-gutter title-small-muted\\\">\\r\\n                  <div class=\\\"title-small title-robotomedium\\\">\\r\\n                    {{fileType.label}}\\r\\n                  </div>\\r\\n                  <div class=\\\"title-xsmall title-gray\\\">\\r\\n                    {{fileType.description}}\\r\\n                  </div>\\r\\n                </div>\\r\\n              </a>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"fileType.isActive\\\" class=\\\"col-2\\\">\\r\\n              <a (click)=\\\"downloudSample()\\\" class=\\\"pi pi-cloud-download pointer\\\" style=\\\"font-size: 3em\\\"></a>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <file-drop dropZoneLabel=\\\"Drop File to upload\\\" dropZoneClassName=\\\"file-drop-zone\\\"\\r\\n          contentClassName=\\\"file-drop-content\\\" (onFileDrop)=\\\"dropped($event)\\\" (onFileOver)=\\\"fileOver($event)\\\"\\r\\n          (onFileLeave)=\\\"fileLeave($event)\\\" [showBrowseBtn]=\\\"true\\\" browseBtnClassName=\\\"button button-green ml-2\\\"\\r\\n          browseBtnLabel=\\\"Browse\\\">\\r\\n        </file-drop>\\r\\n        <div *ngIf=\\\"fileUploaded\\\" class=\\\"row \\\">\\r\\n          <div class=\\\"col-12 text-center my-auto p-2\\\">\\r\\n            <b>{{ fileUploaded.relativePath }}</b><span (click)=\\\"clearUploadedFile()\\\"\\r\\n              class=\\\"fas fa-times pointer ml-4\\\"></span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row mt-5 pt-3 pb-2\\\">\\r\\n          <div class=\\\"col-12 justify-content-center text-right\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"button button-green mr-2 \\\">\\r\\n              Save Group\\r\\n            </button>\\r\\n            <button (click)=\\\"cancel()\\\" class=\\\"button button-black mr-2\\\">\\r\\n              Cancel\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, Input, Inject } from '@angular/core';\r\nimport { GroupModel } from 'src/app/shared/models/group-model';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { GroupService } from '../group.service';\r\nimport { UploadEvent, UploadFile, FileSystemFileEntry, FileSystemDirectoryEntry } from 'ngx-file-drop';\r\nimport { NdpMessageService } from 'src/app/shared/services/ndp-message.service';\r\nimport { FileModel } from 'src/app/shared/models/file-model';\r\nimport { Location } from '@angular/common';\r\nimport { FileTypeModel } from 'src/app/shared/models/file-type-model';\r\nimport { Defines } from 'src/app/shared/static/defines';\r\nimport { LookupsService } from 'src/app/shared/services/lookups.service';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { AngularCsv } from 'angular7-csv/dist/Angular-csv';\r\nimport { User } from 'src/app/shared/models/user-model';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Base64 } from 'js-base64';\r\n@Component({\r\n  selector: 'ndp-add-edit-group',\r\n  templateUrl: './add-edit-group.component.html',\r\n  styleUrls: ['./add-edit-group.component.css']\r\n})\r\n\r\nexport class AddEditGroupComponent implements OnInit {\r\n  public user: User;\r\n  public group: GroupModel;\r\n  public fileModel: FileModel = new FileModel;\r\n  public files: UploadFile[] = [];\r\n  public updateResponse: number;\r\n  public fileUploaded: UploadFile;\r\n  public fileTypes: FileTypeModel[] = [];\r\n  public selectedFileType: number;\r\n  public isCreate: boolean = true;\r\n  public csvOptions = {\r\n    fieldSeparator: ',',\r\n    quoteStrings: '',\r\n    decimalseparator: '.',\r\n    showLabels: false,\r\n    showTitle: false,\r\n    useBom: true,\r\n    noDownload: false,\r\n  };\r\n\r\n  submitted = false;\r\n  profileForm = new FormGroup({\r\n    groupName: new FormControl('', [Validators.required,Validators.maxLength(25)])\r\n  });\r\n\r\n  get pfc() { return this.profileForm.controls; }\r\n  public sample0: any = [\r\n    { number: '01112345679' },\r\n    { number: '01112345678' },\r\n    { number: '01112345677' },\r\n    { number: '01112345676' },\r\n    { number: '01112345675' }\r\n  ];\r\n  public sample1: any = [\r\n    { number: '01112345679', name: 'Ahmed' },\r\n    { number: '01112345678', name: 'Asmaa' },\r\n    { number: '01112345677', name: 'Yasmine' },\r\n    { number: '01112345676', name: 'Hossam' },\r\n    { number: '01112345675', name: 'Alaa' }\r\n  ];\r\n  public sample2: any = [\r\n    { number: '01112345679', name: 'Name=Ahmed', prize: 'Prize=100' },\r\n    { number: '01112345678', name: 'Name=Asmaa', prize: 'Prize=200' },\r\n    { number: '01112345677', name: 'Name=Yasmine', prize: 'Prize=300' },\r\n    { number: '01112345676', name: 'Name=Hossam', prize: 'Prize=400' },\r\n    { number: '01112345675', name: 'Name=Alaa', prize: 'Prize=500' }\r\n  ];\r\n\r\n\r\n  constructor(private route: ActivatedRoute, private routeLink: Router,\r\n    private groupService: GroupService,\r\n    private lookupsService: LookupsService,\r\n    private messageService: NdpMessageService,\r\n    private location: Location) { }\r\n\r\n  ngOnInit() {\r\n    this.user = JSON.parse(localStorage.getItem(Defines.SESSION_KEYS.userModel));\r\n    if (this.route.snapshot.routeConfig.path == \"groups/get/:id\") {\r\n      const id = +this.route.snapshot.paramMap.get('id');\r\n      this.getGroup(id);\r\n      this.isCreate = false;\r\n    } else {\r\n      this.group = new GroupModel;\r\n    }\r\n    this.loadFileTypes();\r\n  }\r\n\r\n  activeFileType(id: number) {\r\n    let isEditWithSameFileType: Boolean = false;\r\n    if (!this.isCreate) {\r\n      if (this.group.fileType === id) {\r\n        isEditWithSameFileType = true;\r\n      }\r\n    }\r\n    if (this.isCreate || isEditWithSameFileType) {\r\n\r\n      this.fileTypes.forEach(fileType => {\r\n        if (fileType.id === id) {\r\n          fileType.isActive = true;\r\n          this.fileModel.fileType = fileType.id;\r\n        } else {\r\n          fileType.isActive = false;\r\n        }\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  loadFileTypes() {\r\n    this.lookupsService.getfileTypes()\r\n      .then((data: any) => this.setFileTypes(data.responsePayload));\r\n  }\r\n\r\n  setFileTypes(fileTypes: FileTypeModel[]) {\r\n    this.fileTypes = fileTypes;\r\n    this.activeFileType(0);\r\n  }\r\n\r\n  getGroup(id: number): void {\r\n    this.groupService.get(id)\r\n      .subscribe(response => {\r\n        this.group = response.responsePayload;\r\n        this.activeFileType(this.group.fileType);\r\n      });\r\n  }\r\n\r\n  public fileOver(event) {\r\n    console.log(event);\r\n  }\r\n\r\n  public fileLeave(event) {\r\n    console.log(event);\r\n  }\r\n\r\n  public dropped(event: UploadEvent) {\r\n    this.fileUploaded = event.files[0];\r\n    if (event.files.length == 1) {\r\n      if (this.fileUploaded.fileEntry.isFile) {\r\n        if (!this.fileUploaded.relativePath.includes(\".csv\", 0)) {\r\n          this.messageService.addWarnings([\"Please Upload csv File!\"]);\r\n          this.fileUploaded = null;\r\n          return;\r\n        }\r\n        const fileEntry = this.fileUploaded.fileEntry as FileSystemFileEntry;\r\n        fileEntry.file((file: File) => {\r\n          if (file.size > 20 * 1024 * 1024) {\r\n            this.messageService.addWarnings([\"The file size should be <= 2 MB!\"]);\r\n            this.fileUploaded = null;\r\n            return;\r\n          }\r\n          this.fileModel.fileName = file.name;\r\n          let reader = this.createFileReader(file);\r\n          reader.readAsText(file);\r\n        });\r\n      } else {\r\n        const fileEntry = this.fileUploaded.fileEntry as FileSystemDirectoryEntry;\r\n      }\r\n    } else if (this.files.length > 1) {\r\n      this.messageService.addWarnings([\"Please Upload One File!\"]);\r\n    }\r\n  }\r\n\r\n  createFileReader(file): FileReader {\r\n    let text: string | ArrayBuffer;\r\n    let reader = new FileReader();\r\n    reader.onloadend = (() => {\r\n      text = reader.result;\r\n      let line: string;\r\n      if (text.toString().indexOf('\\n') > 1) {\r\n        line = text.toString().substr(0, text.toString().indexOf('\\n'));\r\n      } else {\r\n        line = text.toString();\r\n      }\r\n      if (text.toString().trim() === '') {\r\n        this.messageService.addWarnings([\"File is empty!\"]);\r\n        this.fileUploaded = null;\r\n        return null;\r\n      } else if (!this.checkForFileType(line)) {\r\n        this.messageService.addWarnings([\"Uplouded File is not matched with selected type!\"]);\r\n        this.fileUploaded = null;\r\n        return null;\r\n      }\r\n      let base64String = Base64.encode(text.toString());\r\n      this.fileModel.b64String = base64String;\r\n      this.messageService.addInfo(\"File uploaded successfully!\");\r\n    })\r\n    return reader;\r\n  }\r\n\r\n  downloudSample() {\r\n    this.fileTypes.forEach(fileType => {\r\n      if (fileType.isActive === true) {\r\n        if (fileType.id === 0) new AngularCsv(this.sample0, \"Sample\", this.csvOptions);\r\n        else if (fileType.id === 1) new AngularCsv(this.sample1, \"Sample\", this.csvOptions);\r\n        else new AngularCsv(this.sample2, \"Sample\", this.csvOptions);\r\n      }\r\n    });\r\n  }\r\n\r\n  save(): void {\r\n    this.submitted = true;\r\n    if (this.profileForm.valid) {\r\n      if (this.fileUploaded !== undefined) {\r\n        this.group.fileRequestModel = this.fileModel;\r\n        if (!this.isCreate) {\r\n          this.updateGroup();\r\n        } else {\r\n          this.createGroup();\r\n        }\r\n      } else {\r\n        this.messageService.addError('File is mandatory!', '');\r\n      }\r\n    }\r\n  }\r\n\r\n  createGroup(): void {\r\n    this.group.createdBy = this.user.id;\r\n    this.group.ownerEntity = this.user.entityId;\r\n    this.group.groupStatus = 1;\r\n    this.group.dialsCount = 0;\r\n    this.groupService.create(this.group)\r\n      .subscribe(response => {\r\n        console.log(response.responsePayload);\r\n        if (response.status === 0) {\r\n          this.routeLink.navigateByUrl('groups');\r\n        }\r\n      });\r\n  }\r\n\r\n  updateGroup(): void {\r\n    this.group.groupStatus = 1;\r\n    this.groupService.update(this.group)\r\n      .subscribe(response => {\r\n        console.log(response.responsePayload);\r\n        if (response.status === 0) {\r\n          this.routeLink.navigateByUrl('groups');\r\n        }\r\n      });\r\n  }\r\n\r\n  cancel() {\r\n    this.routeLink.navigateByUrl(\"groups\");\r\n  }\r\n\r\n  clearUploadedFile() {\r\n    this.fileUploaded = undefined;\r\n  }\r\n\r\n  checkForFileType(line: string): boolean {\r\n    console.log(\"line\", line);\r\n    console.log(\"selected file type\", this.fileModel.fileType);\r\n    let numberOfComma: number = line.split(\",\").length - 1;\r\n    console.log(\"numberOfComma \", numberOfComma);\r\n    if (this.fileModel.fileType === 0 && numberOfComma === 0) {\r\n      return true;\r\n    } else if (this.fileModel.fileType === 1 && numberOfComma === 1) {\r\n      return true;\r\n    } else if (this.fileModel.fileType === 2 && numberOfComma >= 2) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dyb3VwL2dyb3VwLWxpc3QvZ3JvdXAtbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div (click)=\\\"hideDropDown()\\\" class=\\\"page-content\\\">\\r\\n  <div class=\\\"groups\\\">\\r\\n    <div class=\\\"row no-gutters\\\">\\r\\n      <div class=\\\"p-col-5\\\">\\r\\n        <div class=\\\"page-title\\\">\\r\\n          Groups Of Dials\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"p-col-7 col-lg-12 text-right\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"p-col-8\\\">\\r\\n            <div class=\\\"search-input\\\">\\r\\n              <input [(ngModel)]=\\\"filter\\\" type=\\\"text\\\" class=\\\"\\\" placeholder=\\\"Search By Group Name\\\">\\r\\n              <i class=\\\"icon-search icon\\\"></i>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"p-col-4\\\">\\r\\n            <button type=\\\"button\\\" ndpAuthorize [targetUrl]=\\\"authorizationUrl+ defines.CREATE\\\"\\r\\n              (successHandler)=\\\"create()\\\" label=\\\"Create Group\\\" class=\\\"button button-green\\\">Create Group</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"groups\\\">\\r\\n      <div *ngIf=\\\"setFilteredGroups(groups | groupNameFilter: filter)\\\"></div>\\r\\n      <div class=\\\"campaigns-list\\\"\\r\\n        *ngFor=\\\"let group of filteredGroups | paginate: { itemsPerPage: perPage, currentPage: p }\\\">\\r\\n\\r\\n        <div class=\\\"row confirmDialog animated fadeIn faster text-center\\\"\\r\\n          *ngIf=\\\"deleteConfirm && (deleteConfirmId == group.groupId)\\\">\\r\\n          <div class=\\\"col-12\\\">Are you sure you want to delete <b>{{selectedGroup.groupName}}</b> group?</div>\\r\\n          <div class=\\\"col-12 mt-2\\\">\\r\\n            <button class=\\\"button button-green mr-4\\\" (click)=\\\"onConfirm()\\\">DELETE</button>\\r\\n            <button class=\\\"button button-black \\\" (click)=\\\"onReject()\\\">CANCEL</button>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"(selectedGroup === group)\\\" [ngClass]=\\\"{'hide':!dropDown}\\\" class=\\\"dropdown animated flipInX faster\\\">\\r\\n          <ul class=\\\"list\\\">\\r\\n            <li ndpAuthorize [targetUrl]=\\\"authorizationUrl+ defines.UPDATE\\\" [targetId]=\\\"group.groupId\\\"\\r\\n              (successHandler)=\\\"update($event)\\\"><span class=\\\"fas fa-edit\\\"></span>Edit</li>\\r\\n\\r\\n            <li ndpAuthorize [targetUrl]=\\\"authorizationUrl+ defines.FAILED_DIALS\\\" [targetId]=\\\"group.groupId\\\"\\r\\n              (successHandler)=\\\"downloadFailedCSV(group)\\\"><span class=\\\"icon-arrow-right\\\"></span>Failed\\r\\n              Dials</li>\\r\\n            <li ndpAuthorize [targetUrl]=\\\"authorizationUrl+ defines.DELETE\\\" [targetId]=\\\"group.groupId\\\"\\r\\n              (successHandler)=\\\"showConfirm()\\\"><span class=\\\"fas fa-trash\\\"></span>Delete\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n        <div class=\\\"row campaigns-item no-gutters my-auto\\\">\\r\\n          <div class=\\\"col-4 my-auto\\\">\\r\\n            <span class=\\\"fas fa-user-friends color-gray title-small mr-3\\\"\\r\\n              style=\\\"font-size: 18px; margin-top: 10px; margin-bottom: 10px;\\\"></span>\\r\\n            <span class=\\\"heading-6 title-robotomedium\\\">{{group.groupName}}</span>\\r\\n          </div>\\r\\n          <div class=\\\"col-2 my-auto\\\">\\r\\n            <div *ngIf=\\\"group.dialsCount !== null && group.dialsCount > 0\\\" class=\\\"col-12 my-auto\\\">\\r\\n              <span class=\\\"mr-2\\\" style=\\\"font-size:14px; font-weight:600;\\\">{{group.dialsCount}}</span>\\r\\n              <span class=\\\"fas fa-phone color-green\\\" style=\\\"font-size: 14px;\\\"></span>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"group.dialsCount === null || group.dialsCount === 0\\\" class=\\\"col-12 my-auto\\\">\\r\\n              <span class=\\\"mr-2\\\" style=\\\"font-size:14px; font-weight:600; color: #cc0000\\\">NO DIALS</span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-2 my-auto\\\">\\r\\n            <button *ngIf=\\\"group.dialsCount !== null || group.dialsCount > 0\\\" type=\\\"button\\\" label=\\\"Export Dials\\\"\\r\\n              class=\\\"button button-green\\\" ndpAuthorize [targetUrl]=\\\"authorizationUrl+ defines.LIST_DIALS\\\"\\r\\n              [targetId]=\\\"group.groupId\\\" (successHandler)=\\\"downloadCSV(group)\\\"><span\\r\\n                class=\\\"icon-arrow-right mr-2\\\"></span>Export\\r\\n              Dials</button>\\r\\n          </div>\\r\\n          <div class=\\\"p-col-2 my-auto\\\">\\r\\n            <button ndpAuthorize [targetUrl]=\\\"authorizationUrl+ defines.SEARCH_DIALS\\\" [targetId]=\\\"group.groupId\\\"\\r\\n              (successHandler)=\\\"sidenavOpened(group)\\\" type=\\\"button\\\" label=\\\"Export Dials\\\"\\r\\n              class=\\\"button button-green\\\"><span class=\\\"fas fa-search mr-2\\\"></span>Search for Dial</button>\\r\\n          </div>\\r\\n          <div class=\\\"col-1 my-auto text-right\\\">\\r\\n            <a (click)=\\\"dropDownOpen(group)\\\" class=\\\"campaigns-item-actions-link\\\">\\r\\n              <i class=\\\"icon-dropdown-dots icon icon-lg icon-gray\\\"></i>\\r\\n            </a>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"filteredGroups.length == 0\\\">\\r\\n    <div class=\\\"row mt-4 animated fadeIn fast\\\">\\r\\n      <div class=\\\"col-12 mt-4 text-center\\\">\\r\\n        <div class=\\\"col-12 mt-4 fas fa-user-slash fa-7x faded-grey\\\"></div>\\r\\n        <div class=\\\"col-12 mt-4 page-title faded-grey\\\"><b>No Groups Found</b></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"groups\\\" class=\\\"ngx-pagination\\\">\\r\\n    <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<p-sidebar [showCloseIcon]=\\\"false\\\" [(visible)]=\\\"visibleSidebar\\\" [blockScroll]=\\\"true\\\" position=\\\"right\\\"\\r\\n  [style]=\\\"{padding:0}\\\" (onHide)=\\\"sidenavClosed()\\\">\\r\\n  <div class=\\\"container\\\" *ngIf=\\\"selectedGroup\\\">\\r\\n    <div class=\\\"row p-3\\\">\\r\\n      <div class=\\\"page-title mb-2\\\">\\r\\n        {{selectedGroup.groupName}}\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row p-3\\\">\\r\\n      <div class=\\\"search-input\\\">\\r\\n        <input [(ngModel)]=\\\"msisdnSearch\\\" (change)=\\\"searchDials()\\\" type=\\\"text\\\" class=\\\"\\\"\\r\\n          placeholder=\\\"Start typing to retrieve dials\\\">\\r\\n        <a (click)=\\\"searchDials()\\\" class=\\\"icon-search icon\\\"></a>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row animated fadeIn faster\\\">\\r\\n      <div class=\\\"col-12\\\" *ngIf=\\\"groupMsisdnList\\\">\\r\\n        <div\\r\\n          *ngFor=\\\"let groupMsisdn of groupMsisdnList | paginate: { itemsPerPage: perDialsPage, currentPage: dialsPage }\\\"\\r\\n          class=\\\"title-medium\\\">\\r\\n\\r\\n          <div class=\\\"row no-gutters p-1 pl-2 pointer\\\" [ngClass]=\\\"{ 'highlighted' : groupMsisdn.msisdn === expandedMsisdn && showExtenedMsisdn,\\r\\n          'highlighter': !(groupMsisdn.msisdn === expandedMsisdn && showExtenedMsisdn)}\\\">\\r\\n            <div class=\\\"col-10 p-1 my-auto\\\" style=\\\"font-size: 14px;\\\">{{groupMsisdn.msisdn}}</div>\\r\\n            <div class=\\\"col-2 p-1 text-right my-auto\\\">\\r\\n              <a class=\\\"icon-delete\\\" (click)=\\\"openExpandMsisdn(groupMsisdn.msisdn)\\\"></a>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"groupMsisdn.msisdn === expandedMsisdn && showExtenedMsisdn\\\"\\r\\n            [ngClass]=\\\"{ 'highlighted' : groupMsisdn.msisdn === expandedMsisdn && showExtenedMsisdn}\\\">\\r\\n            <div class=\\\"  row pl-4 pr-1\\\">\\r\\n              <div style=\\\"font-size:12px;\\\">\\r\\n                Delete this record?\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row mb-2 pl-2 pr-1 pb-2\\\">\\r\\n              <div class=\\\"col-12\\\">\\r\\n                <a (click)=\\\"deleteMsisdn()\\\" class=\\\"button button-green mr-2\\\" style=\\\"font-size: 12px; padding: 3px 10px;\\r\\n                border-radius: 15px !important;\\\">Yes</a>\\r\\n                <a (click)=\\\"cancelDeleteMsisdn()\\\" class=\\\"button button-grey\\\" style=\\\"font-size: 12px; padding: 3px 10px;\\r\\n                border-radius: 15px !important; color:#fff\\\">No</a>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <div *ngIf=\\\"groupMsisdnList\\\" class=\\\"ngx-pagination\\\">\\r\\n        <pagination-controls directionLinks=\\\"false\\\" autoHide=\\\"true\\\" (pageChange)=\\\"dialsPage = $event\\\">\\r\\n        </pagination-controls>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</p-sidebar>\"","import { Component, OnInit, Pipe, PipeTransform } from '@angular/core';\r\nimport { GroupService } from '../group.service';\r\nimport { GroupModel } from 'src/app/shared/models/group-model';\r\nimport { NdpMessageService } from 'src/app/shared/services/ndp-message.service';\r\nimport { Router } from '@angular/router';\r\nimport { MessageService } from 'primeng/api';\r\nimport { GroupMsisdnModel } from 'src/app/shared/models/group-msisdn-model';\r\nimport { AngularCsv } from 'angular7-csv/dist/Angular-csv'\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { ExportedDialModel } from 'src/app/shared/models/export-dials-model';\r\nimport { Defines } from 'src/app/shared/static/defines';\r\nimport { User } from 'src/app/shared/models/user-model';\r\n\r\n@Component({\r\n  selector: 'ndp-group-list',\r\n  templateUrl: './group-list.component.html',\r\n  styleUrls: ['./group-list.component.css'],\r\n  providers: [MessageService]\r\n})\r\n\r\nexport class GroupListComponent implements OnInit {\r\n  groups: GroupModel[];\r\n  filteredGroups: GroupModel[];\r\n\r\n  selectedGroup: GroupModel;\r\n  dropDown: boolean;\r\n  dropDownClick: number;\r\n  dropDownId: number;\r\n  p: number = 1;\r\n  perPage: number = 10;\r\n\r\n  dialsPage: number = 1;\r\n  perDialsPage: number = 10;\r\n\r\n  filter: string;\r\n  visibleSidebar: boolean = false;\r\n\r\n  msisdnSearch: string;\r\n  showExtenedMsisdn: boolean;\r\n  expandedMsisdn: string;\r\n  groupMsisdnList: GroupMsisdnModel[];\r\n\r\n  exportedList: ExportedDialModel[];\r\n  csvOptions = {\r\n    fieldSeparator: ',',\r\n    quoteStrings: '',\r\n    decimalseparator: '.',\r\n    showLabels: false,\r\n    showTitle: false,\r\n    useBom: true,\r\n    noDownload: false,\r\n  };\r\n  csvFailedOptions = {\r\n    fieldSeparator: '',\r\n    quoteStrings: '',\r\n    decimalseparator: '.',\r\n    showLabels: false,\r\n    showTitle: false,\r\n    useBom: true,\r\n    noDownload: false,\r\n  };\r\n  deleteConfirm = false;\r\n  deleteConfirmId: number;\r\n  //Authorization Vars\r\n  authorizationUrl: string;\r\n  defines = Defines.API_CRUD;\r\n  //Access Levels attributes\r\n  user: User;\r\n  listAccessLevel: number = 0;\r\n  editAccessLevel: number = 0;\r\n  deleteAccessLevel: number = 0;\r\n  deleteDialsAccessLevel: number = 0;\r\n  exportDialsAccessLevel: number = 0;\r\n  canCreate: boolean;\r\n\r\n  constructor(private groupService: GroupService, private ndpMessageService: NdpMessageService,\r\n    private router: Router, private messageService: MessageService) { }\r\n\r\n  ngOnInit() {\r\n    console.log(\"this.authorizationUrl = this.groupService.authorizationUrl => \", this.groupService.authorizationUrl);\r\n    this.authorizationUrl = this.groupService.authorizationUrl;\r\n    this.setAccessLevel();\r\n    this.listGroup();\r\n\r\n  }\r\n\r\n  setAccessLevel() {\r\n    this.user = JSON.parse(localStorage.getItem(Defines.SESSION_KEYS.userModel));\r\n    this.user.privilegeList.forEach(rolePrivilege => {\r\n      switch (rolePrivilege.privilegeId) {\r\n        case Defines.PRIVILEGES.GROUP.EDIT: {\r\n          this.editAccessLevel = rolePrivilege.accessLevel;\r\n          break;\r\n        } case Defines.PRIVILEGES.GROUP.LIST: {\r\n          this.listAccessLevel = rolePrivilege.accessLevel;\r\n          break;\r\n        } case Defines.PRIVILEGES.GROUP.DELETE: {\r\n          this.deleteAccessLevel = rolePrivilege.accessLevel;\r\n          break;\r\n        } case Defines.PRIVILEGES.GROUP.CREATE: {\r\n          this.canCreate = true;\r\n          break;\r\n        } case Defines.PRIVILEGES.GROUP.DELETE_DIALS: {\r\n          this.deleteDialsAccessLevel = rolePrivilege.accessLevel;\r\n          break;\r\n        } case Defines.PRIVILEGES.GROUP.EXPORT_DIALS: {\r\n          this.exportDialsAccessLevel = rolePrivilege.accessLevel;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    )\r\n  }\r\n\r\n  listGroup(): void {\r\n    this.groupService.listGroupPromise().then((data: any) => {\r\n      this.groups = new Array<GroupModel>();\r\n      this.groups = data.responsePayload;\r\n\r\n      this.groups.forEach(group => {\r\n        if (group.createdBy === this.user.id) {\r\n          if (this.editAccessLevel >= Defines.ACCESS_LEVELS.OWN) {\r\n            group.canEdit = true;\r\n          }\r\n          if (this.deleteAccessLevel >= Defines.ACCESS_LEVELS.OWN) {\r\n            group.canDelete = true;\r\n          }\r\n          if (this.listAccessLevel >= Defines.ACCESS_LEVELS.OWN) {\r\n            group.canView = true;\r\n          } if (this.deleteDialsAccessLevel >= Defines.ACCESS_LEVELS.OWN) {\r\n            group.canDeleteDials = true;\r\n          }\r\n          if (this.exportDialsAccessLevel >= Defines.ACCESS_LEVELS.OWN) {\r\n            group.canExport = true;\r\n          }\r\n        } else if (group.ownerEntity === this.user.entityId) {\r\n          if (this.editAccessLevel >= Defines.ACCESS_LEVELS.ENTITY) {\r\n            group.canEdit = true;\r\n          }\r\n          if (this.deleteAccessLevel >= Defines.ACCESS_LEVELS.ENTITY) {\r\n            group.canDelete = true;\r\n          }\r\n          if (this.listAccessLevel >= Defines.ACCESS_LEVELS.ENTITY) {\r\n            group.canView = true;\r\n          } if (this.deleteDialsAccessLevel >= Defines.ACCESS_LEVELS.ENTITY) {\r\n            group.canDeleteDials = true;\r\n          }\r\n          if (this.exportDialsAccessLevel >= Defines.ACCESS_LEVELS.ENTITY) {\r\n            group.canExport = true;\r\n          }\r\n        } else {\r\n          if (this.editAccessLevel >= Defines.ACCESS_LEVELS.EVERYTHING) {\r\n            group.canEdit = true;\r\n          }\r\n          if (this.deleteAccessLevel >= Defines.ACCESS_LEVELS.EVERYTHING) {\r\n            group.canDelete = true;\r\n          }\r\n          if (this.listAccessLevel >= Defines.ACCESS_LEVELS.EVERYTHING) {\r\n            group.canView = true;\r\n          } if (this.deleteDialsAccessLevel >= Defines.ACCESS_LEVELS.EVERYTHING) {\r\n            group.canDeleteDials = true;\r\n          }\r\n          if (this.exportDialsAccessLevel >= Defines.ACCESS_LEVELS.EVERYTHING) {\r\n            group.canExport = true;\r\n          }\r\n        }\r\n      });\r\n\r\n      this.filteredGroups = this.groups;\r\n    }\r\n    );\r\n  }\r\n\r\n  deleteGroup(): void {\r\n    const index = this.groups.findIndex(group => this.selectedGroup.groupId === group.groupId);\r\n    const groupToDelete = this.groups[index];\r\n    this.groupService.delete(this.selectedGroup.groupId).subscribe(resp => {\r\n      if (resp.status === 0) {\r\n        this.groups = this.groups.filter(x => x.groupId !== groupToDelete.groupId);\r\n      }\r\n    });\r\n    this.dropDownClose();\r\n  }\r\n\r\n  showConfirm(event) {\r\n    debugger;\r\n    this.deleteConfirm = true;\r\n    this.deleteConfirmId = this.selectedGroup.groupId;\r\n    event.stopPropagation();\r\n  }\r\n\r\n  onConfirm() {\r\n    this.deleteConfirm = false;\r\n    this.deleteConfirmId = null;\r\n    this.deleteGroup();\r\n    this.dropDownClose();\r\n  }\r\n\r\n  onReject() {\r\n    this.deleteConfirm = false;\r\n    this.deleteConfirmId = null;\r\n    this.dropDownClose();\r\n  }\r\n\r\n  dropDownOpen(group: GroupModel) {\r\n    console.log('opening', group);\r\n    this.selectedGroup = group;\r\n    this.dropDownId = group.groupId;\r\n    this.dropDownClick = 0;\r\n    this.dropDown = true;\r\n  }\r\n\r\n  dropDownClose() {\r\n    this.selectedGroup = null;\r\n    this.dropDown = false;\r\n  }\r\n\r\n  hideDropDown() {\r\n    this.dropDownClick++;\r\n    if (this.dropDown && this.dropDownClick > 1) {\r\n      this.dropDown = false;\r\n      this.dropDownId = null;\r\n    }\r\n  }\r\n\r\n  update(event) {\r\n    console.log(\"Anahooo\");\r\n    this.router.navigateByUrl('/groups/get/' + this.selectedGroup.groupId);\r\n    event.stopPropagation();\r\n  }\r\n\r\n  create() {\r\n    this.router.navigateByUrl('/groups/create');\r\n  }\r\n\r\n\r\n  sidenavOpened(group: GroupModel) {\r\n    this.selectedGroup = group;\r\n    this.visibleSidebar = true;\r\n  }\r\n\r\n  sidenavClosed() {\r\n    this.selectedGroup = null;\r\n    this.visibleSidebar = false;\r\n    this.groupMsisdnList = null;\r\n    this.msisdnSearch = null;\r\n  }\r\n\r\n  searchDials() {\r\n    let requestModel: GroupMsisdnModel = new GroupMsisdnModel();\r\n    requestModel.groupId = this.selectedGroup.groupId;\r\n    requestModel.msisdn = this.msisdnSearch;\r\n    this.groupService.searchDials(requestModel).subscribe(response => this.groupMsisdnList = response.responsePayload);\r\n  }\r\n\r\n  openExpandMsisdn(expandedMsisdn: string) {\r\n    this.expandedMsisdn = expandedMsisdn;\r\n    this.showExtenedMsisdn = true;\r\n  }\r\n\r\n  cancelDeleteMsisdn() {\r\n    this.expandedMsisdn = null;\r\n    this.showExtenedMsisdn = false;\r\n  }\r\n\r\n  deleteMsisdn() {\r\n    let requestModel: GroupMsisdnModel = new GroupMsisdnModel();\r\n    requestModel.groupId = this.selectedGroup.groupId;\r\n    requestModel.msisdn = this.expandedMsisdn;\r\n    this.groupService.deleteDial(requestModel).subscribe();\r\n    let index;\r\n    debugger;\r\n    for (let entry of this.groupMsisdnList) {\r\n      if (entry.msisdn === this.expandedMsisdn) {\r\n        index = this.groupMsisdnList.indexOf(entry);\r\n      }\r\n    }\r\n\r\n    if (index != -1) {\r\n      this.groupMsisdnList.splice(index, 1);\r\n    }\r\n    this.showExtenedMsisdn = false;\r\n  }\r\n\r\n  downloadCSV(group: GroupModel) {\r\n    this.groupService.getAllDials(group.groupId).then((data: any) =>\r\n      this.downloud(group, data.responsePayload));\r\n  }\r\n\r\n  downloadFailedCSV(group: GroupModel) {\r\n    this.groupService.getAllFailedDials(group.groupId).then((data: any) => this.downloudFailedDials(group, data.responsePayload));\r\n  }\r\n\r\n  downloud(group: GroupModel, exportedList: ExportedDialModel[]) {\r\n    console.log(\"List is =>\", exportedList);\r\n    if (exportedList != null && exportedList.length != 0) {\r\n      exportedList.forEach(dial => {\r\n        if (dial.parameters === null) {\r\n          delete dial[\"parameters\"];\r\n        }\r\n      })\r\n      new AngularCsv(exportedList, group.groupName, this.csvOptions)\r\n    } else {\r\n      this.ndpMessageService.addWarnings([\"There is no dials to export\"]);\r\n    }\r\n  }\r\n\r\n  downloudFailedDials(group: GroupModel, exportedList: string[]) {\r\n    if (exportedList != null && exportedList.length != 0) {\r\n      console.log(\"exportedList => \", exportedList);\r\n      new AngularCsv(exportedList, group.groupName, this.csvFailedOptions)\r\n    } else {\r\n      // this.ndpMessageService.addWarnings([\"There is no dials to export\"]);\r\n    }\r\n  }\r\n\r\n  setFilteredGroups(filtered: GroupModel[]) {\r\n    this.filteredGroups = filtered;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AddEditGroupComponent } from './add-edit-group/add-edit-group.component';\r\nimport { GroupListComponent } from './group-list/group-list.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatRadioModule } from '@angular/material'\r\nimport { FileDropModule } from 'ngx-file-drop';\r\nimport { TabViewModule } from 'primeng/tabview';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { OrderModule } from 'ngx-order-pipe';\r\nimport { GroupFilterPipe } from '../shared/Pipes/group-filter.pipe';\r\nimport { SidebarModule } from 'primeng/sidebar';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [AddEditGroupComponent, GroupListComponent, GroupFilterPipe],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    FileDropModule,\r\n    TabViewModule,\r\n    MatRadioModule,\r\n    ToastModule,\r\n    NgxPaginationModule,\r\n    OrderModule,\r\n    SidebarModule,\r\n    ButtonModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  exports: [\r\n    AddEditGroupComponent,\r\n    GroupListComponent\r\n  ]\r\n})\r\nexport class GroupModule { }\r\n","import { Injectable, OnInit } from '@angular/core';\r\nimport { BaseService } from '../shared/services/base-service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { ApiResponse } from '../shared/models/api-response';\r\nimport { Defines } from '../shared/static/defines';\r\nimport { ApiRequest } from '../shared/models/api-request';\r\nimport { GroupModel } from '../shared/models/group-model';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { GroupMsisdnModel } from '../shared/models/group-msisdn-model';\r\nimport { ExportedDialModel } from '../shared/models/export-dials-model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class GroupService extends BaseService {\r\n    constructor(private client: HttpClient) {\r\n        super(client);\r\n    }\r\n\r\n    initAuthorizationUrl() {\r\n        this.authorizationUrl += this.secureApi + Defines.API_ENDPOINTS.GROUPS;\r\n        console.log(\"Authorization Url =>\", this.authorizationUrl);\r\n    }\r\n    public create(model: GroupModel): Observable<ApiResponse<number>> {\r\n        let apiUrl = this.backendUrl + this.secureApi +\r\n            Defines.API_ENDPOINTS.GROUPS + Defines.API_CRUD.CREATE;\r\n        console.log(\"model before create is => \", model);\r\n        let obs: Observable<any> = this.http.post<ApiResponse<number>>\r\n            (apiUrl, new ApiRequest(model, \"\"), this.httpOptions).pipe(\r\n                tap(group => console.log('create group: ' + group)),\r\n                catchError(this.handleError<any>('Error'))\r\n            );\r\n        return obs;\r\n    }\r\n\r\n    public update(model: GroupModel): Observable<ApiResponse<number>> {\r\n        let apiUrl = this.backendUrl + this.secureApi +\r\n            Defines.API_ENDPOINTS.GROUPS + Defines.API_CRUD.UPDATE;\r\n        console.log(\"model before update is => \", model);\r\n        let obs: Observable<any> = this.http.post<ApiResponse<number>>\r\n            (apiUrl, new ApiRequest(model, \"\"), this.httpOptions).pipe(\r\n                tap(group => console.log('update group: ' + group)),\r\n                catchError(this.handleError<any>('Error'))\r\n            );\r\n        return obs;\r\n    }\r\n\r\n\r\n    public get(id: number): Observable<ApiResponse<GroupModel>> {\r\n        let apiUrl = this.backendUrl + this.secureApi +\r\n            Defines.API_ENDPOINTS.GROUPS + Defines.API_CRUD.GET;\r\n        let obs: Observable<any> = this.http.post<ApiResponse<GroupModel>>\r\n            (apiUrl, new ApiRequest(id, \"\"), this.httpOptions).pipe(\r\n                tap(group => console.log('get group by id: ' + group)),\r\n                catchError(this.handleError<any>('Error'))\r\n            );\r\n        return obs;\r\n    }\r\n\r\n    public delete(id: number): Observable<ApiResponse<number>> {\r\n        let apiUrl = this.backendUrl + this.secureApi +\r\n            Defines.API_ENDPOINTS.GROUPS + Defines.API_CRUD.DELETE;\r\n        let obs: Observable<any> = this.http.post<ApiResponse<number>>\r\n            (apiUrl, new ApiRequest(id, \"\"), this.httpOptions).pipe(\r\n                tap(group => console.log('delete group by id: ' + group)),\r\n                catchError(this.handleError<any>('Error'))\r\n            );\r\n        return obs;\r\n    }\r\n\r\n    public list(): Observable<ApiResponse<Array<GroupModel>>> {\r\n        let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.GROUPS + Defines.API_CRUD.LIST;\r\n        let obs: Observable<any> = this.http.post<ApiResponse<Array<GroupModel>>>\r\n            (apiUrl, new ApiRequest(null, \"\"), this.httpOptions).pipe(\r\n                tap(list_ => console.log('get List group: ' + list_)),\r\n                catchError(this.handleError<any>('Error'))\r\n            );\r\n        return obs;\r\n    }\r\n\r\n    public listGroupPromise() {\r\n        let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.GROUPS + Defines.API_CRUD.LIST;\r\n        return this.http.post<ApiResponse<Array<GroupModel>>>\r\n            (apiUrl, new ApiRequest(null, \"\"), this.httpOptions).toPromise();\r\n    }\r\n\r\n    public searchDials(model: GroupMsisdnModel): Observable<ApiResponse<Array<GroupMsisdnModel>>> {\r\n        let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.GROUPS\r\n            + Defines.API_CRUD.SEARCH_DIALS;\r\n        let obs: Observable<any> = this.http.post<ApiResponse<Array<GroupMsisdnModel>>>\r\n            (apiUrl, new ApiRequest(model, \"\"), this.httpOptions).pipe(\r\n                tap(list_ => console.log('get List dials: ' + list_)),\r\n                catchError(this.handleError<any>('Error'))\r\n            );\r\n        return obs;\r\n    }\r\n\r\n    public getAllDials(model: number) {\r\n        let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.GROUPS\r\n            + Defines.API_CRUD.LIST_DIALS;\r\n        return this.http.post<ApiResponse<Array<ExportedDialModel>>>\r\n            (apiUrl, new ApiRequest(model, \"\"), this.httpOptions).toPromise();\r\n    }\r\n\r\n    public getAllFailedDials(model: number) {\r\n        let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.GROUPS\r\n            + Defines.API_CRUD.FAILED_DIALS;\r\n        return this.http.post<ApiResponse<Array<string>>>\r\n            (apiUrl, new ApiRequest(model, \"\"), this.httpOptions).toPromise();\r\n    }\r\n\r\n\r\n    public deleteDial(model: GroupMsisdnModel): Observable<ApiResponse<number>> {\r\n        let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.GROUPS\r\n            + Defines.API_CRUD.DELETE_DIALS;\r\n        let obs: Observable<any> = this.http.post<ApiResponse<number>>\r\n            (apiUrl, new ApiRequest(model, \"\"), this.httpOptions).pipe(\r\n                tap(list_ => console.log('delete dial: ' + list_)),\r\n                catchError(this.handleError<any>('Error'))\r\n            );\r\n        return obs;\r\n    }\r\n\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n\r\n            // TODO: send the error to remote logging infrastructure\r\n            console.error(error); // log to console instead\r\n\r\n            // TODO: better job of transforming error for user consumption\r\n            console.log(`${operation} failed: ${error.message}`);\r\n\r\n            // Let the app keep running by returning an empty result.\r\n            return of(result as T);\r\n        };\r\n\r\n    }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS1wYWdlL2hvbWUtcGFnZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"page-content home\\\">\\r\\n    <div class=\\\"campaigns\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-12\\\">\\r\\n                <div class=\\\"page-title\\\">\\r\\n                    System Overview\\r\\n                </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"canListCampaigns()\\\" class=\\\"col-12 mt-4\\\">\\r\\n                <ndp-campaign-stats [refreshInterval]=\\\"15000\\\"></ndp-campaign-stats>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { User } from 'src/app/shared/models/user-model';\r\nimport { Defines } from 'src/app/shared/static/defines';\r\n\r\n@Component({\r\n  selector: 'ndp-home-page',\r\n  templateUrl: './home-page.component.html',\r\n  styleUrls: ['./home-page.component.css']\r\n})\r\nexport class HomePageComponent implements OnInit {\r\n\r\n  user: User;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.user = JSON.parse(localStorage.getItem(Defines.SESSION_KEYS.userModel));\r\n  }\r\n\r\n  canListCampaigns() {\r\n    let found = false;\r\n    this.user.privilegeList.forEach(p => {\r\n      if (p.privilegeId === 17) {\r\n        found = true;\r\n      }\r\n    });\r\n    return found;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HomePageComponent } from './home-page/home-page.component';\r\nimport {DropdownModule} from 'primeng/dropdown';\r\nimport {FormsModule} from '@angular/forms';\r\nimport { CampaignsModule } from 'src/app/campaigns/campaigns.module';\r\n@NgModule({\r\n  declarations: [HomePageComponent],\r\n  imports: [\r\n    CommonModule,\r\n    DropdownModule,\r\n    FormsModule,\r\n    CampaignsModule\r\n  ],\r\n  exports: [HomePageComponent]\r\n})\r\nexport class HomeModule { }\r\n","module.exports = \".invalid-feedback {\\r\\n     display: block;\\r\\n\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vZm9yZ2V0LXBhc3N3b3JkL2ZvcmdldC1wYXNzd29yZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0tBQ0ssY0FBYzs7QUFFbkIiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9mb3JnZXQtcGFzc3dvcmQvZm9yZ2V0LXBhc3N3b3JkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaW52YWxpZC1mZWVkYmFjayB7XHJcbiAgICAgZGlzcGxheTogYmxvY2s7XHJcblxyXG59Il19 */\"","module.exports = \"<div class=\\\"page\\\">\\r\\n    <div class=\\\"page-content-container login\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-6 text-left\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <img src=\\\"./assets/img/etisalat-logo01 copy.png\\\" class=\\\"ml-3\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"row mt-5\\\">\\r\\n                        <div class=\\\"col-12\\\">\\r\\n                            <div class=\\\"title-xlarge\\\">\\r\\n                                Account recovery\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <form [formGroup]=\\\"formGroup\\\">\\r\\n                        <div *ngIf=\\\"!statusResponse\\\" class=\\\"row\\\">\\r\\n\\r\\n                            <div class=\\\"col-7 mt-5\\\">\\r\\n                                <div class=\\\"form-input form-input-timepicker \\\">\\r\\n                                    <label class=\\\"form-input-label\\\">Email </label>\\r\\n                                    <input formControlName=\\\"mail\\\" class=\\\"input\\\" id=\\\"float-input\\\" type=\\\"text\\\" size=\\\"30\\\"\\r\\n                                        pInputText [(ngModel)]=\\\"email\\\">\\r\\n                                    <label *ngIf=\\\"statusResponse\\\" class=\\\"title-large\\\">{{statusResponse}}</label>\\r\\n                                    <div *ngIf=\\\"submitted && !!getformGroupControlls.mail.errors\\\"\\r\\n                                        class=\\\"invalid-feedback\\\">\\r\\n                                        <div *ngIf=\\\"!!getformGroupControlls.mail.errors.required\\\">Please fill in the\\r\\n                                            missing fields</div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n\\r\\n                    </form>\\r\\n                    <div *ngIf=\\\"statusResponse\\\" class=\\\"row\\\">\\r\\n                        <div class=\\\"col-7 mt-5\\\">\\r\\n                            <label *ngIf=\\\"statusResponse\\\" class=\\\"title-large\\\">{{statusResponse}}</label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row mt-5\\\">\\r\\n                        <button *ngIf=\\\"!statusResponse\\\" (click)=\\\"forget()\\\" type=\\\"button\\\" label=\\\"Go login\\\"\\r\\n                            class=\\\"button-green button wide-button ml-2\\\">\\r\\n                            Submit\\r\\n                        </button>\\r\\n\\r\\n                        <button type=\\\"button\\\" (click)=\\\"back()\\\" class=\\\"button-green button wide-button ml-2\\\">\\r\\n                            Back\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-6\\\">\\r\\n                    <img src=\\\"./assets/img/login-img.svg\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LoginServiceService } from '../login-service.service';\r\nimport { Location } from '@angular/common';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n@Component({\r\n    selector: 'ndp-forget',\r\n    templateUrl: './forget-password.component.html',\r\n    styleUrls: ['./forget-password.component.css']\r\n})\r\nexport class ForgetComponent implements OnInit {\r\n\r\n    email: string;\r\n    statusResponse: string;\r\n    formGroup: FormGroup;\r\n    submitted = false;\r\n    constructor(private route: Router,\r\n        private loginService: LoginServiceService,\r\n        private router: Router,\r\n        private formBuilder: FormBuilder) { }\r\n    get getformGroupControlls() { return this.formGroup.controls; }\r\n    ngOnInit() {\r\n\r\n        this.formGroup = this.formBuilder.group({\r\n\r\n            mail: ['', Validators.required]\r\n\r\n        });\r\n\r\n    }\r\n\r\n    forget() {\r\n\r\n        this.submitted = true;\r\n        debugger;\r\n\r\n        if (this.formGroup.invalid) {\r\n            return;\r\n        }\r\n        this.loginService.forgot(this.email).pipe(catchError((err, caught) => {\r\n            //debugger;\r\n            console.log(\"ERror in forget \", err, caught);\r\n            throw err;\r\n        }\r\n        )).subscribe(\r\n            response => this.statusResponse = response.statusMessage\r\n        );\r\n    }\r\n\r\n    back() {\r\n        this.router.navigate(['login']);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BaseService } from '../shared/services/base-service';\r\nimport { ApiRequest } from '../shared/models/api-request';\r\nimport { Defines } from '../shared/static/defines';\r\nimport { LoginRequest } from '../shared/models/login-request';\r\nimport { Observable } from 'rxjs';\r\nimport { ApiResponse } from '../shared/models/api-response';\r\nimport { AuthToken } from '../shared/models/auth-token';\r\nimport { map } from 'rxjs/operators';\r\nimport { ResetPasswordModel } from '../shared/models/reset-password-model';\r\nimport { FormGroup } from '@angular/forms';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginServiceService extends BaseService {\r\n  constructor(private client: HttpClient) {\r\n    super(client);\r\n  }\r\n  //Not needed here\r\n  initAuthorizationUrl() {\r\n    this.authorizationUrl += this.secureApi + Defines.API_ENDPOINTS.LOGIN;\r\n    console.log(\"Authorization Url =>\", this.authorizationUrl);\r\n}\r\n  // public sendLoginRequest(uesrname: string, password: string): Observable<AuthToken> {\r\n  //   //debugger;\r\n  //   let apiUrl = this.backendUrl + this.nonSecureApi + Defines.API_ENDPOINTS.LOGIN;\r\n  //   let obs: Observable<AuthToken> = this.http.post<AuthToken>(apiUrl, new LoginRequest(\r\n  //     uesrname, password)\r\n  //     , this.httpOptions).pipe(map((apiResponse: any) => new AuthToken(apiResponse.responsePayload.token, apiResponse.responsePayload.user)));\r\n  //   //debugger;\r\n  //   return obs;\r\n  // }\r\n\r\n  public sendLoginRequest(uesrname: string, password: string): Observable<ApiResponse<any>> {\r\n    let apiUrl = this.backendUrl + this.nonSecureApi + Defines.API_ENDPOINTS.LOGIN;\r\n    let obs: Observable<ApiResponse<any>> = this.http.post<ApiResponse<any>>(apiUrl, new LoginRequest(\r\n      uesrname, password)\r\n      , this.httpOptions);\r\n    return obs;\r\n  }\r\n\r\n  public sendLogoutRequest(): Observable<string> {\r\n    //debugger;\r\n    let apiUrl = this.backendUrl + this.nonSecureApi + Defines.API_ENDPOINTS.logout;\r\n    let obs: Observable<string> = this.http.post<string>(apiUrl, new ApiRequest(null, \"\"), this.httpOptions);\r\n    //.pipe(map((apiResponse: any) => new AuthToken(apiResponse.responsePayload.token, apiResponse.responsePayload.user)));\r\n    //debugger;\r\n    return obs;\r\n  }\r\n\r\n  public forgot(email: string): Observable<ApiResponse<number>> {\r\n    //debugger;\r\n    let apiUrl = this.backendUrl + this.nonSecureApi + Defines.API_ENDPOINTS.RESET + Defines.API_ENDPOINTS.FORGOT;\r\n    let result: Observable<any> = this.http.post<string>(apiUrl, new ApiRequest(email, \"\"), this.httpOptions);\r\n    //.pipe(map((apiResponse: any) => new AuthToken(apiResponse.responsePayload.token, apiResponse.responsePayload.user)));\r\n    //debugger;\r\n    return result;\r\n  }\r\n\r\n  public resetPassword(model: ResetPasswordModel): Observable<ApiResponse<number>> {\r\n    //debugger;\r\n    let apiUrl = this.backendUrl + this.nonSecureApi + Defines.API_ENDPOINTS.RESET + Defines.API_ENDPOINTS.RESET;\r\n    let result: Observable<any> = this.http.post<string>(apiUrl, new ApiRequest(model, \"\"), this.httpOptions);\r\n    return result;\r\n  }\r\n\r\n  public resetExpiredPassword(model: ResetPasswordModel): Observable<ApiResponse<number>> {\r\n    //debugger;\r\n    let apiUrl = this.backendUrl + this.nonSecureApi + Defines.API_ENDPOINTS.RESET + Defines.API_ENDPOINTS.RESET_EXPIRED;\r\n    let result: Observable<any> = this.http.post<string>(apiUrl, new ApiRequest(model, \"\"), this.httpOptions);\r\n    return result;\r\n  }\r\n\r\n  public markFormGroupTouched(formGroup: FormGroup) {\r\n    (<any>Object).values(formGroup.controls).forEach(control => {\r\n      control.markAsTouched();\r\n\r\n      if (control.controls) {\r\n        this.markFormGroupTouched(control);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { ForgetComponent } from './forget-password/forget-password.component';\r\nimport { ResetComponent } from './reset-password/reset-password.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { ResetExpiryPassComponent } from './reset-expiry-password/reset-expiry-password.component';\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent, ForgetComponent, ResetComponent, ResetExpiryPassComponent],\r\n  imports: [\r\n    CommonModule, SharedModule, ButtonModule, FormsModule, RouterModule, ReactiveFormsModule\r\n  ],\r\n  exports: [\r\n    LoginComponent, ForgetComponent, ResetComponent, ResetExpiryPassComponent\r\n  ],\r\n  bootstrap: [LoginComponent, ForgetComponent, ResetComponent]\r\n})\r\nexport class LoginModule { }\r\n","module.exports = \".page{\\r\\n    /* margin-left: -230px; */\\r\\n}\\r\\n.form-input input {\\r\\n    display: block;\\r\\n    width: 100%;\\r\\n    height: calc(2.25rem + 2px);\\r\\n    border: 0px;\\r\\n    border-bottom: 1px solid #00000024;\\r\\n    transition: all 0.3s;\\r\\n    padding: 0px 2px;\\r\\n    background: transparent;\\r\\n}\\r\\nbody a {\\r\\n    color: #464852 !important;\\r\\n    text-decoration: none;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHlCQUF5QjtBQUM3QjtBQUNBO0lBQ0ksY0FBYztJQUNkLFdBQVc7SUFDWCwyQkFBMkI7SUFDM0IsV0FBVztJQUNYLGtDQUFrQztJQUNsQyxvQkFBb0I7SUFDcEIsZ0JBQWdCO0lBQ2hCLHVCQUF1QjtBQUMzQjtBQUNBO0lBQ0kseUJBQXlCO0lBQ3pCLHFCQUFxQjtBQUN6QiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucGFnZXtcclxuICAgIC8qIG1hcmdpbi1sZWZ0OiAtMjMwcHg7ICovXHJcbn1cclxuLmZvcm0taW5wdXQgaW5wdXQge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogY2FsYygyLjI1cmVtICsgMnB4KTtcclxuICAgIGJvcmRlcjogMHB4O1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICMwMDAwMDAyNDtcclxuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzO1xyXG4gICAgcGFkZGluZzogMHB4IDJweDtcclxuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG59XHJcbmJvZHkgYSB7XHJcbiAgICBjb2xvcjogIzQ2NDg1MiAhaW1wb3J0YW50O1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG59Il19 */\"","module.exports = \"<div class=\\\"page ml-4\\\">\\r\\n  <div class=\\\"login\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-6 text-left\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <img [src]=\\\"etisalatLogo\\\" class=\\\"ml-3\\\">\\r\\n          </div>\\r\\n          <div class=\\\"row mt-5\\\">\\r\\n            <div class=\\\"col-12\\\">\\r\\n              <div class=\\\"title-medium-regular color-gray\\\">\\r\\n                Welcome To\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-12\\\">\\r\\n              <div class=\\\"title-xlarge\\\">\\r\\n                Etisalat Notification Delivery\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <form [formGroup]=\\\"loginForm\\\" (keydown)=\\\"keyDownFunction($event)\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-7 mt-5\\\">\\r\\n                <div class=\\\"form-input form-input-timepicker \\\">\\r\\n                  <label class=\\\"form-input-label\\\">Username </label>\\r\\n                  <input   nfSpecialCharacters class=\\\"input\\\" id=\\\"float-input\\\" type=\\\"text\\\" size=\\\"30\\\" pInputText\\r\\n                    [ngClass]=\\\"{ 'invalid-input': lf.userName.errors && (lf.userName.touched || lf.userName.dirty) }\\\"\\r\\n                    formControlName=\\\"userName\\\">\\r\\n                  <div class=\\\"invalid-text\\\" *ngIf=\\\"!!lf.userName.errors && (!!lf.userName.touched || !!lf.userName.dirty)\\\">\\r\\n                    <div *ngIf=\\\"!!lf.userName.errors.required\\\">Username is required</div>\\r\\n                    <div *ngIf=\\\"!lf.userName.errors.required && !!lf.userName.errors.nfSpecialCharacters\\\" >Username Must be valid</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-7 mt-3\\\">\\r\\n                <div class=\\\"form-input form-input-timepicker \\\">\\r\\n                  <label class=\\\"form-input-label\\\">Password </label>\\r\\n                  <input class=\\\"input\\\" id=\\\"float-input1\\\" type=\\\"password\\\" size=\\\"30\\\"\\r\\n                    [ngClass]=\\\"{ 'invalid-input': lf.password.errors && (lf.password.touched || lf.password.dirty) }\\\"\\r\\n                    formControlName=\\\"password\\\">\\r\\n                  <div class=\\\"icon-eye-password icon-gray title-xsmall icon-1 \\\"></div>\\r\\n                  <div *ngIf=\\\"!!lf.password.errors && (!!lf.password.touched || !!lf.password.dirty)\\\">\\r\\n                    <div *ngIf=\\\"!!lf.password.errors.required\\\" class=\\\"invalid-text\\\">Password is required</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-4 mt-3\\\">\\r\\n              <div class=\\\"form-checkbox custom-control custom-checkbox text-muted\\\">\\r\\n                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"remember\\\" [checked]=\\\"remember === true\\\" class=\\\"custom-control-input\\\"\\r\\n                  id=\\\"customCheck\\\" name=\\\"example1\\\">\\r\\n                <label class=\\\"custom-control-label\\\" style=\\\"font-size: 13px;padding-top: 3px;\\\"  for=\\\"customCheck\\\"> Remember me </label>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-3\\\">\\r\\n              <div class=\\\"mt-3 title-small color-gray-dark\\\">\\r\\n                <a [routerLink]=\\\"['/forget-password']\\\" label=\\\"Forget\\\">\\r\\n                  Forgot password?\\r\\n                </a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row mt-5\\\">\\r\\n            <button (click)=\\\"doLogin();\\\" type=\\\"submit\\\" label=\\\"Go login\\\" class=\\\"button-green button wide-button ml-2\\\">\\r\\n              Login\\r\\n            </button>\\r\\n            <button (click)=\\\"register();\\\" type=\\\"button\\\" label=\\\"Go Register\\\"\\r\\n              class=\\\"button-black button wide-button ml-2\\\">\\r\\n              Register\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-6\\\">\\r\\n          <img [src]=\\\"loginImage\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { LoginServiceService } from '../login-service.service';\r\nimport { error } from '@angular/compiler/src/util';\r\nimport { AuthToken } from 'src/app/shared/models/auth-token';\r\nimport { Defines } from 'src/app/shared/static/defines';\r\nimport { Router } from '@angular/router';\r\nimport { PlatformLocation } from '@angular/common';\r\nimport { ApiResponse } from 'src/app/shared/models/api-response';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n@Component({\r\n  selector: 'ndp-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n  providers: [LoginServiceService]\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n  @Input() userAuthModel: AuthToken;\r\n  userName: string;\r\n  password: string;\r\n  remember: boolean;\r\n\r\n  etisalatLogo: string;\r\n  loginImage: string;\r\n  constructor(private route: Router, private loginService: LoginServiceService,\r\n    private platformLocation: PlatformLocation, private formBuilder: FormBuilder,\r\n    private cookieService: CookieService) { }\r\n\r\n  loginForm: FormGroup;\r\n\r\n  ngOnInit() {\r\n    this.remember = false;\r\n    if (localStorage.getItem(Defines.SESSION_KEYS.authToken) != null && localStorage.getItem(Defines.SESSION_KEYS.userModel) != null) {\r\n      this.route.navigate(['home']);\r\n    }\r\n\r\n    this.loginImage = Defines.CONSTANTS.BASE_URL + 'assets/img/login-img.svg';\r\n    // let baseUrl = document.getElementsByTagName(\"base\")[0].href;\r\n    console.log('baseHref ', Defines.CONSTANTS.BASE_URL);\r\n    console.log('platformLocation => ', this.platformLocation);\r\n    this.etisalatLogo = Defines.CONSTANTS.BASE_URL + 'assets/img/etisalat-logo01 copy.png';\r\n    // localStorage.removeItem(Defines.SESSION_KEYS.authToken);\r\n    // localStorage.removeItem(Defines.SESSION_KEYS.userModel);\r\n\r\n    this.loginForm = this.formBuilder.group({\r\n      userName: ['', [Validators.required]],\r\n      password: ['', [Validators.required]]\r\n    });\r\n    if (this.cookieService.check('usr') && this.cookieService.check('pas')) {\r\n      this.loginForm.patchValue({\r\n        userName: atob(atob(atob(this.cookieService.get('usr')))),\r\n        password: atob(atob(this.cookieService.get('pas')))\r\n      });\r\n      this.remember = true;\r\n    }\r\n  }\r\n\r\n  doLogin() {\r\n\r\n    if (this.loginForm.invalid) {\r\n      this.loginService.markFormGroupTouched(this.loginForm);\r\n      return;\r\n    }\r\n    this.userName = this.loginForm.get('userName').value;\r\n    this.password = this.loginForm.get('password').value;\r\n    this.loginService.sendLoginRequest(this.userName, this.password).pipe(catchError((err, caught) => {\r\n      console.log('Error in doLogin ', err, caught);\r\n      throw err;\r\n    }\r\n    )).subscribe(\r\n\r\n      apiResponse => {\r\n        console.log('apiResponse Received ==> ', apiResponse);\r\n        if (apiResponse.status === Defines.API_RESPONSES.success) {\r\n          const authToken:AuthToken = new AuthToken(apiResponse.responsePayload.token, apiResponse.responsePayload.user);\r\n          localStorage.setItem(Defines.SESSION_KEYS.authToken, (<AuthToken>authToken).token);\r\n          localStorage.setItem(Defines.SESSION_KEYS.userModel, (JSON.stringify((authToken).user)));\r\n          if (this.remember === true) {\r\n            this.cookieService.set('usr', btoa(btoa(btoa(this.userName))));\r\n            this.cookieService.set('pas', btoa(btoa(this.password)));\r\n          } else {\r\n            this.cookieService.delete('usr');\r\n            this.cookieService.delete('usr');\r\n          }\r\n          this.route.navigate(['home']);\r\n        } else if (apiResponse.status === Defines.API_RESPONSES.EXPIRED_PASSWORD) {\r\n          const url: string = 'reset-expiry-password/' + apiResponse.responsePayload;\r\n          this.route.navigate([url]);\r\n        } else {\r\n          localStorage.removeItem(Defines.SESSION_KEYS.authToken);\r\n          localStorage.removeItem(Defines.SESSION_KEYS.userModel);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  register() {\r\n    this.route.navigate(['register']);\r\n  }\r\n\r\n  forget() {\r\n    this.route.navigate(['forget-password']);\r\n  }\r\n  get lf() {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  keyDownFunction(event) {\r\n    if (event.keyCode === 13) {\r\n      this.doLogin();\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL3Jlc2V0LWV4cGlyeS1wYXNzd29yZC9yZXNldC1leHBpcnktcGFzc3dvcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"page\\\">\\r\\n    <div class=\\\"page-content-container login\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-6 text-left\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <img src=\\\"./assets/img/etisalat-logo01 copy.png\\\" class=\\\"ml-3\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"row mt-5\\\">\\r\\n                        <div class=\\\"col-12\\\">\\r\\n                            <div class=\\\"title-xlarge\\\">\\r\\n                                Reset Expired Password\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-7 mt-5\\\">\\r\\n                            <div class=\\\"form-input form-input-timepicker \\\">\\r\\n                                <label class=\\\"form-input-label\\\">Old password </label>\\r\\n                                <input class=\\\"input\\\" id=\\\"float-input\\\" type=\\\"password\\\" size=\\\"30\\\" pInputText\\r\\n                                    [(ngModel)]=\\\"model.oldPassword\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"form-input form-input-timepicker \\\">\\r\\n                                <label class=\\\"form-input-label\\\">New password </label>\\r\\n                                <input class=\\\"input\\\" id=\\\"float-input1\\\" type=\\\"password\\\" size=\\\"30\\\" pInputText\\r\\n                                    [(ngModel)]=\\\"model.password\\\">\\r\\n                            </div>\\r\\n                            <div class=\\\"form-input form-input-timepicker \\\">\\r\\n                                <label class=\\\"form-input-label\\\">Confirm new password </label>\\r\\n                                <input class=\\\"input\\\" id=\\\"float-input2\\\" type=\\\"password\\\" size=\\\"30\\\" pInputText\\r\\n                                    [(ngModel)]=\\\"confirmPassword\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <br>\\r\\n                    <div class=\\\"row\\\">\\r\\n\\r\\n                        <div>\\r\\n                            <button (click)=\\\"reset();\\\" type=\\\"button\\\" label=\\\"Go login\\\"\\r\\n                                class=\\\"button-green button wide-button ml-2\\\">\\r\\n                                Submit\\r\\n                            </button>\\r\\n                        </div>\\r\\n                        <div>\\r\\n                            <button (click)=\\\"goToLogin();\\\" type=\\\"button\\\" label=\\\"Go login\\\"\\r\\n                                class=\\\"button-green button wide-button ml-2\\\">\\r\\n                                Cancel\\r\\n                            </button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"col-6\\\">\\r\\n                    <img src=\\\"./assets/img/login-img.svg\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LoginServiceService } from '../login-service.service';\r\nimport { Location } from '@angular/common';\r\nimport { ResetPasswordModel } from 'src/app/shared/models/reset-password-model';\r\nimport { NdpMessageService } from 'src/app/shared/services/ndp-message.service';\r\nimport { Defines } from 'src/app/shared/static/defines';\r\n\r\n@Component({\r\n    selector: 'ndp-expiry-reset',\r\n    templateUrl: './reset-expiry-password.component.html',\r\n    styleUrls: ['./reset-expiry-password.component.css']\r\n})\r\nexport class ResetExpiryPassComponent implements OnInit {\r\n\r\n    model: ResetPasswordModel = new ResetPasswordModel();\r\n    confirmPassword: string;\r\n    public statusResponse: string;\r\n\r\n    constructor(private route: Router,\r\n        private loginService: LoginServiceService,\r\n        private activeRoute: ActivatedRoute,\r\n        private messageService: NdpMessageService) { }\r\n\r\n    ngOnInit() {\r\n        this.model.email = this.activeRoute.snapshot.paramMap.get('email');\r\n    }\r\n\r\n    reset() {\r\n        if(!this.model.password.match(\"^(?=.*[A-Za-z])(?=.*[0-9])[A-Za-z0-9!@#$%^&*(),.?\\\":{}|<>\\\\/]{8,}$\")){\r\n            this.messageService.addWarnings([\"Password should be a minimum of 7 letters and 1 character\"]);\r\n            return;\r\n        }\r\n        if (this.confirmPassword === this.model.password) {\r\n            this.loginService.resetExpiredPassword(this.model).subscribe(\r\n                response => {\r\n                    console.log(\"response =>\", response);\r\n                    if (response.status === Defines.API_RESPONSES.success) {\r\n                        this.goToLogin();\r\n                    } else {\r\n                        this.statusResponse = response.statusMessage;\r\n                    }\r\n                }\r\n            );\r\n        } else {\r\n            this.messageService.addWarnings([\"Password Not Matched\"]);\r\n        }\r\n    }\r\n\r\n    goToLogin() {\r\n        this.route.navigate(['login']);\r\n    }\r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL3Jlc2V0LXBhc3N3b3JkL3Jlc2V0LXBhc3N3b3JkLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"page\\\">\\r\\n    <div class=\\\"page-content-container login\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-6 text-left\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <img src=\\\"./assets/img/etisalat-logo01 copy.png\\\" class=\\\"ml-3\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"row mt-5\\\">\\r\\n                        <div class=\\\"col-12\\\">\\r\\n                            <div class=\\\"title-xlarge\\\">\\r\\n                                Account recovery\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <form [formGroup]=\\\"formGroup\\\">\\r\\n                        <div *ngIf=\\\"!statusResponse\\\" class=\\\"row\\\">\\r\\n\\r\\n                            <div class=\\\"col-7 mt-5\\\">\\r\\n                                <div class=\\\"form-input form-input-timepicker \\\">\\r\\n                                    <label class=\\\"form-input-label\\\">Password </label>\\r\\n                                    <input formControlName=\\\"password\\\" class=\\\"input\\\" type=\\\"password\\\" id=\\\"float-input\\\"\\r\\n                                        size=\\\"30\\\" pInputText [(ngModel)]=\\\"model.password\\\">\\r\\n                                    <label *ngIf=\\\"statusResponse\\\" class=\\\"title-large\\\">{{statusResponse}}</label>\\r\\n                                    <div *ngIf=\\\"submitted && !!getformGroupControlls.password.errors\\\"\\r\\n                                        class=\\\"invalid-feedback\\\">\\r\\n                                        <div *ngIf=\\\"!!getformGroupControlls.password.errors.required\\\">Please fill in the\\r\\n                                            missing fields</div>\\r\\n                                        <div *ngIf=\\\"!!getformGroupControlls.password.errors.pattern\\\">Password should be a minimum of 7 letters and 1 character</div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-input form-input-timepicker \\\">\\r\\n                                    <label class=\\\"form-input-label\\\">Confirm password </label>\\r\\n                                    <input formControlName=\\\"confirmPassword\\\" class=\\\"input\\\" type=\\\"password\\\" id=\\\"float-input\\\"\\r\\n                                        size=\\\"30\\\" pInputText [(ngModel)]=\\\"confirmPassword\\\">\\r\\n                                    <label *ngIf=\\\"statusResponse\\\" class=\\\"title-large\\\">{{statusResponse}}</label>\\r\\n                                    <div *ngIf=\\\"submitted && !!getformGroupControlls.confirmPassword.errors\\\"\\r\\n                                        class=\\\"invalid-feedback\\\">\\r\\n                                        <div *ngIf=\\\"!!getformGroupControlls.confirmPassword.errors.required\\\">Please fill\\r\\n                                            in the missing fields</div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                        </div>\\r\\n\\r\\n                    </form>\\r\\n                    <div *ngIf=\\\"statusResponse\\\" class=\\\"row\\\">\\r\\n                        <div class=\\\"col-7 mt-5\\\">\\r\\n                            <label *ngIf=\\\"statusResponse\\\" class=\\\"title-large\\\">{{statusResponse}}</label>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"!statusResponse\\\" class=\\\"row mt-5\\\">\\r\\n                        <button (click)=\\\"reset();\\\" type=\\\"button\\\" label=\\\"Go login\\\"\\r\\n                            class=\\\"button-green button wide-button ml-2\\\">\\r\\n                            Submit\\r\\n                        </button>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"statusResponse\\\" class=\\\"row mt-5\\\">\\r\\n                        <button (click)=\\\"goToLogin();\\\" type=\\\"button\\\" label=\\\"Go login\\\"\\r\\n                            class=\\\"button-green button wide-button ml-2\\\">\\r\\n                            Go To Login\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-6\\\">\\r\\n                    <img src=\\\"./assets/img/login-img.svg\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LoginServiceService } from '../login-service.service';\r\nimport { Location } from '@angular/common';\r\nimport { ResetPasswordModel } from 'src/app/shared/models/reset-password-model';\r\nimport { NdpMessageService } from 'src/app/shared/services/ndp-message.service';\r\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'ndp-reset',\r\n    templateUrl: './reset-password.component.html',\r\n    styleUrls: ['./reset-password.component.css']\r\n})\r\nexport class ResetComponent implements OnInit {\r\n\r\n    model: ResetPasswordModel = new ResetPasswordModel();\r\n    confirmPassword: string;\r\n    formGroup: FormGroup;\r\n    public statusResponse: string;\r\n    submitted: boolean;\r\n\r\n    get getformGroupControlls() { \r\n        console.log(\"controler\", this.formGroup.controls);\r\n        return this.formGroup.controls; }\r\n    constructor(private route: Router,\r\n        private loginService: LoginServiceService,\r\n        private activeRoute: ActivatedRoute,\r\n        private location: Location,\r\n        private formBuilder: FormBuilder,\r\n        private messageService: NdpMessageService) { }\r\n\r\n    ngOnInit() {\r\n\r\n        this.model.email = this.activeRoute.snapshot.paramMap.get('email');\r\n        this.model.resetCode = this.activeRoute.snapshot.paramMap.get('code');\r\n\r\n        this.formGroup = this.formBuilder.group({\r\n\r\n            password: ['', [Validators.required,Validators.pattern(\"^(?=.*[A-Za-z])(?=.*[0-9])[A-Za-z0-9!@#$%^&*(),.?\\\":{}|<>\\\\/]{8,}$\")]],\r\n            confirmPassword: ['', Validators.required]\r\n        });\r\n    }\r\n\r\n    reset() {\r\n        this.submitted = true;\r\n        debugger;\r\n\r\n        if (this.formGroup.invalid) {\r\n            return;\r\n        }\r\n        if (this.confirmPassword === this.model.password) {\r\n            this.loginService.resetPassword(this.model).subscribe(\r\n                response => this.statusResponse = response.statusMessage);\r\n        } else {\r\n            this.messageService.addWarnings([\"Password Not Matched\"]);\r\n        }\r\n    }\r\n\r\n    goToLogin() {\r\n        this.route.navigate(['login']);\r\n    }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Route, RouterModule, ExtraOptions, RouterLink, RouterLinkActive } from '@angular/router';\r\nimport { LoginComponent } from '../login/login/login.component';\r\nimport { HomePageComponent } from '../home/home-page/home-page.component';\r\nimport { GroupListComponent } from '../group/group-list/group-list.component';\r\nimport { CampaignListComponent } from '../campaigns/campaign-list/campaign-list.component';\r\nimport { SmsTemplateListComponent } from '../sms-templates/sms-template-list/sms-template-list.component';\r\nimport { AddEditCampaignComponent } from '../campaigns/add-edit-campaign/add-edit-campaign.component';\r\nimport { NotAuthorizedComponent } from '../general/not-authorized/not-authorized.component';\r\nimport { AddEditGroupComponent } from '../group/add-edit-group/add-edit-group.component';\r\nimport { GroupModule } from '../group/group.module';\r\nimport { AccountListComponent } from '../account/list/list.component';\r\nimport { AccountEditComponent } from '../account/add-edit/add-edit.component';\r\nimport { EntityListComponent } from '../entity/entity-list/entity-list.component';\r\nimport { ChangePasswordComponent } from '../account/change-password/change-password.component';\r\nimport { UsersAccountsListComponent } from '../account/users-accounts-list/users-accounts-list.component';\r\nimport { EntityAddEditComponent } from '../entity/entity-add-edit/entity-add-edit.component';\r\nimport { RegisterComponent } from '../sign-up/register/register.component';\r\nimport { AddEditUsersAccountsComponent } from '../account/add-edit-users-accounts/add-edit-users-accounts.component';\r\nimport { ForgetComponent } from '../login/forget-password/forget-password.component';\r\nimport { ResetComponent } from '../login/reset-password/reset-password.component';\r\nimport { RoleListComponent } from '../roles/role-list/role-list.component';\r\nimport { SignupRequestsComponent } from '../account/signup-requests/signup-requests.component';\r\nimport { SmscListComponent } from '../smsc/smsc-list/smsc-list.component';\r\nimport { AddEditSmscComponent } from '../smsc/add-edit-smsc/add-edit-smsc.component';\r\n// import { RoleManagerComponent } from '../roles/role-manager/role-manager.component';\r\nimport { AppProfilesListComponent } from '../app-profiles/app-profiles-list/app-profiles-list.component';\r\nimport { AppProfilesAddEditComponent } from '../app-profiles/app-profiles-add-edit/app-profiles-add-edit.component';\r\nimport { ReportPageComponent } from '../reports/report-page/report-page.component';\r\nimport { AddEditComponent } from '../roles/add-edit/add-edit.component';\r\nimport { AddEditRoleComponent } from '../roles/add-edit-role/add-edit-role.component';\r\nimport { ResetExpiryPassComponent } from '../login/reset-expiry-password/reset-expiry-password.component';\r\n\r\n\r\nconst appRoutes: Route[] = [\r\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'home', component: HomePageComponent },\r\n  { path: 'campaigns', component: CampaignListComponent },\r\n  { path: 'campaigns/create', component: AddEditCampaignComponent },\r\n  { path: 'campaigns/edit/:id', component: AddEditCampaignComponent },\r\n  { path: 'campaigns/clone/:id', component: AddEditCampaignComponent },\r\n  { path: 'smstemplates', component: SmsTemplateListComponent },\r\n  { path: 'groups', component: GroupListComponent },\r\n  { path: 'groups/get/:id', component: AddEditGroupComponent },\r\n  { path: 'groups/create', component: AddEditGroupComponent },\r\n  { path: 'roles', component: RoleListComponent },\r\n  { path: 'roles/create', component: AddEditRoleComponent },\r\n  { path: 'roles/edit/:id', component: AddEditRoleComponent },\r\n  { path: 'notauthorized', component: NotAuthorizedComponent },\r\n  { path: 'myprofile/view', component: AccountListComponent },\r\n  { path: 'myprofile/edit', component: AccountEditComponent },\r\n  { path: 'entity', component: EntityListComponent },\r\n  { path: 'entity/add', component: EntityAddEditComponent },\r\n  { path: 'user/list', component: UsersAccountsListComponent },\r\n  { path: 'account/change-password', component: ChangePasswordComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'user/edit/:id', component: AddEditUsersAccountsComponent },\r\n  { path: 'user/approve/:id', component: AddEditUsersAccountsComponent },\r\n  { path: 'user/add', component: AddEditUsersAccountsComponent },\r\n  { path: 'account/change-password', component: ChangePasswordComponent },\r\n  { path: 'forget-password', component: ForgetComponent },\r\n  { path: 'reset-password/:code/:email', component: ResetComponent },\r\n  { path: 'reset-expiry-password/:email', component: ResetExpiryPassComponent },\r\n  { path: 'requests', component: SignupRequestsComponent },\r\n  { path: 'appProfile', component: AppProfilesListComponent },\r\n  { path: 'addEditAppProfile', component: AppProfilesAddEditComponent },\r\n  { path: 'smsc', component: SmscListComponent },\r\n  { path: 'smsc/get/:id', component: AddEditSmscComponent },\r\n  { path: 'smsc/create', component: AddEditSmscComponent },\r\n  { path: 'reports', component: ReportPageComponent }]\r\n// const extraOptions: ExtraOptions = { \"useHash\": true };\r\nconst extraOptions: ExtraOptions = { enableTracing: false, onSameUrlNavigation: 'reload', useHash: true };\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule, RouterModule.forRoot(appRoutes, extraOptions), GroupModule\r\n  ], exports: [RouterModule]\r\n})\r\nexport class NDPRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NdpSpinnerService {\r\n  showSpinner = false;\r\n  spinnerSubject: BehaviorSubject<boolean>;\r\n\r\n  constructor() {\r\n    this.spinnerSubject = new BehaviorSubject<boolean>(false);\r\n  }\r\n\r\n\r\n  getSpinnerState(): Observable<boolean> {\r\n    // //console.log(\"giSpinnerHw Returning Spinner State\");\r\n    return this.spinnerSubject.asObservable();\r\n  }\r\n\r\n  public show() {\r\n    // //console.log(\"giSpinnerHw show called\");\r\n    this.spinnerSubject.next(true);\r\n  }\r\n\r\n  public hide() {\r\n    // //console.log(\"giSpinnerHw hide called\");\r\n    this.spinnerSubject.next(false);\r\n  }\r\n}\r\n","module.exports = \".giSpinnerImg {\\r\\n  z-index: 9999;\\r\\n  margin-top: 10%;\\r\\n  width: 17% !important;\\r\\n  /* background-color:transparent; */\\r\\n}\\r\\n\\r\\n.rotating {\\r\\n    -webkit-animation: rotate 2s linear infinite;\\r\\n    animation: rotate 2s linear infinite;\\r\\n  }\\r\\n\\r\\n.giSpinner {\\r\\n    display: block;\\r\\n    position: fixed;\\r\\n    height: 100%;\\r\\n    width: 100%;\\r\\n    text-align: center;\\r\\n    z-index: 2000;\\r\\n    /*background-color: #3b5d432e; /* Black w/ opacity */\\r\\n    /*background-color: #212923bd;*/\\r\\n    color: #a3d94e;\\r\\n  }\\r\\n\\r\\n@-webkit-keyframes rotate {\\r\\n    from {\\r\\n      transform: rotate(0deg);\\r\\n    }\\r\\n    to {\\r\\n      transform: rotate(360deg);\\r\\n    }\\r\\n  }\\r\\n\\r\\n@keyframes rotate {\\r\\n    from {\\r\\n      transform: rotate(0deg);\\r\\n    }\\r\\n    to {\\r\\n      transform: rotate(360deg);\\r\\n    }\\r\\n  }\\r\\n\\r\\n/*\\r\\nLoader\\r\\n*/\\r\\n\\r\\n.loader{\\r\\n  position: absolute;\\r\\n  top: 50%;\\r\\n  bottom: 50%;\\r\\n  right: 0;\\r\\n  left: 0;\\r\\n  margin: auto;\\r\\n  background-color: #ffffff57;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.lds-ring {\\r\\n  display: inline-block;\\r\\n  position: relative;\\r\\n  width: 64px;\\r\\n  height: 64px;\\r\\n}\\r\\n\\r\\n.lds-ring div {\\r\\n  box-sizing: border-box;\\r\\n  display: block;\\r\\n  position: absolute;\\r\\n  width: 51px;\\r\\n  height: 51px;\\r\\n  margin: 6px;\\r\\n  border: 6px solid black;\\r\\n  border-radius: 50%;\\r\\n  -webkit-animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\\r\\n          animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\\r\\n  border-color: #a3d94e #00000003#00000003#00000003;;\\r\\n}\\r\\n\\r\\n.lds-ring div:nth-child(1) {\\r\\n  -webkit-animation-delay: -0.45s;\\r\\n          animation-delay: -0.45s;\\r\\n}\\r\\n\\r\\n.lds-ring div:nth-child(2) {\\r\\n  -webkit-animation-delay: -0.3s;\\r\\n          animation-delay: -0.3s;\\r\\n}\\r\\n\\r\\n.lds-ring div:nth-child(3) {\\r\\n  -webkit-animation-delay: -0.15s;\\r\\n          animation-delay: -0.15s;\\r\\n}\\r\\n\\r\\n@-webkit-keyframes lds-ring {\\r\\n  0% {\\r\\n    transform: rotate(0deg);\\r\\n  }\\r\\n  100% {\\r\\n    transform: rotate(360deg);\\r\\n  }\\r\\n}\\r\\n\\r\\n@keyframes lds-ring {\\r\\n  0% {\\r\\n    transform: rotate(0deg);\\r\\n  }\\r\\n  100% {\\r\\n    transform: rotate(360deg);\\r\\n  }\\r\\n}\\r\\n\\r\\n/*\\r\\nEnd Loader  \\r\\n*/\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmRwc3Bpbm5lci9uZHAtc3Bpbm5lci9uZHAtc3Bpbm5lci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLGVBQWU7RUFDZixxQkFBcUI7RUFDckIsa0NBQWtDO0FBQ3BDOztBQUVBO0lBQ0ksNENBQTRDO0lBSTVDLG9DQUFvQztFQUN0Qzs7QUFFQTtJQUNFLGNBQWM7SUFDZCxlQUFlO0lBQ2YsWUFBWTtJQUNaLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLG9EQUFvRDtJQUNwRCwrQkFBK0I7SUFDL0IsY0FBYztFQUNoQjs7QUFHQTtJQUNFO01BS0UsdUJBQXVCO0lBQ3pCO0lBQ0E7TUFLRSx5QkFBeUI7SUFDM0I7RUFDRjs7QUFmQTtJQUNFO01BS0UsdUJBQXVCO0lBQ3pCO0lBQ0E7TUFLRSx5QkFBeUI7SUFDM0I7RUFDRjs7QUFFRjs7Q0FFQzs7QUFDRDtFQUNFLGtCQUFrQjtFQUNsQixRQUFRO0VBQ1IsV0FBVztFQUNYLFFBQVE7RUFDUixPQUFPO0VBQ1AsWUFBWTtFQUNaLDJCQUEyQjtFQUMzQixrQkFBa0I7QUFDcEI7O0FBQ0E7RUFDRSxxQkFBcUI7RUFDckIsa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxZQUFZO0FBQ2Q7O0FBQ0E7RUFDRSxzQkFBc0I7RUFDdEIsY0FBYztFQUNkLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsWUFBWTtFQUNaLFdBQVc7RUFDWCx1QkFBdUI7RUFDdkIsa0JBQWtCO0VBQ2xCLHNFQUE4RDtVQUE5RCw4REFBOEQ7RUFDOUQsaURBQWlEO0FBQ25EOztBQUNBO0VBQ0UsK0JBQXVCO1VBQXZCLHVCQUF1QjtBQUN6Qjs7QUFDQTtFQUNFLDhCQUFzQjtVQUF0QixzQkFBc0I7QUFDeEI7O0FBQ0E7RUFDRSwrQkFBdUI7VUFBdkIsdUJBQXVCO0FBQ3pCOztBQUNBO0VBQ0U7SUFDRSx1QkFBdUI7RUFDekI7RUFDQTtJQUNFLHlCQUF5QjtFQUMzQjtBQUNGOztBQVBBO0VBQ0U7SUFDRSx1QkFBdUI7RUFDekI7RUFDQTtJQUNFLHlCQUF5QjtFQUMzQjtBQUNGOztBQUVBOztDQUVDIiwiZmlsZSI6InNyYy9hcHAvbmRwc3Bpbm5lci9uZHAtc3Bpbm5lci9uZHAtc3Bpbm5lci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmdpU3Bpbm5lckltZyB7XHJcbiAgei1pbmRleDogOTk5OTtcclxuICBtYXJnaW4tdG9wOiAxMCU7XHJcbiAgd2lkdGg6IDE3JSAhaW1wb3J0YW50O1xyXG4gIC8qIGJhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7ICovXHJcbn1cclxuXHJcbi5yb3RhdGluZyB7XHJcbiAgICAtd2Via2l0LWFuaW1hdGlvbjogcm90YXRlIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICAgIC1tb3otYW5pbWF0aW9uOiByb3RhdGUgMnMgbGluZWFyIGluZmluaXRlO1xyXG4gICAgLW1zLWFuaW1hdGlvbjogcm90YXRlIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICAgIC1vLWFuaW1hdGlvbjogcm90YXRlIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICAgIGFuaW1hdGlvbjogcm90YXRlIDJzIGxpbmVhciBpbmZpbml0ZTtcclxuICB9XHJcblxyXG4gIC5naVNwaW5uZXIge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHotaW5kZXg6IDIwMDA7XHJcbiAgICAvKmJhY2tncm91bmQtY29sb3I6ICMzYjVkNDMyZTsgLyogQmxhY2sgdy8gb3BhY2l0eSAqL1xyXG4gICAgLypiYWNrZ3JvdW5kLWNvbG9yOiAjMjEyOTIzYmQ7Ki9cclxuICAgIGNvbG9yOiAjYTNkOTRlO1xyXG4gIH1cclxuXHJcblxyXG4gIEBrZXlmcmFtZXMgcm90YXRlIHtcclxuICAgIGZyb20ge1xyXG4gICAgICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XHJcbiAgICAgIC1tb3otdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XHJcbiAgICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XHJcbiAgICAgIC1vLXRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xyXG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcclxuICAgIH1cclxuICAgIHRvIHtcclxuICAgICAgLW1zLXRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XHJcbiAgICAgIC1tb3otdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcclxuICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpO1xyXG4gICAgICAtby10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpO1xyXG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpO1xyXG4gICAgfVxyXG4gIH1cclxuICBcclxuLypcclxuTG9hZGVyXHJcbiovXHJcbi5sb2FkZXJ7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogNTAlO1xyXG4gIGJvdHRvbTogNTAlO1xyXG4gIHJpZ2h0OiAwO1xyXG4gIGxlZnQ6IDA7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY1NztcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuLmxkcy1yaW5nIHtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHdpZHRoOiA2NHB4O1xyXG4gIGhlaWdodDogNjRweDtcclxufVxyXG4ubGRzLXJpbmcgZGl2IHtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB3aWR0aDogNTFweDtcclxuICBoZWlnaHQ6IDUxcHg7XHJcbiAgbWFyZ2luOiA2cHg7XHJcbiAgYm9yZGVyOiA2cHggc29saWQgYmxhY2s7XHJcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gIGFuaW1hdGlvbjogbGRzLXJpbmcgMS4ycyBjdWJpYy1iZXppZXIoMC41LCAwLCAwLjUsIDEpIGluZmluaXRlO1xyXG4gIGJvcmRlci1jb2xvcjogI2EzZDk0ZSAjMDAwMDAwMDMjMDAwMDAwMDMjMDAwMDAwMDM7O1xyXG59XHJcbi5sZHMtcmluZyBkaXY6bnRoLWNoaWxkKDEpIHtcclxuICBhbmltYXRpb24tZGVsYXk6IC0wLjQ1cztcclxufVxyXG4ubGRzLXJpbmcgZGl2Om50aC1jaGlsZCgyKSB7XHJcbiAgYW5pbWF0aW9uLWRlbGF5OiAtMC4zcztcclxufVxyXG4ubGRzLXJpbmcgZGl2Om50aC1jaGlsZCgzKSB7XHJcbiAgYW5pbWF0aW9uLWRlbGF5OiAtMC4xNXM7XHJcbn1cclxuQGtleWZyYW1lcyBsZHMtcmluZyB7XHJcbiAgMCUge1xyXG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XHJcbiAgfVxyXG4gIDEwMCUge1xyXG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcclxuICB9XHJcbn1cclxuXHJcbi8qXHJcbkVuZCBMb2FkZXIgIFxyXG4qL1xyXG4iXX0= */\"","module.exports = \"<div *ngIf=\\\"showSpinnerFlag\\\" id=\\\"appSpinner\\\" class=\\\"giSpinner\\\">\\r\\n\\r\\n  <!-- <img id=\\\"appSpinner_img\\\" [src]=\\\"imgSrc\\\" class=\\\"giSpinnerImg rotating\\\" />\\r\\n  <div>\\r\\n    <strong style=\\\"margin-top:90%;color:#a3d94e\\\">Loading</strong>\\r\\n  </div> -->\\r\\n  <div class=\\\"loader\\\">\\r\\n    <div class=\\\"lds-ring\\\">\\r\\n      <div></div>\\r\\n      <div></div>\\r\\n      <div></div>\\r\\n      <div></div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { NdpSpinnerService } from '../ndp-spinner.service';\r\nimport { AnimationService } from 'src/app/shared/services/animation.service';\r\n\r\n@Component({\r\n  selector: 'ndp-spinner',\r\n  templateUrl: './ndp-spinner.component.html',\r\n  styleUrls: ['./ndp-spinner.component.css']\r\n})\r\nexport class NdpSpinnerComponent implements OnInit {\r\n\r\n   /**\r\n   * Source of the image relative to this component.ts (this is tricky and should be modified);\r\n   */\r\n  @Input() imgSrc: string;\r\n  constructor(private spinnerService: NdpSpinnerService, private animationUtil: AnimationService) {\r\n  }\r\n  showSpinnerFlag: boolean;\r\n\r\n  ngOnInit() {\r\n    let scope = this;\r\n    function changeSpinnerFlag(flag: boolean) {\r\n      // //console.log(\"giSpinnerHw Flag Changed \" + flag)\r\n      scope.showSpinnerFlag = flag;\r\n    }\r\n    this.spinnerService.getSpinnerState().subscribe(spinnerState => changeSpinnerFlag(spinnerState)\r\n    );\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NdpSpinnerComponent } from './ndp-spinner/ndp-spinner.component';\r\nimport { NdpSpinnerService } from './ndp-spinner.service';\r\n\r\n@NgModule({\r\n  declarations: [NdpSpinnerComponent],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  providers: [NdpSpinnerService],\r\n  exports: [NdpSpinnerComponent]\r\n})\r\nexport class NdpspinnerModule { }\r\n","module.exports = \"\\r\\nlabel {padding-right: 20px;}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVwb3J0cy9yZXBvcnQtcGFnZS9yZXBvcnQtcGFnZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxPQUFPLG1CQUFtQixDQUFDIiwiZmlsZSI6InNyYy9hcHAvcmVwb3J0cy9yZXBvcnQtcGFnZS9yZXBvcnQtcGFnZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmxhYmVsIHtwYWRkaW5nLXJpZ2h0OiAyMHB4O30iXX0= */\"","module.exports = \"<div class=\\\"page-content\\\">\\r\\n    <div class=\\\"groups\\\">\\r\\n        <div class=\\\" no-gutters\\\">\\r\\n            <div class=\\\"p-col-5\\\">\\r\\n                <div class=\\\"page-title\\\">\\r\\n                    Business Entities Usage Report\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"p-col-7 col-lg-12 text-right \\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <label>Business Entities : </label>\\r\\n                    <p-multiSelect [options]=\\\"entityItems\\\" [(ngModel)]=\\\"reportRequestModel.entityModels\\\"></p-multiSelect>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <label> Date : </label>\\r\\n                    <p-calendar [(ngModel)]=\\\"reportRequestModel.dateRange\\\" selectionMode=\\\"range\\\" [inline]=\\\"true\\\"\\r\\n                        showButtonBar=\\\"true\\\"  [maxDate]=\\\"maxDateValue\\\"></p-calendar>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <button (click)=\\\"runReport()\\\" class=\\\"button button-green mr-2\\\">\\r\\n                        Run\\r\\n                    </button>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport * as fileSaver from 'file-saver';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { EntityServiceService } from 'src/app/entity/entity-service.service';\r\nimport { ReportsService } from \"src/app/reports/reports.service\";\r\nimport { EntityModel } from 'src/app/shared/models/entity-model';\r\nimport { ReportResponseModel } from 'src/app/shared/models/ReportResponseModel';\r\nimport { ReportRequestModel } from \"src/app/shared/models/ReportRequestModel\";\r\nimport { AngularCsv } from 'angular7-csv/dist/Angular-csv';\r\nimport { NdpMessageService } from 'src/app/shared/services/ndp-message.service';\r\n\r\n@Component({\r\n  selector: 'ndp-report-page',\r\n  templateUrl: './report-page.component.html',\r\n  styleUrls: ['./report-page.component.css']\r\n})\r\n\r\n\r\nexport class ReportPageComponent implements OnInit {\r\n  allEntities: Array<EntityModel>;\r\n  entityItems: Array<SelectItem> = new Array<SelectItem>();\r\n  selectedEntityIds: number[] = [];//TODO selectedEntityIds ... to Array of Integers \r\n  maxDateValue: Date = new Date();\r\n  reportRequestModel: ReportRequestModel = new ReportRequestModel();\r\n\r\n\r\n  constructor(private entityService: EntityServiceService, private reportsService: ReportsService\r\n    ,private messageService: NdpMessageService) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.entityService.getAllEntity().subscribe(resp => {\r\n      this.allEntities = resp.responsePayload;\r\n      if (this.allEntities) {\r\n        this.allEntities.forEach(entity => {\r\n          this.entityItems.push({ label: entity.entityName, value: entity.entityId });\r\n        })\r\n        this.entityItems = JSON.parse(JSON.stringify(this.entityItems));\r\n      }\r\n    });\r\n  }\r\n\r\n  runReport() {\r\n    debugger;\r\n    if (this.reportRequestModel.entityModels.length > 0) {\r\n      this.reportRequestModel.type = 1;\r\n\r\n      this.reportsService.generateReport(this.reportRequestModel).subscribe(res => {\r\n        let reportResponse: ReportResponseModel = res.responsePayload;\r\n\r\n        let fileContent: string = decodeURIComponent(Array.prototype.map.call(atob(decodeURIComponent(reportResponse.fileContent)),\r\n         (c) => {\r\n          return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\r\n          debugger;\r\n        }).join(\"\"));/*reportResponse.fileContent*///atob(reportResponse.fileContent);\r\n        const blob = new Blob([\"\\ufeff\", fileContent], { type: 'text/csv' });\r\n        fileSaver.saveAs(blob, reportResponse.filename);\r\n        //new AngularCsv(blob, \"Sample\", this.csvOptions);\r\n      });\r\n    }else{\r\n      this.messageService.addWarnings(['Please select at least one business entity']);\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { ReportPageComponent } from './report-page/report-page.component';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { CalendarModule } from 'primeng/calendar';\r\n\r\n@NgModule({\r\n  declarations: [ReportPageComponent],\r\n  imports: [\r\n    CommonModule,\r\n    DropdownModule,\r\n    FormsModule,\r\n    MultiSelectModule,\r\n    CalendarModule\r\n  ],\r\n  exports: [ReportPageComponent]\r\n})\r\nexport class ReportModule {\r\n\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { ApiRequest } from '../shared/models/api-request';\r\nimport { ApiResponse } from '../shared/models/api-response';\r\nimport { ReportRequestModel } from \"../shared/models/ReportRequestModel\";\r\nimport{ReportResponseModel}from \"../shared/models/ReportResponseModel\";\r\nimport { BaseService } from '../shared/services/base-service';\r\nimport { Defines } from '../shared/static/defines';\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ReportsService extends BaseService {\r\n    myHttpOptions = {\r\n        headers: new HttpHeaders({\r\n            'Access-Control-Allow-Origin': '*',\r\n            'Access-Control-Allow-Methods': 'POST',\r\n            'Access-Control-Allow-Headers': 'Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With',\r\n            'Content-Type': 'text/csv',\r\n            observe: 'response',\r\n            responseType: 'text/csv'\r\n        })\r\n    };\r\n    constructor(private client: HttpClient) {\r\n        super(client);\r\n    }\r\n    initAuthorizationUrl() {\r\n        this.authorizationUrl += this.secureApi + Defines.API_ENDPOINTS.REPORTS;\r\n        console.log(\"Authorization Url =>\", this.authorizationUrl);\r\n    }\r\n\r\n    public generateReport(model: ReportRequestModel):Observable<ApiResponse<ReportResponseModel>> {\r\n        let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.REPORTS + Defines.API_ENDPOINTS.GENERATE_REPORT;\r\n        console.log(\"REPORT params before generation is =>  \", model);\r\n        debugger;\r\n        const obs: Observable<any> = this.http.post<ApiResponse<ReportResponseModel>>\r\n        (apiUrl, new ApiRequest(model, \"\"), this.httpOptions);\r\n        return obs;\r\n    }\r\n\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n\r\n            // TODO: send the error to remote logging infrastructure\r\n            console.error(error); // log to console instead\r\n\r\n            // TODO: better job of transforming error for user consumption\r\n            console.log(`${operation} failed: ${error.message}`);\r\n\r\n            // Let the app keep running by returning an empty result.\r\n            return of(result as T);\r\n        };\r\n\r\n    }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JvbGVzL2FkZC1lZGl0LXJvbGUvYWRkLWVkaXQtcm9sZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"page-content \\\">\\r\\n    <div class=\\\"roles-management\\\">\\r\\n        <div class=\\\"row no-gutters animated faster fadeInUp\\\">\\r\\n            <div class=\\\"col-6\\\">\\r\\n                <div class=\\\"page-title \\\">\\r\\n                    Role Management\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-6 text-right\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-9\\\">\\r\\n                    </div>\\r\\n                    <!--div class=\\\"col-3\\\">\\r\\n            <a class=\\\"button button-green\\\"> Save </a>\\r\\n          </div-->\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"section animated fadeInUp\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div *ngIf=\\\"mode === 0\\\" class=\\\"col-6 text-left section-title\\\">\\r\\n                    Create Role\\r\\n                </div>\\r\\n                <div *ngIf=\\\"mode === 1\\\" class=\\\"col-6 text-left section-title\\\">\\r\\n                    Edit Role\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row mt-2 \\\">\\r\\n\\r\\n                <div class=\\\"col-3\\\">\\r\\n                    <div class=\\\"form-input form-input-timepicker \\\">\\r\\n                        <label class=\\\"form-input-label\\\">Role Name </label>\\r\\n\\r\\n                        <input name=\\\"roleName\\\" class=\\\"input\\\"  maxlength=\\\"25\\\" nfSpecialCharacters   \\r\\n                            [ngClass]=\\\"{'invalid-input': found}\\\" [(ngModel)]=\\\" role.label\\\"\\r\\n                            (change)=\\\"roleCheck(role.label);\\\">\\r\\n                        <div *ngIf=\\\"found\\\" class=\\\"invalid-text\\\">Role Name Already Exists</div>\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-1\\\"></div>\\r\\n                <div class=\\\"col-4\\\">\\r\\n                    <div class=\\\"form-input form-input-timepicker \\\">\\r\\n                        <label class=\\\"form-input-label\\\">Role Description </label>\\r\\n                        <input class=\\\"input\\\" [(ngModel)]=\\\"role.descreption\\\"  maxlength=\\\"500\\\"  >\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-1\\\"></div>\\r\\n                <!--div class=\\\"col-3\\\">\\r\\n          <div class=\\\"color-gray-dark title-robotomedium heading-6\\\">Edit Roles</div>\\r\\n          <div>switch</div>\\r\\n        </div-->\\r\\n            </div>\\r\\n            <div *ngIf=\\\"privilegesList\\\" class=\\\"row mt-3\\\">\\r\\n                <div class=\\\"col-6 pb-4\\\" *ngFor=\\\"let privilege of privilegesList | orderBy: key : reverse \\\"\\r\\n                    style=\\\"border-bottom: 1px dashed #cecece;\\\">\\r\\n                    <div class=\\\"pt-4\\\">\\r\\n                        <div class=\\\"custom-control custom-checkbox text-muted\\\">\\r\\n                            <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" [id]=\\\"privilege.label\\\"\\r\\n                                [checked]=\\\"getPrivilegeCheck(privilege)\\\"\\r\\n                                (change)=\\\"onSelectPrivilege($event, privilege.id)\\\">\\r\\n                            <label class=\\\"custom-control-label\\\" [for]=\\\"privilege.label\\\">\\r\\n                                {{privilege.label}}\\r\\n                            </label>\\r\\n                            <div class=\\\"heading-8 color-gray\\\">\\r\\n                                {{privilege.descreption}}\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row pl-1\\\"> <!--*ngIf=\\\"checkPrivilegeActive(privilege.id)\\\"-->\\r\\n                        <div class=\\\"col-6\\\"\\r\\n                            *ngFor=\\\"let child of getPrivilageChildren(privilege) | orderBy: key : reverse\\\">\\r\\n                            <div class=\\\"sub-checkboxes\\\">\\r\\n                                <div class=\\\"pt-2 mb-1\\\">\\r\\n                                    <div class=\\\"custom-control custom-checkbox text-muted\\\">\\r\\n                                        <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" [id]=\\\"child.label\\\"\\r\\n                                            [checked]=\\\"getPrivilegeCheck(child)\\\"\\r\\n                                            (change)=\\\"onSelectPrivilege($event, child.id)\\\">\\r\\n                                        <label class=\\\"custom-control-label\\\" style=\\\"font-size: 14px;\\\"\\r\\n                                            [for]=\\\"child.label\\\">\\r\\n                                            {{getPrivilageLabel(child.label) | titlecase}}\\r\\n                                        </label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row pl-1 mb-3\\\" *ngIf=\\\"checkPrivilegeActive(child.id) && child.needsAccessLevel\\\">\\r\\n                                <div class=\\\"col-3\\\">\\r\\n                                    <div class=\\\"sub-checkboxes\\\">\\r\\n                                        <div class=\\\"form-input form-radiobtn\\\">\\r\\n                                            <div class=\\\"custom-control custom-radio\\\">\\r\\n                                                <input type=\\\"radio\\\" class=\\\"custom-control-input\\\"\\r\\n                                                    [id]=\\\"'self' + child.id\\\" [name]=\\\"child.label\\\"\\r\\n                                                    (click)=\\\"setAccessLevel(1, child)\\\"\\r\\n                                                    [checked]=\\\"getAccessLevelRadio(1, child)\\\">\\r\\n                                                <label class=\\\"custom-control-label\\\"\\r\\n                                                    style=\\\"font-size: 12px; padding-top: 3px;\\\"\\r\\n                                                    [for]=\\\"'self' + child.id\\\">Self</label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-3\\\">\\r\\n                                    <div class=\\\"form-input form-radiobtn\\\">\\r\\n                                        <div class=\\\" custom-control custom-radio\\\">\\r\\n                                            <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" [id]=\\\"'entity' + child.id\\\"\\r\\n                                                [name]=\\\"child.label\\\" (click)=\\\"setAccessLevel(2, child)\\\"\\r\\n                                                [checked]=\\\"getAccessLevelRadio(2, child)\\\">\\r\\n                                            <label class=\\\"custom-control-label\\\"\\r\\n                                                style=\\\"font-size: 12px; padding-top: 3px;\\\"\\r\\n                                                [for]=\\\"'entity' + child.id\\\">Entity</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-3\\\">\\r\\n                                    <div class=\\\"form-input form-radiobtn\\\">\\r\\n                                        <div class=\\\"custom-control custom-radio\\\">\\r\\n                                            <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" [id]=\\\"'all' + child.id\\\"\\r\\n                                                [name]=\\\"child.label\\\" (click)=\\\"setAccessLevel(3, child)\\\"\\r\\n                                                [checked]=\\\"getAccessLevelRadio(3, child)\\\">\\r\\n                                            <label class=\\\"custom-control-label\\\"\\r\\n                                                style=\\\"font-size: 12px; padding-top: 3px;\\\"\\r\\n                                                [for]=\\\"'all' + child.id\\\">Everyone</label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row mt-5 pt-3 pb-2\\\">\\r\\n                <div class=\\\"col-12 justify-content-center text-right\\\">\\r\\n                    <button (click)=\\\"onClickSave()\\\" class=\\\"button button-green mr-2 pr-4 pl-4\\\">\\r\\n                        Save\\r\\n                    </button>\\r\\n                    <button (click)=\\\"onClickCancel()\\\" class=\\\"button button-black mr-2\\\">\\r\\n                        Cancel\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { RoleManagerService } from '../role-manager.service';\r\nimport { PrivilegeModel } from 'src/app/shared/models/privilege-model';\r\nimport { RoleModel } from 'src/app/shared/models/role-model';\r\nimport { RolePrivilegeModel } from 'src/app/shared/models/role-privilege-model';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'ndp-add-edit-role',\r\n  templateUrl: './add-edit-role.component.html',\r\n  styleUrls: ['./add-edit-role.component.css']\r\n})\r\nexport class AddEditRoleComponent implements OnInit {\r\n  allRolesList = new Array<RoleModel>();\r\n  role: RoleModel;\r\n  privilegesList: Array<PrivilegeModel>;\r\n  found = false;\r\n  invalidLength = false;\r\n  /*SORTING*/\r\n  key = 'label';\r\n  reverse = false;\r\n  /*=============================*/\r\n  mode = 0;\r\n  descriptionError:string=\"\";\r\n  nameError:string=\"\";\r\n  roleForm = new FormGroup({\r\n    roleName: new FormControl('', [Validators.required, Validators.maxLength(25)]),\r\n    roleDescription: new FormControl('', [Validators.required, Validators.maxLength(25)])\r\n  });\r\n  constructor(private rolesService: RoleManagerService, private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.role = new RoleModel();\r\n    this.role.isEditable = true;\r\n    this.role.privilegeList = new Array<RolePrivilegeModel>();\r\n\r\n    // Load All Available Privileges\r\n    this.loadPrivileges();\r\n    console.log('Privilage List Before Roles', this.role.privilegeList);\r\n    console.log('getting roles');\r\n    this.rolesService.getAllRoles().subscribe(roles => {\r\n      this.allRolesList = roles.responsePayload;\r\n    });\r\n    console.log('got roles', this.allRolesList);\r\n    console.log('Privilage List After Roles', this.role.privilegeList);\r\n    this.route.paramMap.subscribe(params => {\r\n      const roleId = +params.get('id');\r\n      console.log('url role ' + roleId);\r\n      if (roleId) {\r\n        this.mode = 1;\r\n        this.getRole(roleId);\r\n      } else {\r\n        this.mode = 0;\r\n      }\r\n    });\r\n  }\r\n  roleCheck(s: string) {\r\n    console.log('change ' + s);\r\n    this.found = false;\r\n    this.allRolesList.forEach(r => {\r\n      if (r.label === s) {\r\n        this.found = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  validateLength(s: string, l: number) {\r\n    if(l==25){\r\n    if (s.length > l)\r\n       this.nameError=\"Role Name must not exceed \"+l+\" characters\";\r\n       else \r\n       this.nameError=\"\";\r\n  }else{\r\n    if (s.length > l)\r\n       this.descriptionError=\"Role Description must not exceed \"+l+\" characters\";\r\n       else \r\n       this.descriptionError=\"\";\r\n  }\r\n  }\r\n\r\n  getRole(roleId: number) {\r\n    this.rolesService.getRole(roleId).subscribe(response => {\r\n      this.role = new RoleModel();\r\n      this.role = response.responsePayload;\r\n      console.log('got role ', this.role);\r\n    });\r\n  }\r\n\r\n  sort(key) {\r\n    this.key = key;\r\n    this.reverse = !this.reverse;\r\n  }\r\n\r\n  loadPrivileges() {\r\n    this.rolesService.getAllPrivilege().subscribe(response => {\r\n      this.privilegesList = new Array<PrivilegeModel>();\r\n      response.responsePayload.forEach(priv => {\r\n        if (priv.isDefault) {\r\n          const rolePriv = new RolePrivilegeModel(null, priv.id, 3);\r\n          this.role.privilegeList.push(rolePriv);\r\n          if (priv.childList) {\r\n            priv.childList.forEach(child => {\r\n              const p = new RolePrivilegeModel(null, child.id, 3);\r\n              this.role.privilegeList.push(p);\r\n            });\r\n          }\r\n        } else {\r\n          this.privilegesList.push(priv);\r\n        }\r\n      });\r\n      // this.privilegesList = response.responsePayload;\r\n      console.log('new role is ', this.role.privilegeList);\r\n    });\r\n  }\r\n\r\n  onSelectPrivilege(eventObject, pid: number) {\r\n    if (this.role.privilegeList) {\r\n      if (eventObject.target.checked) {\r\n        const rolePrivilege = new RolePrivilegeModel(null, pid, 1);\r\n        this.role.privilegeList.push(rolePrivilege);\r\n      } else {\r\n        const par = this.privilegesList.findIndex(p => p.id === pid);\r\n        if (par !== -1) {\r\n          this.privilegesList[par].childList.forEach(obj => {\r\n            const child = this.role.privilegeList.findIndex(p => p.privilegeId === obj.id);\r\n            if (child !== -1) {\r\n              this.role.privilegeList.splice(child, 1);\r\n            }\r\n          });\r\n        }\r\n        const index = this.role.privilegeList.findIndex(p => p.privilegeId === pid);\r\n        this.role.privilegeList.splice(index, 1);\r\n      }\r\n      console.log('Current Privilage List', this.role.privilegeList);\r\n    }\r\n  }\r\n\r\n  checkPrivilegeActive(pid: number) {\r\n    if (this.role.privilegeList) {\r\n      if (this.role.privilegeList.findIndex(p => p.privilegeId === pid) !== -1) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getPrivilageChildren(p: PrivilegeModel) {\r\n    return p.childList;\r\n  }\r\n\r\n  getPrivilageLabel(s: string) {\r\n    return s;\r\n    // return s.substring(0, s.indexOf(' '));\r\n  }\r\n\r\n  setAccessLevel(n: number, p: PrivilegeModel) {\r\n    if (this.role.privilegeList) {\r\n      console.log('P to set ', p);\r\n      const index = this.role.privilegeList.findIndex(i => i.privilegeId === p.id);\r\n      console.log('index ', index);\r\n      this.role.privilegeList[index].accessLevel = n;\r\n    }\r\n  }\r\n\r\n  getPrivilegeCheck(p: PrivilegeModel) {\r\n    if (this.role.privilegeList) {\r\n      const index = this.role.privilegeList.findIndex(i => i.privilegeId === p.id);\r\n      return (index !== -1);\r\n    }\r\n  }\r\n  getAccessLevelRadio(n: number, p: PrivilegeModel) {\r\n    if (this.role.privilegeList) {\r\n      const index = this.role.privilegeList.findIndex(i => i.privilegeId === p.id);\r\n      return this.role.privilegeList[index].accessLevel === n;\r\n    }\r\n  }\r\n\r\n  onClickSave() {\r\n\r\n    if (this.found) {\r\n      return;\r\n    }\r\n    if (this.role.privilegeList.length > 0) {\r\n      if (this.mode === 0) {\r\n        this.rolesService.addRole(this.role).subscribe(response => {\r\n          console.log('Creating Role ', response.responsePayload);\r\n          this.navigateBack();\r\n        });\r\n      } else {\r\n        this.rolesService.editRole(this.role).subscribe(response => {\r\n          console.log('Updating Role ', response.responsePayload);\r\n          this.navigateBack();\r\n        });\r\n      }\r\n\r\n    } else {\r\n      console.log('Select at least 1 privilage');\r\n      alert('Select at least 1 privilage');\r\n    }\r\n  }\r\n\r\n  navigateBack() {\r\n    this.router.navigate(['roles']);\r\n  }\r\n\r\n  onClickCancel() {\r\n    this.navigateBack();\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JvbGVzL2FkZC1lZGl0L2FkZC1lZGl0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\r\\n<p-scrollPanel [style]=\\\"{width: '100%', height: '400px'}\\\">\\r\\n<div class=\\\"ui-g ui-fluid\\\" style=\\\"font-size:16px;padding:20px\\\">\\r\\n        <div class=\\\"ui-g-12\\\">\\r\\n                <div class=\\\"ui-g-12 ui-md-6 ui-lg-4\\\">\\r\\n                        <span class=\\\"ui-float-label\\\">\\r\\n                                <input id=\\\"float-input\\\" [(ngModel)]=\\\"editedRole.label\\\" type=\\\"text\\\" size=\\\"30\\\" pInputText>\\r\\n                                <label for=\\\"float-input\\\">label</label>\\r\\n                        </span>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"ui-g-12 ui-md-6 ui-lg-4\\\">\\r\\n                        <span class=\\\"ui-float-label\\\">\\r\\n                                <input id=\\\"float-input\\\" [(ngModel)]=\\\"editedRole.descreption\\\" type=\\\"text\\\" size=\\\"30\\\"\\r\\n                                        pInputText>\\r\\n                                <label for=\\\"float-input\\\">descreption</label>\\r\\n                        </span>\\r\\n                </div>\\r\\n                <div class=\\\"ui-g-12 ui-md-6 ui-lg-4\\\">\\r\\n                        <p-checkbox label=\\\"isEditable\\\" [(ngModel)]=\\\"editedRole.isEditable\\\" binary=\\\"true\\\"></p-checkbox>\\r\\n                </div>\\r\\n\\r\\n        </div>\\r\\n        \\r\\n        <div class=\\\"ui-g-12\\\" *ngFor=\\\"let privilege of allPrivileges\\\">\\r\\n                <div class=\\\"ui-g-12\\\">\\r\\n                        <p-checkbox name=\\\"group2\\\" [value]=\\\"privilege.id\\\" [label]=\\\"privilege.label\\\"\\r\\n                                [(ngModel)]=\\\"selectedPrivileges\\\" inputId=\\\"privilege.id\\\"></p-checkbox>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"ui-g-12 ui-md-6 ui-lg-4\\\" *ngFor=\\\"let childPrivilege of privilege.childList\\\">\\r\\n\\r\\n                        <p-checkbox name=\\\"group2\\\" [value]=\\\"childPrivilege.id\\\"  [label]=\\\"childPrivilege.label\\\"\\r\\n                                [(ngModel)]=\\\"selectedPrivileges\\\" inputId=\\\"childPrivilege.id\\\"\\r\\n                                (onChange)=\\\"onSelectionChange($event, childPrivilege)\\\"></p-checkbox>\\r\\n\\r\\n                        <p-dropdown  (onChange)=\\\"changeLevel($event ,childPrivilege.id )\\\" [options]=\\\"levelselectItem\\\"    *ngIf=\\\"(rolePrivModelMap[childPrivilege.id])\\\"  [(ngModel)]=\\\"(rolePrivModelMap[childPrivilege.id]).level\\\">\\r\\n                               \\r\\n                                <ng-template let-level pTemplate>\\r\\n                                    <div class=\\\"ui-helper-clearfix\\\" style=\\\"position: relative;height: 25px;\\\">\\r\\n                                        <div style=\\\"font-size:14px;float:right;margin-top:4px\\\">{{level.label}}</div>\\r\\n                                    </div>\\r\\n                                </ng-template>\\r\\n                            </p-dropdown> \\r\\n\\r\\n                </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"ui-g-12\\\">\\r\\n                <div class=\\\"ui-g-12 ui-md-6 ui-lg-4\\\">\\r\\n                        <button pButton type=\\\"button\\\" label=\\\"Save\\\" (click)=\\\"saveRole()\\\" class=\\\"ui-button-rounded\\\"></button>  \\r\\n                </div>\\r\\n                <div class=\\\"ui-g-12 ui-md-6 ui-lg-4\\\">\\r\\n                        <button pButton type=\\\"button\\\" label=\\\"Cancel\\\" (click)=\\\"Cancel()\\\" class=\\\"ui-button-rounded\\\"></button>  \\r\\n                </div>\\r\\n        </div>\\r\\n        <!-- <button pButton type=\\\"button\\\" label=\\\"Save\\\" (click)=\\\"saveRole()\\\" class=\\\"ui-button-rounded\\\"></button> -->\\r\\n\\r\\n</div>\\r\\n\\r\\n</p-scrollPanel>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { RoleModel } from 'src/app/shared/models/role-model';\r\nimport { PrivilegeModel } from 'src/app/shared/models/privilege-model';\r\nimport { RolePrivilegeModel } from 'src/app/shared/models/role-privilege-model';\r\nimport { LookupModel } from 'src/app/shared/models/lookup-model';\r\nimport { RoleManagerService } from '../role-manager.service';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { NdpMessageService } from 'src/app/shared/services/ndp-message.service';\r\n\r\n@Component({\r\n  selector: 'ndp-add-edit',\r\n  templateUrl: './add-edit.component.html',\r\n  styleUrls: ['./add-edit.component.css']\r\n})\r\nexport class AddEditComponent implements OnInit {\r\n\r\n  @Input(\"rolemodel\")\r\n  inputRole: RoleModel;\r\n\r\n  editedRole: RoleModel;\r\n\r\n  @Input(\"privilegeList\")\r\n  allPrivileges = new Array<PrivilegeModel>();\r\n\r\n  @Input(\"mode\")\r\n  mode: number;\r\n\r\n  @Input(\"accessLevelList\")\r\n  accessLevelList = new Array<LookupModel>();\r\n\r\n  @Output(\"outputrole\")\r\n  outputrole = new EventEmitter<RoleModel>();\r\n\r\n  @Output(\"isCanceled\")\r\n  isCanceled = new EventEmitter<number>();\r\n\r\n  privIdx: number;\r\n  levelstr: string;\r\n  selectedPrivileges: number[] = [];\r\n  levelselectItem: SelectItem[];\r\n  rolePrivModelMap: any = {};\r\n\r\n  constructor(private roleServicer: RoleManagerService, private messageService: NdpMessageService) { }\r\n\r\n  ngOnInit() {\r\n\r\n\r\n    if (this.mode == 0) {\r\n      this.editedRole = new RoleModel();\r\n\r\n    } else {\r\n      this.editedRole = Object.assign({}, this.inputRole);\r\n      console.log(\"On Init\");\r\n      this.editedRole.privilegeList.forEach(rolePriv => {\r\n        this.selectedPrivileges.push(rolePriv.privilegeId);\r\n        console.log(\"adding Role Priv =>\", rolePriv);\r\n        this.rolePrivModelMap[rolePriv.privilegeId] = rolePriv;\r\n      });\r\n      //debugger;\r\n      this.levelselectItem = [];\r\n      this.levelselectItem.push({ label: \"Select level\", value: 0 })\r\n      this.accessLevelList.forEach(level => {\r\n\r\n        this.levelselectItem.push({ label: level.label, value: level.id })\r\n      });\r\n      console.log(\"RolePrivModel Map =>\", this.rolePrivModelMap);\r\n    }\r\n    //debugger;\r\n\r\n  }\r\n  prepareRolePrivilegeModelMap() {\r\n\r\n  }\r\n  editrow() {\r\n    debugger\r\n    console.log(\"editedRole ==>> \", this.editedRole);\r\n  }\r\n\r\n  onSelectionChange(checked: any, privelegeMod: PrivilegeModel) {\r\n    console.log(\"Event\", event);\r\n    if (checked) {\r\n      this.rolePrivModelMap[privelegeMod.id] = new RolePrivilegeModel(this.editedRole.id, privelegeMod.id, null);\r\n    } else {\r\n      this.rolePrivModelMap[privelegeMod.id] = null;\r\n    }\r\n\r\n    console.log(\"selected priv\", this.rolePrivModelMap);\r\n  }\r\n  getRolePrivilegeModel = function (privilegeId: number): RolePrivilegeModel {\r\n    console.log(\"getPrivilegeModel\");\r\n    let rolePriv: RolePrivilegeModel;\r\n    rolePriv = this.editedRole.privilegeList.find(rp => rp.privilegeId == privilegeId);\r\n    console.log(\"Found Role Priv => \", rolePriv);\r\n    return rolePriv;\r\n  }\r\n\r\n  isparent(privilegeId: number): boolean {\r\n    let parent = false;\r\n    this.allPrivileges.forEach(privi => {\r\n      if (privi.id == privilegeId) {\r\n        parent = true;\r\n\r\n      }\r\n    }\r\n    );\r\n\r\n    return parent;\r\n  }\r\n\r\n  saveRole() {\r\n    this.editedRole.privilegeList = [];\r\n    let isvalid = true;\r\n    this.selectedPrivileges.forEach(rolePriv => {\r\n      //debugger;\r\n      if (this.isparent(rolePriv)) {\r\n        this.editedRole.privilegeList.push(new RolePrivilegeModel(this.editedRole.id,\r\n          this.rolePrivModelMap[rolePriv].privilegeId, null))\r\n      } else {\r\n        if (this.rolePrivModelMap[rolePriv].level == null || this.rolePrivModelMap[rolePriv].level == 0) {\r\n          this.messageService.addWarnings([\"Please select privilege level \"]);\r\n          isvalid = false;\r\n        } else {\r\n          this.editedRole.privilegeList.push(new RolePrivilegeModel(this.editedRole.id,\r\n            this.rolePrivModelMap[rolePriv].privilegeId, this.rolePrivModelMap[rolePriv].level))\r\n        }\r\n      }\r\n      console.log(\"adding Role Priv =>\", rolePriv);\r\n    });\r\n\r\n    //debugger;\r\n    if (this.editedRole.label == null || this.editedRole.label == \"\") {\r\n      this.messageService.addWarnings([\"Please enter role label \"]);\r\n      isvalid = false;\r\n    }\r\n\r\n    if (this.mode == 1 && isvalid) {\r\n      //debugger;\r\n      console.log(\"edited role \", this.editedRole);\r\n      this.roleServicer.editRole(this.editedRole).subscribe(resp => {\r\n        //debugger;\r\n        console.log(\"set output params \")\r\n        this.outputrole.emit(this.editedRole);\r\n      });\r\n    } else if (this.mode == 0 && isvalid) {\r\n      //debugger;\r\n      this.roleServicer.addRole(this.editedRole).subscribe(resp => {\r\n        //debugger;\r\n        console.log(\"inserted Id\", resp.responsePayload)\r\n        this.editedRole.id = resp.responsePayload;\r\n        this.outputrole.emit(this.editedRole);\r\n\r\n      });\r\n\r\n\r\n    }\r\n\r\n  }\r\n\r\n  Cancel() {\r\n    this.isCanceled.emit(1);\r\n  }\r\n\r\n\r\n  changeLevel(event: any, privilegeId: number) {\r\n    //debugger;\r\n    this.rolePrivModelMap[privilegeId].level = event.value;\r\n    console.log(\"test : \" + event);\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JvbGVzL3JvbGUtbGlzdC9yb2xlLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"page-content\\\" (click)=\\\"onHideDropDown()\\\" *ngIf=\\\"allRolesList\\\">\\r\\n\\r\\n  <div class=\\\"row no-gutters mb-4\\\">\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <div class=\\\"page-title\\\">\\r\\n        Roles Management\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-xl-6 col-lg-12 text-right\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-8\\\">\\r\\n          <div class=\\\"search-input\\\">\\r\\n            <input [(ngModel)]=\\\"filter\\\" type=\\\"text\\\" class=\\\"\\\" placeholder=\\\"Search By Role Name\\\">\\r\\n            <i class=\\\"icon-search icon\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-4\\\">\\r\\n          <button ndpAuthorize [targetUrl]=\\\"authorizationUrl+ defines.CREATE_ROLE\\\"\\r\\n            (successHandler)=\\\"onCreateButtonClick()\\\" class=\\\"button button-green\\\">Create Role</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"allRolesList\\\">\\r\\n    <div *ngIf=\\\"setFilteredRolesList(allRolesList | roleLabelFilter:filter)\\\"></div>\\r\\n    <div class=\\\"campaigns-list\\\"\\r\\n      *ngFor=\\\"let role of filteredRolesList | orderBy: key : reverse | paginate: { itemsPerPage: perPage, currentPage: p }; let i = index\\\">\\r\\n      <div class=\\\"row confirmDialog animated fadeIn faster\\\" *ngIf=\\\"deleteConfirm && (deleteConfirmId == role.id)\\\">\\r\\n        <div class=\\\"col-12\\\">Are you sure you want to delete <b>{{role.label}}</b> role ?</div>\\r\\n        <div class=\\\"col-12 mt-2\\\">\\r\\n          <button class=\\\"button button-green mr-4\\\" (click)=\\\"delete(role)\\\">DELETE</button>\\r\\n          <button class=\\\"button button-black \\\" (click)=\\\"hideConfirmDelete()\\\">CANCEL</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"(dropDownId === role.id)\\\" [ngClass]=\\\"{'hide':!dropDown}\\\"  class=\\\"dropdown animated flipInX faster\\\">\\r\\n        <ul class=\\\"list\\\">\\r\\n          <li ndpAuthorize [targetUrl]=\\\"authorizationUrl+ defines.UPDATE_ROLE\\\" [targetId]=\\\"role.id\\\"\\r\\n            (successHandler)=\\\"onEditButtonClick(role.id)\\\"><span class=\\\"fas fa-edit\\\"></span>Edit</li>\\r\\n          <li ndpAuthorize [targetUrl]=\\\"authorizationUrl+ defines.DELETE_ROLE\\\" [targetId]=\\\"role.id\\\"\\r\\n            (successHandler)=\\\"onDeleteButtonClick(role.id)\\\"><span class=\\\"fas fa-trash\\\"></span>Delete</li>\\r\\n        </ul>\\r\\n      </div>\\r\\n      <div class=\\\"row campaigns-item no-gutters my-auto\\\">\\r\\n        <div class=\\\"col-3\\\">\\r\\n          <div class=\\\"heading-6 title-robotomedium pt-2\\\">\\r\\n            {{role.label}}\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-4\\\">\\r\\n          <div class=\\\"color-gray heading-7\\\">Description</div>\\r\\n          <div class=\\\"heading-7\\\">{{role.descreption}}</div>\\r\\n        </div>\\r\\n        <div class=\\\"col-4 pt-2\\\">\\r\\n\\r\\n          <span class=\\\"color-green ml-1\\\">\\r\\n            {{role.userCount}} Users\\r\\n          </span>\\r\\n        </div>\\r\\n        <div class=\\\"col-1 my-auto text-right\\\">\\r\\n          <a (click)=\\\"onShowDropDown(role.id)\\\" class=\\\"campaigns-item-actions-link pointer\\\">\\r\\n            <i class=\\\"icon-dropdown-dots icon icon-lg color-dimmed\\\"></i>\\r\\n          </a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"filteredRolesList.length == 0 && inialized\\\">\\r\\n      <div class=\\\"row mt-4 animated fadeIn fast\\\">\\r\\n        <div class=\\\"col-12 mt-4 text-center\\\">\\r\\n          <div class=\\\"col-12 mt-4 fas fa-user-slash fa-7x faded-grey\\\"></div>\\r\\n          <div class=\\\"col-12 mt-4 page-title faded-grey\\\"><b>No Roles Found</b></div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"ngx-pagination\\\">\\r\\n      <div class=\\\"form-input form-input-select form-selectbox itemsNum animate fadeInUp\\\">\\r\\n        <label class=\\\"form-input-label\\\">Item/Page</label>\\r\\n        <select [(ngModel)]=\\\"perPage\\\" (change)=\\\"resetPagination()\\\" class=\\\"paginSelect\\\">\\r\\n          <option>2</option>\\r\\n          <option>5</option>\\r\\n          <option>10</option>\\r\\n          <option>20</option>\\r\\n          <option>50</option>\\r\\n        </select>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"allRolesList\\\" style=\\\"margin-left: 170px;\\\">\\r\\n        <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { RoleModel } from 'src/app/shared/models/role-model';\r\nimport { RoleManagerService } from '../role-manager.service';\r\nimport { NdpMessageService } from 'src/app/shared/services/ndp-message.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Defines } from 'src/app/shared/static/defines';\r\n@Component({\r\n  selector: 'ndp-role-list',\r\n  templateUrl: './role-list.component.html',\r\n  styleUrls: ['./role-list.component.css']\r\n})\r\nexport class RoleListComponent implements OnInit {\r\n  allRolesList = new Array<RoleModel>();\r\n  filteredRolesList = null;\r\n  roleId: number;\r\n  inialized = false;\r\n\r\n  dropDown: boolean;\r\n  dropDownClick: number;\r\n  dropDownId: number;\r\n\r\n  deleteConfirm: boolean;\r\n  deleteConfirmId: number;\r\n\r\n  /* Pagination Filtering & Sorting*/\r\n  p = 1;\r\n  perPage = 5;\r\n  /*FILTERING*/\r\n  filter: string;\r\n  /*SORTING*/\r\n  key = 'startDate';\r\n  reverse = true;\r\n  /*=============================*/\r\n\r\n    //Authorization Vars\r\n    authorizationUrl: string;\r\n    defines = Defines.API_CRUD;\r\n\r\n  constructor(private roleService: RoleManagerService, private router: Router, private messageService: NdpMessageService) { }\r\n\r\n  sort(key) {\r\n    this.key = key;\r\n    this.reverse = !this.reverse;\r\n  }\r\n  ngOnInit() {\r\n    //this.filteredRolesList = this.allRolesList;\r\n    this.authorizationUrl = this.roleService.authorizationUrl;\r\n    this.roleService.getAllRoles().subscribe(roles => {\r\n      this.allRolesList = roles.responsePayload;\r\n      this.inialized = true;\r\n    });\r\n  }\r\n\r\n  onCreateButtonClick() {\r\n    this.router.navigate(['roles/create']);\r\n  }\r\n  onEditButtonClick(roleId: number) {\r\n    console.log(\"Hi from onClick\");\r\n    this.router.navigate(['roles/edit', roleId]);\r\n  }\r\n  onDeleteButtonClick(roleId: number) {\r\n    this.deleteConfirm = true;\r\n    this.deleteConfirmId = roleId;\r\n  }\r\n\r\n  hideConfirmDelete() {\r\n    this.deleteConfirm = false;\r\n    this.deleteConfirmId = null;\r\n  }\r\n\r\n  delete(role: RoleModel) {\r\n    this.deleteConfirm = false;\r\n    if (role.userCount > 0) {\r\n      this.messageService.addError('Delete Failed', 'Cannot delete a role that has assigned users');\r\n      return;\r\n    }\r\n    this.roleService.deleteRole(role.id).subscribe(template => {\r\n      if (template.status === 0) {\r\n        this.allRolesList = this.allRolesList.filter(x => x.id !== role.id);\r\n      }\r\n    });\r\n  }\r\n\r\n  onShowDropDown(role: number) {\r\n    this.dropDownClick = 0;\r\n    this.dropDown = true;\r\n    this.dropDownId = role;\r\n  }\r\n  onHideDropDown() {\r\n    this.dropDownClick++;\r\n    if (this.dropDown && this.dropDownClick > 1) {\r\n      this.dropDown = false;\r\n    }\r\n  }\r\n\r\n  resetPagination() {\r\n    if (this.p > 1) {\r\n      this.p = 1;\r\n    }\r\n  }\r\n\r\n  setFilteredRolesList(filtered: RoleModel[]) {\r\n    this.filteredRolesList = filtered;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BaseService } from '../shared/services/base-service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ApiResponse } from '../shared/models/api-response';\r\nimport { Defines } from '../shared/static/defines';\r\nimport { ApiRequest } from '../shared/models/api-request';\r\nimport { map } from 'rxjs/operators';\r\nimport { RoleModel } from '../shared/models/role-model';\r\nimport { PrivilegeModel } from '../shared/models/privilege-model';\r\nimport { LookupModel } from '../shared/models/lookup-model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoleManagerService extends BaseService {\r\n  constructor(private client: HttpClient) {\r\n    super(client);\r\n  }\r\n  initAuthorizationUrl() {\r\n    this.authorizationUrl += this.secureApi + Defines.API_ENDPOINTS.ROLES;\r\n    console.log(\"Authorization Url =>\", this.authorizationUrl);\r\n  }\r\n  public getAllRoles(): Observable<ApiResponse<Array<RoleModel>>> {\r\n    let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.ROLES + Defines.API_ENDPOINTS.list;\r\n    let obs: Observable<any> = this.http.post<ApiResponse<Array<RoleModel>>>\r\n      (apiUrl, new ApiRequest(null, ''), this.httpOptions);\r\n    return obs;\r\n  }\r\n\r\n  public getRole(id: number): Observable<ApiResponse<RoleModel>> {\r\n    const apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.ROLES + Defines.API_ENDPOINTS.get;\r\n    const obs: Observable<any> = this.http.post<ApiResponse<RoleModel>>\r\n      (apiUrl, new ApiRequest(id, ''), this.httpOptions);\r\n    return obs;\r\n  }\r\n\r\n  public deleteRole(id: number): Observable<ApiResponse<any>> {\r\n    const apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.ROLES + Defines.API_ENDPOINTS.deleterole;\r\n    const obs: Observable<any> = this.http.post<ApiResponse<any>>\r\n      (apiUrl, new ApiRequest(id, ''), this.httpOptions);\r\n    return obs;\r\n  }\r\n\r\n\r\n  public getAllPrivilege(): Observable<ApiResponse<Array<PrivilegeModel>>> {\r\n    //debugger;\r\n    let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.loadPrivilege;\r\n    let obs: Observable<any> = this.http.post<ApiResponse<Array<PrivilegeModel>>>\r\n      (apiUrl, new ApiRequest(null, ''), this.httpOptions);\r\n    // .pipe(map((apiResponse: any) => new ApiResponse()));\r\n    return obs;\r\n  }\r\n\r\n  public getAllLevel(): Observable<ApiResponse<Array<LookupModel>>> {\r\n    //debugger;\r\n    let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.ROLES + Defines.API_ENDPOINTS.getaccesslevel;\r\n    let obs: Observable<any> = this.http.post<ApiResponse<Array<LookupModel>>>\r\n      (apiUrl, new ApiRequest(null, \"\"), this.httpOptions);\r\n    // .pipe(map((apiResponse: any) => new ApiResponse()));\r\n    return obs;\r\n  }\r\n\r\n\r\n\r\n  public editRole(role: RoleModel): Observable<ApiResponse<string>> {\r\n    const apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.ROLES + Defines.API_ENDPOINTS.editrole;\r\n    const obs: Observable<any> = this.http.post<ApiResponse<string>>\r\n      (apiUrl, new ApiRequest(role, ''), this.httpOptions);\r\n    return obs;\r\n  }\r\n\r\n\r\n  public addRole(role: RoleModel): Observable<ApiResponse<number>> {\r\n    //debugger;\r\n    let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.ROLES + Defines.API_ENDPOINTS.insertrole;\r\n    let obs: Observable<any> = this.http.post<ApiResponse<number>>\r\n      (apiUrl, new ApiRequest(role, \"\"), this.httpOptions);\r\n    // .pipe(map((apiResponse: any) => new ApiResponse()));\r\n    return obs;\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JvbGVzL3JvbGUtbWFuYWdlci9yb2xlLW1hbmFnZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class =\\\"page-content\\\">\\r\\n        <button pButton type=\\\"button\\\" (click) = \\\"shwoAddRole()\\\" label=\\\"Add Role\\\" class=\\\"ui-button-rounded\\\"></button>\\r\\n        <p-table #dt  *ngIf =\\\"!addRoleFlag\\\"   [rowExpandMode]= \\\"'single'\\\" [columns]=\\\"cols\\\" [value]=\\\"rolesList\\\" dataKey=\\\"id\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\">\\r\\n            <ng-template pTemplate=\\\"header\\\" let-columns>\\r\\n                <tr>\\r\\n                    <th style=\\\"width: 3em\\\"></th>\\r\\n                    <th *ngFor=\\\"let col of columns\\\">\\r\\n                        {{col.header}}\\r\\n                    </th>\\r\\n                </tr>\\r\\n            </ng-template>\\r\\n            <ng-template pTemplate=\\\"body\\\" let-rowData let-expanded=\\\"expanded\\\" let-columns=\\\"columns\\\">\\r\\n                <tr>\\r\\n                    <td>\\r\\n                        <a href=\\\"#\\\" [pRowToggler]=\\\"rowData\\\">\\r\\n                            <i (click) = \\\"expandRow(rowData , expanded)\\\"  [ngClass]=\\\"expanded ? 'pi pi-chevron-down' : 'pi pi-chevron-right'\\\"></i>\\r\\n                        </a>\\r\\n                    </td>\\r\\n                    <td *ngFor=\\\"let col of columns\\\">\\r\\n                        <div *ngIf=\\\"col.header == 'IS_EDITABLE'; then thenBlock else elseBlock\\\"></div>\\r\\n                        <ng-template #thenBlock>\\r\\n                            <p-checkbox [(ngModel)]=\\\"rowData[col.field]\\\" [disabled]=\\\"'disabled'\\\" binary=\\\"true\\\"></p-checkbox>\\r\\n                        </ng-template>\\r\\n                        <ng-template #elseBlock>\\r\\n                            {{rowData[col.field]}}\\r\\n                        </ng-template>\\r\\n        \\r\\n        \\r\\n                    </td>\\r\\n                </tr>\\r\\n            </ng-template>\\r\\n        \\r\\n            <ng-template pTemplate=\\\"rowexpansion\\\" let-rowData let-columns=\\\"columns\\\">\\r\\n                <tr>\\r\\n                    <td [attr.colspan]=\\\"columns.length + 1\\\">\\r\\n                        \\r\\n                       <ndp-add-edit *ngIf=\\\"editRoleFlag\\\" [rolemodel]=\\\"editedRole\\\" (outputrole) =\\\"editrole($event,dt)\\\"  (isCanceled)=\\\"cancelEdit()\\\" [privilegeList]=\\\"allPrivileges\\\"  [accessLevelList]=\\\"accessLevelList\\\" [mode]=\\\"1\\\"></ndp-add-edit>\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </ng-template>\\r\\n        \\r\\n        </p-table>\\r\\n        \\r\\n        <ndp-add-edit *ngIf =\\\"addRoleFlag\\\" [rolemodel]=\\\"editedRole\\\" [privilegeList]=\\\"allPrivileges\\\" [accessLevelList]=\\\"accessLevelList\\\"  (isCanceled)=\\\"cancelAdd()\\\" (outputrole) =\\\"addrole($event)\\\" [mode]=\\\"0\\\"></ndp-add-edit>\\r\\n        \\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { RoleManagerService } from '../role-manager.service';\r\nimport { PrivilegeModel } from 'src/app/shared/models/privilege-model';\r\nimport { trigger, state, style, transition, animate } from '@angular/animations';\r\nimport { RoleModel } from 'src/app/shared/models/role-model';\r\nimport { LookupModel } from 'src/app/shared/models/lookup-model';\r\n\r\n\r\n@Component({\r\n  selector: 'ndp-role-manager',\r\n  templateUrl: './role-manager.component.html',\r\n  styleUrls: ['./role-manager.component.css'],\r\n  animations: [\r\n    trigger('rowExpansionTrigger', [\r\n      state('void', style({\r\n        transform: 'translateX(-10%)',\r\n        opacity: 0\r\n      })),\r\n      state('active', style({\r\n        transform: 'translateX(0)',\r\n        opacity: 1\r\n      })),\r\n      transition('* <=> *', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\r\n    ])\r\n  ]\r\n})\r\nexport class RoleManagerComponent implements OnInit {\r\n  rolesList = new Array<RoleModel>();\r\n  accessLevelList = new Array <LookupModel> ();\r\n  selectedrole: string;\r\n  cols: any[];\r\n  editedRole: RoleModel;\r\n  addRoleFlag = false;\r\n  editRoleFlag = false;\r\n  selectedCategories: any[] = [];\r\n  allPrivileges = new Array<PrivilegeModel>();\r\n  rowexpanded : any ;\r\n  //targetPrivilege: PrivilegeModel[];\r\n  constructor(private roleService: RoleManagerService) {\r\n    //  this.rolesList.push({ label: 'Select Item', value: -1});\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.cols = [\r\n      { field: 'id', header: 'ID' },\r\n      { field: 'label', header: 'LABEL' },\r\n      { field: 'descreption', header: 'DESCREPTION' },\r\n      { field: 'isEditable', header: 'IS_EDITABLE' },\r\n    ];\r\n\r\n\r\n    this.roleService.getAllRoles().subscribe(roles => {\r\n      console.log(\"role Received ==> \", roles.responsePayload);\r\n      this.rolesList = roles.responsePayload;\r\n      this.roleService.getAllPrivilege().subscribe(privilege => {\r\n        //debugger;\r\n        console.log(\"privilege ==> \" + privilege.responsePayload);\r\n        this.allPrivileges = privilege.responsePayload;\r\n\r\n      });\r\n    });\r\n\r\n    this.roleService.getAllLevel().subscribe(levels => {\r\n      console.log(\"role Received ==> \", levels.responsePayload);\r\n      this.accessLevelList = levels.responsePayload;\r\n     \r\n    });\r\n  \r\n\r\n  }\r\n\r\n\r\neditrole($event,tabel)\r\n{\r\n  //debugger;\r\n  this.rowexpanded = false;\r\n  //debugger;\r\n  console.log(\"$event\" , $event)\r\n  this.editrole =$event;\r\n  this.editedRole.label =$event.label;\r\n  this.editedRole.descreption =$event.descreption;\r\n  this.editedRole.isEditable =$event.isEditable;\r\n  this.editedRole.privilegeList =$event.privilegeList;\r\n  this.editedRole.id =$event.id;\r\n  console.log(\"this.editrole\" , this.editrole);\r\n  this.addRoleFlag = true;\r\n  //debugger;\r\n      this.addRoleFlag= false;\r\n}\r\n  \r\n  expandRow(role: RoleModel,expanded) {\r\n    //debugger;\r\n    this.rowexpanded = expanded;\r\n    console.log(\"expanded  :\" , expanded)\r\n    this.editedRole =role;\r\n    // Object.assign({}, role);\r\n\r\n    this.editRoleFlag = !expanded ;\r\n   \r\n  }\r\n\r\n\r\n  shwoAddRole() {\r\n    this.addRoleFlag = true;\r\n  }\r\n\r\n\r\n  addrole($event){\r\n    //debugger;\r\n    this.addRoleFlag =false;\r\n    this.rolesList.push($event);\r\n  }\r\n\r\n  cancelAdd(){\r\n    this.addRoleFlag =true;\r\n  }\r\n\r\n  cancelEdit(){\r\n\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RoleManagerComponent } from './role-manager/role-manager.component';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport {PickListModule} from 'primeng/picklist';\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport { AddEditComponent } from './add-edit/add-edit.component';\r\nimport {InputTextModule} from 'primeng/inputtext';\r\nimport {TableModule} from 'primeng/table';\r\nimport {CheckboxModule} from 'primeng/checkbox';\r\nimport {ButtonModule} from 'primeng/button';\r\nimport {ScrollPanelModule} from 'primeng/scrollpanel';\r\nimport {NgxPaginationModule } from 'ngx-pagination';\r\nimport {Ng2SearchPipeModule } from 'ng2-search-filter';\r\nimport { OrderModule } from 'ngx-order-pipe';\r\nimport { RoleListComponent } from './role-list/role-list.component';\r\nimport { AddEditRoleComponent } from './add-edit-role/add-edit-role.component';\r\nimport { RoleLabelFilter } from '../shared/Pipes/role-label-filter.pipe';\r\nimport { SharedModule } from '../shared/shared.module';\r\n@NgModule({\r\n  declarations: [  RoleListComponent,RoleManagerComponent,AddEditComponent, AddEditRoleComponent,RoleLabelFilter],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    DropdownModule,\r\n    NgxPaginationModule,\r\n    Ng2SearchPipeModule,\r\n    OrderModule,\r\n    FormsModule,PickListModule,\r\n    InputTextModule, \r\n    TableModule,\r\n    CheckboxModule,\r\n    ButtonModule,\r\n    ScrollPanelModule\r\n    \r\n  ]\r\n})\r\nexport class RolesModule { }\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { AdminViewUser } from '../models/admin-view-user-model';\r\nimport { EntityModel } from '../models/entity-model';\r\nimport { CampaignModel } from '../models/campaign-model';\r\nimport { AppProfileModel } from '../models/app-profile-model';\r\n\r\n@Pipe({\r\n    name: 'appProfileAppProfileNameFilter'\r\n})\r\nexport class AppProfileAppProfileNameFilter implements PipeTransform {\r\n    transform(appProfiles: AppProfileModel[], name: string): any {\r\n        if (appProfiles == null || name == null || name.length < 3) {\r\n            return appProfiles;\r\n        }\r\n        const filtered = [];\r\n        for (let i = 0; i < appProfiles.length; i++) {\r\n            const appProfile = appProfiles[i];\r\n            if (appProfile.appProfileName != null && appProfile.appProfileName.toLowerCase().includes(name.toLowerCase())) {\r\n                filtered.push(appProfile);\r\n            }\r\n        }\r\n        return filtered;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { CampaignModel } from '../models/campaign-model';\r\n\r\n@Pipe({\r\n    name: 'dateFilter'\r\n})\r\nexport class CampaignDateFilter implements PipeTransform {\r\n    transform(campaigns: CampaignModel[], dateStart: Date, dateEnd: Date): any {\r\n        let filtered = [];\r\n        if (campaigns != null) {\r\n            if (!dateStart && !dateEnd) {\r\n                console.log(\"\\n\\n\\n\\n\\n!dateStart && !dateEnd\\n\\n\\n\\n\");\r\n                return campaigns;\r\n            } else if (dateStart && !dateEnd) {\r\n                console.log(\"\\n\\n\\n\\n\\ndateStart && !dateEnd\\n\\n\\n\\n\");\r\n                filtered = [];\r\n                for (let i = 0; i < campaigns.length; i++) {\r\n                    const c = campaigns[i];\r\n                    if (c.startDate) {\r\n                        const d = new Date(c.startDate);\r\n                        if (d >= dateStart\r\n                            //d.getDate() === dateStart.getDate()\r\n                            //&& d.getMonth() === dateStart.getMonth()\r\n                            //&& d.getFullYear() === dateStart.getFullYear()\r\n                        ) {\r\n                            filtered.push(c);\r\n                        }\r\n                    }\r\n                }\r\n                return filtered;\r\n            } else if (!dateStart && dateEnd) {\r\n                filtered = [];\r\n                for (let i = 0; i < campaigns.length; i++) {\r\n                    const c = campaigns[i];\r\n                    console.log(\"\\n\\n\\n\\n\\n\\nEND DATE\\n\\n\\n\\n\",c.endDate, c.name);\r\n                    if (c.endDate) {\r\n                        const d = new Date(c.endDate);\r\n                        if (d <= dateEnd\r\n                            // d.getDate() === dateEnd.getDate()\r\n                            // && d.getMonth() === dateEnd.getMonth()\r\n                            // && d.getFullYear() === dateEnd.getFullYear()\r\n                        ) {\r\n                            filtered.push(c);\r\n                        }\r\n                    }\r\n                }\r\n                return filtered;\r\n            } else if (dateStart && dateEnd) {\r\n                \r\n                filtered = [];\r\n                for (let i = 0; i < campaigns.length; i++) {\r\n                    const c = campaigns[i];\r\n                    if (c.startDate && c.endDate) {\r\n                        const d1 = new Date(c.startDate);\r\n                        const d2 = new Date(c.endDate);\r\n                        if (d1 >= dateStart && d2 <= dateEnd) {\r\n                            filtered.push(c);\r\n                        }\r\n                    }\r\n                }\r\n                return filtered;\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { CampaignModel } from '../models/campaign-model';\r\n\r\n@Pipe({\r\n    name: 'entityFilter'\r\n})\r\nexport class CampaignEntityFilter implements PipeTransform {\r\n    transform(campaigns: CampaignModel[], entity: String): any {\r\n        const filtered = [];\r\n        if (campaigns != null) {\r\n            if (!entity) {\r\n                return campaigns;\r\n            } else {\r\n                for (let i = 0; i < campaigns.length; i++) {\r\n                    const c = campaigns[i];\r\n                    if (c.entityName === entity) {\r\n                        filtered.push(c);\r\n                    }\r\n                }\r\n                return filtered;\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { CampaignModel } from '../models/campaign-model';\r\n\r\n@Pipe({\r\n    name: 'campaignNameFilter'\r\n})\r\nexport class CampaignNameFilter implements PipeTransform {\r\n    transform(campaigns: CampaignModel[], name: string): any {\r\n        const numbers = new RegExp(/^[0-9]+$/);\r\n        const filtered = [];\r\n\r\n        if (campaigns != null && name != null && numbers.test(name)) {\r\n            for (let i = 0; i < campaigns.length; i++) {\r\n                const c = campaigns[i];\r\n                if (c.campaignId.toString().includes(name)) {\r\n                    filtered.push(c);\r\n                }\r\n            }\r\n            return filtered;\r\n        }\r\n\r\n        if (campaigns == null || name == null || name.length < 3) {\r\n            return campaigns;\r\n        }\r\n\r\n        for (let i = 0; i < campaigns.length; i++) {\r\n            const campaign = campaigns[i];\r\n            if (campaign.name != null && campaign.name.toLowerCase().includes(name.toLowerCase())) {\r\n                filtered.push(campaign);\r\n            }\r\n        }\r\n        return filtered;\r\n    }\r\n}\r\n","/*\r\n    Ahmed El-Shinawy\r\n    Campaign Status Filter\r\n*/\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\nimport { CampaignModel } from '../models/campaign-model';\r\nimport { Defines } from '../static/defines';\r\n\r\n@Pipe({\r\n  name: 'statusfilter'\r\n})\r\nexport class CampaignStatusFilter implements PipeTransform {\r\n  transform(campaigns: CampaignModel[], status: number): any {\r\n    if (status === Defines.CAMPAIGN_DISPLAY_STATUS.ALL) {\r\n      return campaigns;\r\n    }\r\n    const filtered = [];\r\n    for (let i = 0; i < campaigns.length; i++) {\r\n      const campaign = campaigns[i];\r\n      if (this.getStatus(campaign) === status) {\r\n        filtered.push(campaign);\r\n      }\r\n    }\r\n    return filtered;\r\n  }\r\n  getStatus(campaign: CampaignModel) {\r\n    // Running, Paused, Done, Scheduled\r\n    const startDate = new Date(campaign.startDate);\r\n    const endDate = new Date(campaign.endDate);\r\n    const currentDate = new Date();\r\n    if (campaign.status === Defines.CAMPAIGN_STATUS.PAUSED) {\r\n      return Defines.CAMPAIGN_DISPLAY_STATUS.PAUSED;\r\n    }\r\n    if (campaign.status === Defines.CAMPAIGN_STATUS.PENDING) {\r\n      return Defines.CAMPAIGN_DISPLAY_STATUS.PENDING;\r\n    }\r\n    if (campaign.status === Defines.CAMPAIGN_STATUS.READY && currentDate < startDate) {\r\n      return Defines.CAMPAIGN_DISPLAY_STATUS.SCHEDULED;\r\n    }\r\n    if (campaign.status === Defines.CAMPAIGN_STATUS.FAILED ||\r\n      campaign.status === Defines.CAMPAIGN_STATUS.ALL_MESSAGES_FAILED) {\r\n      return Defines.CAMPAIGN_DISPLAY_STATUS.FAILED;\r\n    }\r\n    if (campaign.status !== Defines.CAMPAIGN_STATUS.SUCCESS) {\r\n      return Defines.CAMPAIGN_DISPLAY_STATUS.RUNNING;\r\n    } else {\r\n      return Defines.CAMPAIGN_DISPLAY_STATUS.FINISHED;\r\n    }\r\n    // if (currentDate < startDate) {\r\n    //   return Defines.CAMPAIGN_DISPLAY_STATUS.SCHEDULED;\r\n    // } else if (currentDate >= startDate && currentDate <= endDate) {\r\n    //   return Defines.CAMPAIGN_DISPLAY_STATUS.RUNNING;\r\n    // } else {\r\n    //   return Defines.CAMPAIGN_DISPLAY_STATUS.FINISHED;\r\n    // }\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { AdminViewUser } from '../models/admin-view-user-model';\r\nimport { EntityModel } from '../models/entity-model';\r\n\r\n@Pipe({\r\n    name: 'entitynameFilter'\r\n})\r\nexport class EntityEntityNameFilter implements PipeTransform {\r\n    transform(entities: EntityModel[], name: string): any {\r\n        if (name == null || name.length < 3) {\r\n            return entities;\r\n        }\r\n        const filtered = [];\r\n        for (let i = 0; i < entities.length; i++) {\r\n            const entity = entities[i];\r\n            if (entity.entityName != null && entity.entityName.toLowerCase().includes(name.toLowerCase())) {\r\n                filtered.push(entity);\r\n            }\r\n        }\r\n        return filtered;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { AdminViewUser } from '../models/admin-view-user-model';\r\nimport { EntityModel } from '../models/entity-model';\r\n\r\n@Pipe({\r\n    name: 'entityStatusFilter'\r\n})\r\nexport class EntityStatusFilter implements PipeTransform {\r\n    transform(entities: EntityModel[], status: boolean): any {\r\n        if (status == null) {\r\n            return entities;\r\n        }\r\n        const filtered = [];\r\n        for (let i = 0; i < entities.length; i++) {\r\n            const entity = entities[i];\r\n            if (entity.active == status) {\r\n                filtered.push(entity);\r\n            }\r\n        }\r\n        return filtered;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { AdminViewUser } from '../models/admin-view-user-model';\r\nimport { EntityModel } from '../models/entity-model';\r\n\r\n@Pipe({\r\n    name: 'entityTypeFilter'\r\n})\r\nexport class EntityTypeFilter implements PipeTransform {\r\n    transform(entities: EntityModel[], type: string): any {\r\n        if (type == 'all') {\r\n            return entities;\r\n        }\r\n        const filtered = [];\r\n        for (let i = 0; i < entities.length; i++) {\r\n            const entity = entities[i];\r\n            if (entity.isInternal && type == 'internal') {\r\n                filtered.push(entity);\r\n            }\r\n            if (!entity.isInternal && type == 'external') {\r\n                filtered.push(entity);\r\n            }\r\n        }\r\n        return filtered;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { GroupModel } from \"../models/group-model\";\r\n\r\n@Pipe({\r\n    name: 'groupNameFilter'\r\n})\r\nexport class GroupFilterPipe implements PipeTransform {\r\n    transform(groups: GroupModel[], filter: string): any {\r\n        if (!groups || !filter || filter.length < 3) {\r\n            return groups;\r\n        }\r\n        return groups.filter(group => group.groupName.toLowerCase().indexOf(filter.toLowerCase()) !== -1);\r\n    }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { RoleModel } from '../models/role-model';\r\n\r\n@Pipe({\r\n    name: 'roleLabelFilter'\r\n})\r\nexport class RoleLabelFilter implements PipeTransform {\r\n    transform(roles: RoleModel[], label: string): any {\r\n        if (roles == null || label == null || label.length < 3) {\r\n            return roles;\r\n        }\r\n        const filtered = [];\r\n        for (let i = 0; i < roles.length; i++) {\r\n            const role = roles[i];\r\n            if (role.label != null && role.label.toLowerCase().includes(label.toLowerCase())) {\r\n                filtered.push(role);\r\n            }\r\n        }\r\n        return filtered;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { SmscAccountModel } from \"../models/smsc-account-model\";\r\n\r\n\r\n@Pipe({\r\n    name: 'smscNameFilter'\r\n})\r\nexport class SmscFilterPipe implements PipeTransform {\r\n    transform(smsc: SmscAccountModel[], filter: string): any {\r\n        if (!smsc || !filter || filter.length < 3) {\r\n            return smsc;\r\n        }\r\n        return smsc.filter(s => s.name.toLowerCase().indexOf(filter.toLowerCase()) !== -1);\r\n    }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { RoleModel } from '../models/role-model';\r\nimport { SmsTemplateModel } from '../models/sms-template-model';\r\n\r\n@Pipe({\r\n    name: 'smstemplateTitletextFilter'\r\n})\r\nexport class SmstemplateTitletextFilter implements PipeTransform {\r\n    transform(templates: SmsTemplateModel[], titletext: string): any {\r\n        if (templates == null || titletext == null || titletext.length < 3) {\r\n            return templates;\r\n        }\r\n        const filtered = [];\r\n        for (let i = 0; i < templates.length; i++) {\r\n            const template = templates[i];\r\n            if ((template.title != null && template.title.toLowerCase().includes(titletext.toLowerCase()))\r\n            || (template.text != null && template.text.toLowerCase().includes(titletext.toLowerCase()))) {\r\n                filtered.push(template);\r\n            }\r\n        }\r\n        return filtered;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { AdminViewUser } from '../models/admin-view-user-model';\r\n\r\n@Pipe({\r\n    name: 'userActiveDirectoryFilter'\r\n})\r\nexport class UsersActiveDirectoryFilter implements PipeTransform {\r\n    transform(users: AdminViewUser[], status: boolean): any {\r\n        if (status == null) {\r\n            return users;\r\n        }\r\n        const filtered = [];\r\n        for (let i = 0; i < users.length; i++) {\r\n            const user = users[i];\r\n            if (user.isLdapUser == status) {\r\n                filtered.push(user);\r\n            }\r\n        }\r\n        return filtered;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { AdminViewUser } from '../models/admin-view-user-model';\r\n\r\n@Pipe({\r\n    name: 'userentityFilter'\r\n})\r\nexport class UsersEntityFilter implements PipeTransform {\r\n    transform(users: AdminViewUser[], businessEntityName: string): any {\r\n\r\n        if (businessEntityName == null || businessEntityName.length < 3) {\r\n            return users;\r\n        }\r\n        const filtered = [];\r\n        for (let i = 0; i < users.length; i++) {\r\n            const user = users[i];\r\n            if (user.entityName != null && user.entityName.toLowerCase().includes(businessEntityName.toLowerCase())) {\r\n                filtered.push(user);\r\n            }\r\n        }\r\n        return filtered;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { AdminViewUser } from '../models/admin-view-user-model';\r\n\r\n@Pipe({\r\n    name: 'userStatusFilter'\r\n})\r\nexport class UsersStatusFilter implements PipeTransform {\r\n    transform(users: AdminViewUser[], status: boolean): any {\r\n        if (status == null) {\r\n            return users;\r\n        }\r\n        const filtered = [];\r\n        for (let i = 0; i < users.length; i++) {\r\n            const user = users[i];\r\n            if (user.isActive == status) {\r\n                filtered.push(user);\r\n            }\r\n        }\r\n        return filtered;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { AdminViewUser } from '../models/admin-view-user-model';\r\n\r\n@Pipe({\r\n    name: 'usernameFilter'\r\n})\r\nexport class UsersUsernameFilter implements PipeTransform {\r\n    transform(users: AdminViewUser[], username: string): any {\r\n        if (users == null || username == null || username.length < 3) {\r\n            return users;\r\n        }\r\n        const filtered = [];\r\n        for (let i = 0; i < users.length; i++) {\r\n            const user = users[i];\r\n            if (user.userName != null && user.userName.toLowerCase().includes(username.toLowerCase())) {\r\n                filtered.push(user);\r\n            }\r\n        }\r\n        return filtered;\r\n    }\r\n}\r\n","import { Directive, ElementRef, Input, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[ndpActiveLink]'\r\n})\r\nexport class ActiveLinkDirective {\r\n  @Input() public activeClass: string;\r\n\r\n  constructor(private htmlElement: ElementRef) { }\r\n\r\n  @HostListener('click') onClick() {\r\n    this.addStyle(this.activeClass);\r\n  }\r\n\r\n\r\n\r\n  private addStyle(style: string) {\r\n    // this.htmlElement.nativeElement.style.backgroundColor = \"red\";\r\n    let elementsWithClass : NodeListOf<Element> = document.querySelectorAll('.'+style);\r\n    elementsWithClass.forEach(e => \r\n      e.classList.remove('active'));\r\n    this.htmlElement.nativeElement.classList.add(style);\r\n\r\n  }\r\n}\r\n","import { Directive, ElementRef, Input, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[ndpAppHover]'\r\n})\r\nexport class AppHoverDirective {\r\n\r\n\r\n\r\n  @Input() public hoverColor: string;\r\n\r\n  constructor(private htmlElement: ElementRef) { }\r\n\r\n  @HostListener('mouseenter') onMouseEnter() {\r\n    console.log(\"Mouse Entered\");\r\n    this.highlightElement(this.hoverColor);\r\n  }\r\n\r\n  @HostListener('mouseleave') onMouseLeave() {\r\n    console.log(\"Mouse Left\");\r\n    this.highlightElement(null);\r\n  }\r\n\r\n  private highlightElement(color: string) {\r\n    this.htmlElement.nativeElement.style.backgroundColor = color;\r\n    this.htmlElement.nativeElement.classList.add(\"active\");\r\n    console.log(this.htmlElement.nativeElement.classList);\r\n    console.log(this.htmlElement.nativeElement.className);\r\n  }\r\n}\r\n","\r\nimport { Directive, Input, Output, HostListener, ElementRef, EventEmitter } from \"@angular/core\";\r\nimport { AbstractControl, NG_VALIDATORS, Validator, ValidationErrors } from \"@angular/forms\";\r\nimport { AuthorizationService } from \"../services/authorization.service\";\r\n\r\n@Directive({\r\n\tselector: '[ndpAuthorize]'\r\n})\r\nexport class NdpAuthorizeDirective {\r\n\t@Input()\r\n\tpublic targetUrl: string;\r\n\t@Input()\r\n\tpublic targetId?: number;\r\n\t@Output('successHandler')\r\n\tpublic successHandler: EventEmitter<any> = new EventEmitter();\r\n\r\n\r\n\tconstructor(private authService: AuthorizationService, private htmlElement: ElementRef) { }\r\n\r\n\t@HostListener('click', ['$event'])\r\n\tonclick($event) {\r\n\t\t// console.log(\"clickkkkkkkkkkkkkkkkkkkkk \", $event);\r\n\t\t$event.preventDefault();\r\n\t\tthis.authService.authorizeRequest(this.targetUrl, this.targetId)\r\n\t\t\t.then(successData => {\r\n\t\t\t\tif (successData.status === 0) {\r\n\t\t\t\t\tconsole.log(\"Success Return \", successData);\r\n\t\t\t\t\tthis.successHandler.emit();\r\n\t\t\t\t\tconsole.log(\"successHandler\");\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(\"Authorization Failed\");\r\n\t\t\t});\r\n\t}\r\n\r\n}","import { Directive, Input, OnInit, ElementRef, HostListener, AfterViewInit, AfterViewChecked } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[ndpButton]'\r\n})\r\nexport class NdpButtonDirective implements OnInit, AfterViewChecked {\r\n\r\n  @Input() public buttonClass: string[];\r\n  constructor(private htmlElement: ElementRef) { }\r\n  ngOnInit(): void {\r\n    // console.log(\"hwhwhw\");\r\n    // console.log(\"This Html Element =>\", this.htmlElement);\r\n    // let classList: DOMTokenList = this.htmlElement.nativeElement.classList;\r\n\r\n    // console.log(\"Element ClassList => \", classList);\r\n\r\n    // classList.forEach((value: string, key: number, parent: DOMTokenList) => {\r\n    //   console.log(\"Removing \" + value);\r\n    //   // this.htmlElement.nativeElement.classList.remove(value)\r\n    // });\r\n    // this.htmlElement.nativeElement.classList.add(this.buttonClass);\r\n  }\r\n  ngAfterViewChecked() {\r\n    console.log(\"hwhwhw\");\r\n    console.log(\"This Html Element =>\", this.htmlElement);\r\n    let classList: DOMTokenList = this.htmlElement.nativeElement.classList;\r\n\r\n    console.log(\"Element ClassList => \", classList);\r\n\r\n    classList.forEach((value: string, key: number, parent: DOMTokenList) => {\r\n      console.log(\"Removing \" + value);\r\n      this.htmlElement.nativeElement.classList.remove(value)\r\n    });\r\n    this.buttonClass.forEach(className => {\r\n      this.htmlElement.nativeElement.classList.add(className);\r\n    })\r\n\r\n    classList = this.htmlElement.nativeElement.classList;\r\n    console.log(classList);\r\n  }\r\n\r\n}\r\n","import { Directive } from \"@angular/core\";\r\nimport { AbstractControl, NG_VALIDATORS, Validator, ValidationErrors} from \"@angular/forms\";\r\n\r\n/**\r\n * This validator works like \"required\" but it does not allow whitespace either\r\n *\r\n * @export\r\n * @class RequiredDirective\r\n * @implements {Validator}\r\n */\r\n@Directive({\r\n\tselector: \"[ndpRequired]\",\r\n\tproviders: [{ provide: NG_VALIDATORS, useExisting: RequiredDirective, multi: true }]\r\n})\r\nexport class RequiredDirective implements Validator {\r\n\r\n\tvalidate(control: AbstractControl): ValidationErrors | null {\r\n\t\t// let isWhitespace = (control.value || '').trim().length === 0;\r\n\t\t// let isValid = !isWhitespace;\r\n\t\t// return isValid ? null : {required: true};\r\n\t\treturn null;\r\n\t  }\r\n\r\n}","import { Directive } from \"@angular/core\";\r\nimport { AbstractControl, NG_VALIDATORS, Validator, ValidationErrors} from \"@angular/forms\";\r\n\r\n@Directive({\r\n\tselector: \"[nfSpecialCharacters]\",\r\n\tproviders: [{ provide: NG_VALIDATORS, useExisting: SpecialCharactersDirective, multi: true }]\r\n\r\n})\r\n\r\nexport class SpecialCharactersDirective implements Validator {\r\n\t\r\n\tvalidate(control: AbstractControl): ValidationErrors | null {\r\n\t\tlet pattern = new RegExp(\"^[!@#$%^&*(),.?:{}|<>]+$\");\r\n\t\tlet isAlphapetic = pattern.test(control.value);\r\n\t\tconsole.log(\"pattern\" + isAlphapetic);\r\n\t\t// let isValid = !isAlphapetic;\r\n\t\treturn !isAlphapetic ? null : {nfSpecialCharacters: true};\r\n\t  }\r\n\t}","\r\nimport { tap } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest, HttpEvent, HttpResponse } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport { ApiRequest } from '../models/api-request';\r\nimport { Defines } from '../static/defines';\r\nimport { ApiResponse } from '../models/api-response';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    private interceptedRequest: any;\r\n    intercept(\r\n        req: HttpRequest<any>,\r\n        next: HttpHandler\r\n    ): Observable<HttpEvent<any>> {\r\n        this.doPrework(req);\r\n        let handleObs: Observable<HttpEvent<any>>;\r\n        handleObs = next.handle(this.interceptedRequest);\r\n        return handleObs.pipe(tap(response => {\r\n            if (response instanceof HttpResponse) {\r\n                this.doPostwork(response);\r\n            }\r\n        }));\r\n    }\r\n\r\n    constructor(private route: Router) {\r\n\r\n    }\r\n\r\n    private doPrework(req: HttpRequest<any>) {\r\n        this.interceptedRequest = req.clone();\r\n        if (!req.url.includes(Defines.API_ENDPOINTS.LOGIN)) {\r\n            this.interceptedRequest.body\r\n                = new ApiRequest(req.body.request, Defines.CONSTANTS.tokenPrefix + localStorage.getItem(Defines.SESSION_KEYS.authToken));\r\n        } else {\r\n            // console.log('Request is Login, no token involved');\r\n        }\r\n    }\r\n\r\n    private doPostwork(resp: HttpResponse<any>) {\r\n        if (resp.body) {\r\n            let apiResponse: ApiResponse<any> = resp.body;\r\n            if (apiResponse.status === Defines.B2B_CODES.InvalidUserOrpassword\r\n                || apiResponse.status === Defines.B2B_CODES.authenticationError\r\n            ) {\r\n                localStorage.removeItem(Defines.SESSION_KEYS.authToken);\r\n                localStorage.removeItem(Defines.SESSION_KEYS.userModel);\r\n                this.route.navigate(['/login']);\r\n            } else if (apiResponse.status === Defines.B2B_CODES.authorizationError) {\r\n                // this.route.navigate(['/notauthorized']);\r\n            }\r\n        }\r\n    }\r\n}\r\n","\r\nimport { tap, catchError } from 'rxjs/operators';\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest, HttpEvent, HttpResponse }\r\n    from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Observable, of, throwError as observableThrowError } from 'rxjs';\r\nimport 'rxjs/operators/catchError';\r\nimport { ApiRequest } from '../models/api-request';\r\nimport { NdpSpinnerService } from 'src/app/ndpspinner/ndp-spinner.service';\r\n\r\n@Injectable()\r\nexport class LoadingInterceptor implements HttpInterceptor {\r\n    router: Router;\r\n    loadingExemptedUrls: string[] = [\r\n        '/campaign/counts',\r\n        '/campaign/list',\r\n        '/campaign/stats'\r\n    ]\r\n    constructor(private spinnerService: NdpSpinnerService) { }\r\n    intercept(\r\n        req: HttpRequest<any>,\r\n        next: HttpHandler\r\n    ): Observable<HttpEvent<any>> {\r\n        this.doPrework(req);\r\n\r\n\r\n\r\n        let handleObs: Observable<HttpEvent<any>>;\r\n        handleObs = next.handle(req).pipe(catchError((errorResponse, caught) => {\r\n            console.log('Caught error ', errorResponse);\r\n            this.spinnerService.hide();\r\n            return observableThrowError(errorResponse);\r\n        }));\r\n        return handleObs.pipe(tap(response => {\r\n            if (response instanceof HttpResponse) {\r\n                this.doPostwork(response);\r\n            }\r\n        }));\r\n\r\n\r\n    }\r\n\r\n    private doPrework(req: HttpRequest<any>) {\r\n        if (!this.isExemptedUrl(req.url)) {\r\n            this.spinnerService.show();\r\n        } else {\r\n            //==== NO Loading Will Happen =========\r\n        }\r\n    }\r\n\r\n    private doPostwork(resp: HttpResponse<any>) {\r\n        this.spinnerService.hide();\r\n    }\r\n\r\n    private isExemptedUrl(url: string): boolean {\r\n        return this.loadingExemptedUrls.some(exempted => url.includes(exempted));\r\n    }\r\n}\r\n","\r\nimport { throwError as observableThrowError, Observable } from 'rxjs';\r\n\r\nimport { tap, catchError, map } from 'rxjs/operators';\r\n\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\n\r\n\r\nimport { Defines } from '../static/defines';\r\nimport { Injectable } from '@angular/core';\r\nimport { NdpMessageService } from '../services/ndp-message.service';\r\nimport { ApiResponse } from '../models/api-response';\r\n@Injectable()\r\nexport class MessageInterceptor implements HttpInterceptor {\r\n    constructor(private messageService: NdpMessageService) { };\r\n    intercept(\r\n        req: HttpRequest<any>,\r\n        next: HttpHandler\r\n    ): Observable<HttpEvent<any>> {\r\n        this.doPrework(req);\r\n\r\n        let handleObs: Observable<HttpEvent<any>>;\r\n        handleObs = next.handle(req).pipe(catchError((errorResponse, caught) => {\r\n            console.log(\"Exception for Req=> \", req, \"Exception => \", caught);\r\n            this.handleErrorResponse(errorResponse, caught);\r\n            return observableThrowError(errorResponse);\r\n        }));\r\n        return handleObs.pipe(tap(response => {\r\n            if (response instanceof HttpResponse) {\r\n                this.doPostwork(response);\r\n            }\r\n        }));\r\n\r\n    }\r\n\r\n    private doPrework(req: HttpRequest<any>) {\r\n        console.log('Message Intercepter Prework');\r\n    }\r\n\r\n    private doPostwork(resp: HttpResponse<any>) {\r\n        console.log(\"Response => \", resp);\r\n        console.log(\"Is response ApiResponse =>\" + (resp.body instanceof ApiResponse));\r\n        if (resp.body) {\r\n            let apiResponse: ApiResponse<any> = resp.body;\r\n            // if (apiResponse.errors && apiResponse.errors.length > 0) {\r\n            //     this.messageService.addErrors(apiResponse.errors);\r\n            // }\r\n            if (apiResponse.extraInfo && apiResponse.extraInfo.length > 0) {\r\n                this.messageService.addInfos(apiResponse.extraInfo);\r\n            } else if (apiResponse.warnings && apiResponse.warnings.length > 0) {\r\n                this.messageService.addWarnings(apiResponse.warnings);\r\n            } else if (apiResponse.status == Defines.API_RESPONSES.success) {\r\n                // if (apiResponse.statusMessage && apiResponse.statusMessage.length > 0) {\r\n                //     console.log(\"statusMessage\",apiResponse.statusMessage);\r\n                //     // this.messageService.addSuccess(apiResponse.statusMessage);\r\n                // }\r\n            } else {\r\n                this.messageService.addError(apiResponse.status.toString(), apiResponse.statusMessage);\r\n            }\r\n        }\r\n    }\r\n\r\n    private handleErrorResponse(errorResponse: HttpErrorResponse, caught: Observable<HttpEvent<any>>) {\r\n        console.log(\"errorResponse=>\", errorResponse);\r\n        if (errorResponse.status == 0) {\r\n            this.messageService.addError(\r\n                errorResponse.status.toString(),\r\n                \"Backend-System un-reachable!\"\r\n            );\r\n        } else if (errorResponse.status == 401) {\r\n            this.messageService.addError(\r\n                errorResponse.status.toString(),\r\n                \"User is not Authorized\"\r\n            );\r\n        } else {\r\n\r\n            this.messageService.addError(\r\n                errorResponse.status.toString(),\r\n                errorResponse.statusText\r\n            );\r\n        }\r\n\r\n        console.log('Message Intercepter ErrorResponse', errorResponse);\r\n    }\r\n\r\n}\r\n","\r\nexport class ReportRequestModel {\r\n  dateRange: Date[] ;\r\n  entityModels: number[] = [];\r\n  type: number;\r\n\r\n  ngOnInit() {\r\n\r\n    this.dateRange[1].setDate((new Date()).getDate());\r\n  }\r\n}","export class AdminViewUser {\r\n    id: number;\r\n    userName: string;\r\n    password: string;\r\n    fName: string;\r\n    lName: string;\r\n    address: string;\r\n    email: string;\r\n    msisdn: string;\r\n    entityName: string;\r\n    entityId: number;\r\n    role: number;\r\n    roleLabel: string;\r\n    isActive: boolean;\r\n    isLdapUser: boolean;\r\n    needsApproval: boolean;\r\n    canAddFakeSender: boolean;\r\n    createdByUserName: string;\r\n    creationDate: Date;\r\n    lastModifiedByUserName: string;\r\n    lastModificationDate: Date;\r\n    approvedByUserName: string;\r\n    approvalDate: Date;\r\n    signupStatus: number;\r\n    rejectionReason: string;\r\n    isInternal:boolean;\r\n    approvedBy: number;\r\n    signupStatusName: string;\r\n\r\n    constructor() {\r\n\r\n    }\r\n}","export class ApiRequest<T> {\r\n    authorization: string;\r\n    request: T;\r\n\r\n    constructor(payload: T, jwtToken: string) {\r\n        this.request = payload;\r\n        this.authorization = jwtToken;\r\n    }\r\n}\r\n","export class ApiResponse<T> {\r\n    public status: number;\r\n    public statusMessage: string;\r\n    public errors: Array<string>;\r\n    public warnings: Array<string>;\r\n    public extraInfo: Array<string>;\r\n    public responsePayload: T;\r\n\r\n}\r\n","export class AppProfileModel {\r\n\r\n  appProfileId: number;\r\n  appProfileName: string;\r\n  description: string;\r\n  maximumDailyQuota: number;\r\n  numberOfSessions: number;\r\n  requiresDeliveryReport: boolean;\r\n  canAddFakeSenders: boolean;\r\n  timeWindowStart: Date;\r\n  timeWindowEnd: Date;\r\n  maxThroughput: number;\r\n  createdBy: number;\r\n  createdOn: Date;\r\n  updatedBy: number;\r\n  updatedOn: Date;\r\n}\r\n","import { User } from \"./user-model\";\r\n\r\nexport class AuthToken {\r\n   public token: string;\r\n   public  user: User;\r\n\r\n    constructor(token: string, user:User) {\r\n        this.token = token;\r\n        this.user = user;\r\n    }\r\n}\r\n","\r\nexport class AuthorizationRequestModel {\r\n    targetUrl: string;\r\n    objectId: number;\r\n\r\n    constructor(public url: string,public targetObjectId: number){\r\n        this.targetUrl = url;\r\n        this.objectId = targetObjectId;\r\n    }\r\n   \r\n\r\n}","import { FileModel } from './file-model';\r\nexport class CampaignModel {\r\n    campaignId: number;\r\n    campaignType: number;\r\n    channel: number;\r\n    notificationType: number;\r\n    status: number;\r\n    statusMessage: string;\r\n    name: string;\r\n    startDate: Date;\r\n    endDate: Date;\r\n    priority: number;\r\n    notificationText: string;\r\n    ipAddress: string;\r\n    isInternal: boolean;\r\n    isDeleted: boolean;\r\n    creationTime: Date;\r\n    deletionTime: Date;\r\n    createdBy: number;\r\n    deletedBy: number;\r\n    paceType: string;\r\n    senderName: string;\r\n    entityId: number;\r\n    entityName: string;\r\n    paceRate: number;\r\n    language: string;\r\n    groupId: number;\r\n    handlersCount: number;\r\n    deliveryReport: boolean;\r\n    isCritical: boolean;\r\n    sendStartTime: Date;\r\n    sendEndTime: Date;\r\n    admFiles = new Array<FileModel>();\r\n    canEdit: boolean;\r\n    canDelete: boolean;\r\n    canView: boolean;\r\n    isOpenEnded:boolean;\r\n    //fileId: number;\r\n    //filePath: string;\r\n    dialsFormat: number;\r\n    groupName:string;\r\n    createdByUsername:string;\r\n    lastModificationDate:Date;\r\n    lastModifiedByUsername: number;\r\n    constructor() {\r\n    }\r\n}","import { FileModel } from './file-model';\r\nimport { CampaignModel } from './campaign-model';\r\n\r\nexport class CampaignRequestModel {\r\n    campaignModel: CampaignModel;\r\n    fileRequestModel: FileModel;\r\n}","import { FakeSenderModel } from \"./fake-sender-model\";\r\nimport { LkGroup } from \"./lk-group\";\r\n\r\nexport class EntityModel {\r\n\r\n    entityId: number;\r\n    isB2b: boolean;\r\n    entityName: string;\r\n    isLimited = true;\r\n    dailyQuota: number;\r\n    remainingDailyQuota: number;\r\n    msisdn: string;\r\n    quotaLimit: string;\r\n    isDeleted: boolean;\r\n    deletionDate: string;\r\n    createdBy: number;\r\n    deletedBy: number;\r\n    sendingRate: number;\r\n    deliveryReport = true;\r\n    appProfileId: number;\r\n    isInternal = false;\r\n    creationDate: Date;\r\n    updatedby: number;\r\n    updatedDate: Date;\r\n    updatedFName: string;\r\n    updatedLName: string;\r\n    creatorFName: string;\r\n    creatorLName: string;\r\n    deletedByFName: string;\r\n    deletedByLName: string;\r\n    appProfileName: string;\r\n    active = true;\r\n    canAddFakeSenders: boolean;\r\n    fakeSendrName: Array<FakeSenderModel>;\r\n    balance: number;\r\n    groupList = new Array<LkGroup>();\r\n    smsScript: string;\r\n    canEdit: boolean;\r\n    canDelete: boolean;\r\n    canView: boolean;\r\n    creatorEntityId: number;\r\n\tmaxThroughput: number;\r\n    timeWindowStart: Date;\r\n    timeWindowEnd: Date;\r\n    balanceToAdd: number;\r\n    remainingDailyQuotaToAdd: number;\r\n}\r\n","export class FakeSenderModel {\r\n    fakeSenderName :String;\r\n    isDefault:boolean;\r\n    \r\n}","export class FileModel {\r\n\r\n    fileName: string;\r\n    fileExtention: string;\r\n    fileType: number;\r\n    b64String: string;\r\n\r\n}","import { FileModel } from \"./file-model\";\r\n\r\nexport class GroupModel {\r\n\r\n    groupId: number;\r\n    groupName: string;\r\n    isB2b: boolean;\r\n    groupStatus: number;\r\n    dialsCount: number;\r\n    createdBy: number;\r\n    lastUpdateBy: number;\r\n    ownerEntity: number;\r\n    fileType: number;\r\n    createdDate: Date;\r\n    fileRequestModel: FileModel;\r\n    canEdit: boolean;\r\n    canDelete: boolean;\r\n    canView: boolean;\r\n    canExport: boolean;\r\n    canDeleteDials: boolean;\r\n    parameters;\r\n}","export class GroupMsisdnModel {\r\n\r\n    groupId: number;\r\n    msisdn: string;\r\n    parameters: string;\r\n    \r\n}","export class LkGroup {\r\n    groupName:string;\r\n    groupId:number ;\r\n\r\n    constructor( name: string  , id :number )\r\n    {\r\n        this.groupId=id;\r\n        this.groupName = name ;\r\n    }\r\n}\r\n","export class LoginRequest {\r\n    username: string;\r\n    password: string;\r\n\r\n    constructor(username: string, password: string) {\r\n        this.username = username;\r\n        this.password = password;\r\n    }\r\n}\r\n","export class ResetPasswordModel {\r\n\r\n    resetCode: string;\r\n    email: string;\r\n    password: string;\r\n    oldPassword: string;\r\n\r\n}","import { RolePrivilegeModel } from \"./role-privilege-model\";\r\n\r\nexport class RoleModel {\r\n\r\n    id: number;\r\n    label: string;\r\n    descreption: string;\r\n    isEditable: boolean;\r\n    userCount: number;\r\n    assignedToExtEntity:boolean;\r\n    privilegeList: RolePrivilegeModel[];\r\n}\r\n","export class RolePrivilegeModel {\r\n\r\n     id: number;\r\n     roleId: number;\r\n     privilegeId: number;\r\n     accessLevel: number;\r\n     constructor(roleId: number, privId: number, accessLevel: number) {\r\n          this.roleId = roleId;\r\n          this.privilegeId = privId;\r\n          this.accessLevel = accessLevel;\r\n     }\r\n     \r\n     equals(object: any) {\r\n\r\n     }\r\n}\r\n","export class SmscAccountModel {\r\n    accountId: number;\r\n    userName: string;\r\n    password: string;\r\n    maxThroughtput: number;\r\n    dailyQuota: number;\r\n    lastUpdateBy: number;\r\n    timeWindowStart: Date;\r\n    timeWindowEnd: Date;\r\n    appProfileId: number;\r\n    ip: string;\r\n    port: number;\r\n    statusId: boolean;\r\n    profileName: string;\r\n    name: string;\r\n    createdBy: number;\r\n    entityId: number;\r\n    creationDate: Date;\r\n}\r\n","import { CampaignModel } from './campaign-model';\r\n\r\nexport class TestSmsModel {\r\n    dialWithParameters: string;\r\n    admCampaignsModel: CampaignModel;\r\n}\r\n","import { MenuItemModel } from \"./menu-item-model\";\r\nimport { RolePrivilegeModel } from \"./role-privilege-model\";\r\n\r\nexport class User {\r\n    id: number;\r\n    userName: string;\r\n    fName: string;\r\n    lName: string;\r\n    address: string;\r\n    email: string;\r\n    msisdn: string;\r\n    entityId: number;\r\n    entityName: string;\r\n    token: string;\r\n    src_ip: string;\r\n    role: number;\r\n    isActive: boolean;\r\n    isInternal: boolean;\r\n    signupStatus: number;\r\n    passwordCDate: string;\r\n    rejectionReason: string;\r\n    rolePrivilege: Array<number>;\r\n    menuItemModels: Array<MenuItemModel>;\r\n    privilegeList: Array<RolePrivilegeModel>;\r\n    createdBy: number;\r\n    canAddFakeSender: boolean;\r\n    isLdapUser: boolean;\r\n    needsApproval: boolean;\r\n    requiresDelivery: boolean;\r\n    constructor() {\r\n\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AnimationService {\r\n  public fadeOutElement(elementName: string, animationTime: number) {\r\n    if (!animationTime) {\r\n      animationTime = 2000;\r\n    }\r\n    var hwhwTime = animationTime;\r\n    let elementToAnimate: any;\r\n    elementToAnimate = document.getElementById(elementName);\r\n    //console.log(\"Animating Div \" + elementToAnimate + \", Duration:\" + animationTime);\r\n    // keyframes\r\n    elementToAnimate.animate({ opacity: ['1', '0'] },\r\n      { duration: animationTime + 1, iterations: 1 });\r\n  }\r\n\r\n  public fadeInElement(elementName: string, animationTime: number) {\r\n    if (!animationTime) {\r\n      animationTime = 2000;\r\n    }\r\n    var elementToAnimate: any = document.getElementById(elementName);\r\n    //console.log(document.getElementById(elementName));\r\n    // keyframes\r\n    elementToAnimate.animate({ opacity: ['0', '1'] },\r\n      { duration: animationTime, iterations: 1 });\r\n  }\r\n\r\n  public rotateElementInfinitely(divName: string, fullRotationTime: number) {\r\n    if (!fullRotationTime) {\r\n      fullRotationTime = 2000;\r\n    }\r\n    var divToRotate: any = document.getElementById(divName);\r\n    //console.log(document.getElementById(divName));\r\n    // keyframes\r\n    divToRotate.animate({ transform: ['rotate(0deg)', 'rotate(360deg)'] },\r\n      { duration: fullRotationTime, iterations: Infinity });\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { BaseService } from \"./base-service\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { ApiResponse } from \"../models/api-response\";\r\nimport { Defines } from \"../static/defines\";\r\nimport { ApiRequest } from \"../models/api-request\";\r\nimport { AuthorizationRequestModel } from \"../models/authorization-request-model\";\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthorizationService extends BaseService {\r\n    constructor(private client: HttpClient) {\r\n        super(client);\r\n    }\r\n    initAuthorizationUrl() {\r\n        this.authorizationUrl += this.secureApi + Defines.API_ENDPOINTS.AUTHORIZATION;\r\n        console.log(\"Authorization Url =>\", this.authorizationUrl);\r\n    }\r\n    public authorizeRequest(targetUrl: string, targetId: number) {\r\n        let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.AUTHORIZATION\r\n            + Defines.API_ENDPOINTS.AUTHORIZE;\r\n            let authRequest: AuthorizationRequestModel = new AuthorizationRequestModel(targetUrl,targetId);\r\n\r\n        return this.http.post<ApiResponse<AuthorizationRequestModel>>\r\n            (apiUrl, new ApiRequest(authRequest, \"\"), this.httpOptions).toPromise();\r\n    }\r\n\r\n}\r\n","import { environment } from 'src/environments/environment'\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Defines } from '../static/defines';\r\nimport { User } from '../models/user-model';\r\nexport abstract class BaseService {\r\n   http: HttpClient;\r\n   httpOptions = {\r\n      headers: new HttpHeaders({\r\n         'Content-Type': 'application/json',\r\n         'Access-Control-Allow-Origin': '*',\r\n         'Access-Control-Allow-Methods': 'POST',\r\n         'Access-Control-Allow-Headers': 'Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With'\r\n      })\r\n   };\r\n   constructor(httpClient: HttpClient) {\r\n      this.http = httpClient;\r\n      this.initAuthorizationUrl();\r\n   }\r\n\r\n   ngOnInit() {\r\n      console.log(\"hwhwhwhhwhwhwhhwhwhwhhwhwhwhhwhwhwh\");\r\n      // this.initAuthorizationUrl();\r\n   }\r\n   backendUrl: string = environment.backendUrl;\r\n   secureApi: string = environment.secureApiUrl;\r\n   nonSecureApi: string = environment.nonSecureApiUrl;\r\n   authorizationUrl: string = environment.backendContext; // to be completed by each service\r\n   \r\n   abstract initAuthorizationUrl();\r\n\r\n   scrollToError(): void {\r\n      // let invalidFields = [].slice.call(document.getElementsByClassName('ng-invalid'))\r\n      // if (invalidFields && invalidFields.length > 0) {\r\n      //    invalidFields[0].focus();\r\n      // }\r\n\r\n   }\r\n   accessGranted(privId: number, accessLevel: number): boolean {\r\n      let currentUser: User = JSON.parse(localStorage.getItem(Defines.SESSION_KEYS.userModel));\r\n      debugger;\r\n      console.log(\"privId in ==> \",privId,\"accessLevel In => \",accessLevel);\r\n      if (currentUser != null) {\r\n         return currentUser.privilegeList.some((rolePriv):boolean => {\r\n            console.log(\"Role Priv\" ,rolePriv);\r\n            if (rolePriv.privilegeId == privId && rolePriv.accessLevel == accessLevel) {\r\n               console.log(\"Found Priv and Access Level\");\r\n               return true;\r\n            } else {\r\n               return false;\r\n            }\r\n         })\r\n      } else {\r\n         console.log(\"User not logged in\");\r\n         return false;\r\n      }\r\n      return false;\r\n   }\r\n   cacheSessionObject(key: string, object: any) {\r\n      try {\r\n         if (key && object) {\r\n            sessionStorage.setItem(key, object);\r\n         } else {\r\n            throw \"Invalid input used \" + { \"key\": key, \"object\": object };\r\n         }\r\n      } catch (err) {\r\n         console.log(\"failed to save object [\" + key + \"] to session!\", err);\r\n      }\r\n   }\r\n\r\n   popSessionObject(key: string): any {\r\n      try {\r\n         if (key) {\r\n            let obj: any = sessionStorage.getItem(key);\r\n            if (obj) {\r\n               obj = JSON.parse(obj);\r\n               sessionStorage.removeItem(key);\r\n               return obj;\r\n            } else {\r\n               return null;\r\n            }\r\n         } else {\r\n            throw \"Null Key\";\r\n         }\r\n      } catch (err) {\r\n         console.log(\"failed to save object [\" + key + \"] to session!\", err);\r\n      }\r\n      return null;\r\n   }\r\n\r\n   async scrollIfFormHasErrors(form: FormGroup): Promise<any> {\r\n      try {\r\n         await form.invalid;\r\n         this.scrollToError();\r\n      } catch (err) {\r\n         console.log(\"Could not scroll to erroneous field \", err);\r\n      }\r\n   }\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { BaseService } from \"./base-service\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { ApiResponse } from \"../models/api-response\";\r\nimport { Defines } from \"../static/defines\";\r\nimport { ApiRequest } from \"../models/api-request\";\r\nimport { FileTypeModel } from \"../models/file-type-model\";\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LookupsService extends BaseService {\r\n    initAuthorizationUrl() {\r\n        this.authorizationUrl += this.secureApi + Defines.API_ENDPOINTS.LOOKUPS;\r\n        console.log(\"Authorization Url =>\", this.authorizationUrl);\r\n    }\r\n    constructor(private client: HttpClient) {\r\n        super(client);\r\n    }\r\n\r\n    public getfileTypes() {\r\n        let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.LOOKUPS\r\n            + Defines.API_ENDPOINTS.FILE_TYPES;\r\n        return this.http.post<ApiResponse<Array<FileTypeModel>>>\r\n            (apiUrl, new ApiRequest(null, \"\"), this.httpOptions).toPromise();\r\n    }\r\n\r\n}\r\n","import { Injectable, OnInit } from '@angular/core';\r\nimport { Message } from 'primeng/api';\r\nimport { Observable } from 'rxjs';\r\nimport { Defines } from '../static/defines';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NdpMessageService {\r\n\r\n\r\n  private messagesObservable: Observable<Array<Message>>;\r\n  // private successObservable: Observable<Array<Message>>;\r\n  // private warningObservable: Observable<Array<Message>>;\r\n  // private infoObservable: Observable<Array<Message>>;\r\n\r\n  private messagesObserver: any;\r\n  // private infoObserver: any;\r\n  // private warningObserver: any;\r\n  // private successObserver: any;\r\n  constructor() {\r\n    console.log(\"all arrays initialized\");\r\n    this.intitalizeObservables();\r\n  }\r\n\r\n\r\n  intitalizeObservables() {\r\n    this.messagesObservable = Observable.create(observer => {\r\n      console.log(\"Observer ===>\",observer);\r\n      this.messagesObserver = observer;\r\n    });\r\n    // this.infoObservable = Observable.create(observer => {\r\n    //   this.infoObserver = observer;\r\n    // });\r\n    // this.successObservable = Observable.create(observer => {\r\n    //   this.successObserver = observer;\r\n    // });\r\n    // this.warningObservable = Observable.create(observer => {\r\n    //   this.warningObserver = observer;\r\n    // });\r\n  }\r\n\r\n  allMessages(): Observable<Array<Message>> {\r\n    return this.messagesObservable;\r\n  }\r\n\r\n\r\n  // getWarningMessages(): Observable<Array<Message>> {\r\n  //   return this.warningObservable;\r\n  // }\r\n  // getInfoMessages(): Observable<Array<Message>> {\r\n  //   return this.infoObservable;\r\n  // }\r\n  // getSuccessMessages(): Observable<Array<Message>> {\r\n  //   return this.successObservable;\r\n  // }\r\n\r\n  addError(msgSummary: string, msgDetail: string) {\r\n    let errorMessages = new Array<Message>();\r\n    errorMessages.push({\r\n      severity: Defines.MSG_SEVERITY.error,\r\n      summary: msgSummary,\r\n      detail: msgDetail,\r\n      life: 10000\r\n    });\r\n    console.log(\"Emmitting errorMessages\",errorMessages);\r\n    this.messagesObserver.next(errorMessages);\r\n  }\r\n  addErrors(messages: string[]) {\r\n    let errorMessages = new Array<Message>();\r\n    messages.forEach(msg => errorMessages.push({\r\n      severity: Defines.MSG_SEVERITY.error,\r\n      summary: msg,\r\n      detail: undefined,\r\n      life: 10000\r\n    }));\r\n    this.messagesObserver.next(errorMessages);\r\n  }\r\n\r\n  addWarnings(messages: string[]) {\r\n    let warnings = new Array<Message>();\r\n    messages.forEach(msg => warnings.push({\r\n      severity: Defines.MSG_SEVERITY.warn,\r\n      summary: msg,\r\n      detail: undefined,\r\n      life: 10000\r\n    }));\r\n    this.messagesObserver.next(warnings);\r\n  }\r\n  addInfos(messages : string[]) {\r\n    let infoMsgs = new Array<Message>();\r\n    messages.forEach(msg => infoMsgs.push({\r\n      severity: Defines.MSG_SEVERITY.success,\r\n      summary: msg,\r\n      detail: undefined,\r\n      life: 3000\r\n    }));\r\n    this.messagesObserver.next(infoMsgs);\r\n  }\r\n\r\n  addInfo(message : string) {\r\n    let infoMsgs = new Array<Message>();\r\n    infoMsgs.push({\r\n      severity: Defines.MSG_SEVERITY.success,\r\n      summary: message,\r\n      detail: undefined,\r\n      life: 3000\r\n    });\r\n    this.messagesObserver.next(infoMsgs);\r\n  }\r\n  addSuccess(...messages: string[]) {\r\n    let successMsgs = new Array<Message>();\r\n    messages.forEach(msg => successMsgs.push({\r\n      severity: Defines.MSG_SEVERITY.success,\r\n      summary: msg,\r\n      detail: undefined,\r\n      life: 3000\r\n    }));\r\n    this.messagesObserver.next(successMsgs);\r\n  }\r\n\r\n  \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AppHoverDirective } from './directives/app-hover.directive';\r\nimport { BaseService } from './services/base-service';\r\nimport { ActiveLinkDirective } from './directives/active-link.directive';\r\nimport { NdpMessageService } from './services/ndp-message.service';\r\nimport { NdpButtonDirective } from './directives/ndp-button.directive';\r\nimport { SpecialCharactersDirective } from './directives/special-characters.directive';\r\nimport { RequiredDirective } from './directives/required.directive';\r\nimport { AuthorizationService } from './services/authorization.service';\r\nimport { NdpAuthorizeDirective } from './directives/ndp-authorize.directive';\r\n//import { NdpButtonDirective } from './directives/ndp-button.directive';\r\n\r\n@NgModule({\r\n  declarations: [SpecialCharactersDirective, RequiredDirective, AppHoverDirective, ActiveLinkDirective\r\n    , NdpButtonDirective, NdpAuthorizeDirective\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    SpecialCharactersDirective, RequiredDirective, AppHoverDirective, ActiveLinkDirective, NdpButtonDirective,\r\n    NdpAuthorizeDirective\r\n  ],\r\n  providers: [NdpMessageService,AuthorizationService]\r\n})\r\nexport class SharedModule { }\r\n","export class Defines {\r\n    public static CONSTANTS = {\r\n        \"tokenPrefix\": \"Bearer \",\r\n        \"BASE_URL\": document.getElementsByTagName(\"base\")[0].href + '/'\r\n    };\r\n\r\n    public static API_ENDPOINTS = {\r\n        \"LOGIN\": '/user/login',\r\n        \"CAMPAIGNS\": '/campaign',\r\n        \"AUTHORIZATION\": '/authorization',\r\n        \"AUTHORIZE\": '/checkAuthority',\r\n        \"B2BSENDERNAME\": '/sendername',\r\n        \"USER\": '/user',\r\n        \"MY_PROFILE\": '/myprofile',\r\n        \"GROUPS\": '/groups',\r\n        \"DIALS_URL\": '/dials',\r\n        \"FAILED_DIALS_URL\": '/failedDials',\r\n        \"ROLES\": '/roles',\r\n        \"list\": '/getrole',\r\n        \"loadPrivilege\": \"/loadprivilege\",\r\n        \"editrole\": \"/editrole\",\r\n        \"insertrole\": \"/insertrole\",\r\n        \"deleterole\": \"/deleterole\",\r\n        \"get\": \"/getonerole\",\r\n        \"logout\": \"/user/logout\",\r\n        \"SMSTEMPLATES\": '/smstemplates',\r\n        \"LIST\": '/list',\r\n        \"LIST_LDAP\": '/listldap',\r\n        \"CREATE\": '/create',\r\n        \"GET\": '/get',\r\n        \"UPDATE\": '/update',\r\n        \"UPDATE_PASSWORD\": '/updatepassword',\r\n        \"DELETE\": '/delete',\r\n        \"getaccesslevel\": '/getaccesslevel',\r\n        \"entity\": '/entity',\r\n        \"appprofile\": \"/appprofile\",\r\n        \"REGISTRATION\": '/registration',\r\n        \"SIGNUP\": '/signup',\r\n        \"RESET\": '/resetPassword',\r\n        \"RESET_EXPIRED\": '/resetExpiryPassword',\r\n        \"FORGOT\": '/forgot',\r\n        \"checkUsernameExists\": '/checkUsernameExists',\r\n        'checkEmailExists': '/checkEmailExists',\r\n        'signupRequests': '/signupRequests',\r\n        'approve': '/approve',\r\n        'SMSC': '/smscaccounts',\r\n        'listgroup': '/listgroup',\r\n        'LOOKUPS': '/lookups',\r\n        'FILE_TYPES': '/fileTypes',\r\n        'TEST_SMS': '/testsms',\r\n        'PAUSE': '/pause',\r\n        'REPORTS':'/reports',\r\n        \"GENERATE_REPORT\": '/generateReport'\r\n    };\r\n\r\n    public static API_CRUD = {\r\n        \"LIST\": '/list',\r\n        \"GET\": '/get',\r\n        \"UPDATE\": '/update',\r\n        \"CREATE\": '/create',\r\n        \"DELETE\": '/delete',\r\n        'PAUSE': '/pause',\r\n        'TEST_SMS': '/testsms',\r\n        'FAILED_DIALS':'/failedDials',\r\n        'LIST_DIALS': '/listDials',\r\n        'DELETE_DIALS': '/deleteDials',\r\n        'APPROVE': '/approve',\r\n        'SEARCH_DIALS': '/getDials',\r\n        'CREATE_ROLE': '/insertrole',\r\n        'UPDATE_ROLE': '/editrole',\r\n        'DELETE_ROLE':'/deleterole'\r\n\r\n    };\r\n\r\n    public static API_RESPONSES = {\r\n        \"success\": 0,\r\n        \"EXPIRED_PASSWORD\": 112,\r\n        \"generalSystemError\": 999\r\n    };\r\n    /*PrimeNG message severities*/\r\n    public static MSG_SEVERITY = {\r\n        'success': 'success',\r\n        'error': 'error',\r\n        'warn': 'warn',\r\n        'info': 'info'\r\n    };\r\n\r\n    public static SESSION_KEYS = {\r\n        'userModel': 'userModel',\r\n        'authToken': 'authToken',\r\n        'entityToEdit': 'entityToEdit'\r\n    };\r\n\r\n\r\n    public static B2B_CODES = {\r\n        \"InvalidUserOrpassword\": 99,\r\n        \"authenticationError\": 103,\r\n        \"authorizationError\": 104\r\n    };\r\n\r\n    public static SIGNUP_STATUS = {\r\n        \"PENDING\": 1,\r\n        \"APPROVED\": 2,\r\n        \"REJECTED\": 3\r\n    };\r\n\r\n    public static CAMPAIGN_STATUS = {\r\n        'PENDING': 1,\r\n        'APPROVED': 2,\r\n        'PROCESSING': 3,\r\n        'READY': 4,\r\n        'SUCCESS': 5,\r\n        'FAILED': 6,\r\n        'PROCESSING_GROUP': 7,\r\n        'SNAPSHOT_FAILED': 8,\r\n        'DELETED': 9,\r\n        'HANDLING': 10,\r\n        'SMS_ENQUEUED': 11,\r\n        'PAUSED': 12,\r\n        'ALL_MESSAGES_FAILED': 13\r\n    };\r\n\r\n    public static CAMPAIGN_DISPLAY_STATUS = {\r\n        'PENDING': 1,\r\n        'SCHEDULED': 2,\r\n        'RUNNING': 3,\r\n        'FINISHED': 4,\r\n        'PAUSED': 5,\r\n        'ALL': 6,\r\n        'FAILED': 7,\r\n        'PROCESSING_FILE': 8,\r\n        'ALL_MESSAGES_FAILED': 9\r\n    };\r\n\r\n    public static ACCESS_LEVELS = {\r\n        'OWN': 1,\r\n        'ENTITY': 2,\r\n        'EVERYTHING': 3\r\n    };\r\n\r\n    public static PRIVILEGES = {\r\n        'APP_PROFILE': {\r\n            'GET': 123,\r\n            'CREATE': 122,\r\n            'EDIT': 124,\r\n            'DELETE': 125,\r\n            'LIST': 121,\r\n        },\r\n        'CAMPAIGN': {\r\n            'GET': 171,\r\n            'CREATE': 16,\r\n            'EDIT': 172,\r\n            'DELETE': 170,\r\n            'LIST': 17,\r\n            'approve': 192,\r\n        },\r\n        'ENTITY': {\r\n            'GET': 9,\r\n            'CREATE': 10,\r\n            'EDIT': 11,\r\n            'DELETE': 12,\r\n            'LIST': 14,\r\n        },\r\n        'GROUP': {\r\n            'GET': 4,\r\n            'CREATE': 5,\r\n            'EDIT': 6,\r\n            'DELETE': 7,\r\n            'LIST': 13,\r\n            'DELETE_DIALS': 163,\r\n            'EXPORT_DIALS': 162\r\n        },\r\n        'SMSTEMPLATES': {\r\n            'LIST': 21\r\n        }\r\n    };\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZ24tdXAvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"page-content\\\" >\\r\\n  <div class=\\\"row no-gutters\\\">\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <div class=\\\"page-title\\\">\\r\\n        Register\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"section\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-12 text-left section-title\\\">\\r\\n        Sign Up Request\\r\\n      </div>\\r\\n    </div>\\r\\n    <form *ngIf=\\\"formInitComplete\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submitUser()\\\">\\r\\n      <div class=\\\"row \\\">\\r\\n        <div class=\\\"col-6\\\">\\r\\n          <div class=\\\"form-input\\\">\\r\\n            <label class=\\\"form-input-label\\\">Username</label>\\r\\n            <input nfSpecialCharacters   [(ngModel)]=\\\"user.userName\\\" required class=\\\"input\\\" placeholder=\\\"Enter Username\\\" formControlName=\\\"userName\\\" maxlength=\\\"25\\\"/>\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.controls.userName.invalid && (form.controls.userName.touched || form.controls.userName.dirty)\\\" class=\\\"invalid-feedback\\\">\\r\\n            <div *ngIf=\\\"form.controls.userName.errors?.required\\\">\\r\\n              User name required\\r\\n            </div>\\r\\n            <div *ngIf=\\\"form.controls.userName.errors?.pattern\\\">\\r\\n              Invalid user name\\r\\n            </div>\\r\\n            <div *ngIf=\\\"!form.controls.userName.errors.required && !!form.controls.userName.errors.nfSpecialCharacters\\\" >UserName Must be valid</div>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n        \\r\\n        <div class=\\\"col-6\\\">\\r\\n          <div class=\\\"form-input\\\">\\r\\n            <label class=\\\"form-input-label\\\">First Name</label>\\r\\n            <input nfSpecialCharacters   [(ngModel)]=\\\"user.fName\\\" required class=\\\"input\\\" placeholder=\\\"Enter First Name\\\" formControlName=\\\"fName\\\" maxlength=\\\"25\\\" />\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.controls.fName.invalid && (form.controls.fName.touched || form.controls.fName.dirty)\\\" class=\\\"invalid-feedback\\\">\\r\\n            <div *ngIf=\\\"form.controls.fName.errors?.required\\\">\\r\\n              First Name required\\r\\n            </div>\\r\\n            <div *ngIf=\\\"form.controls.fName.errors?.pattern\\\">\\r\\n              Invalid First Name\\r\\n            </div>\\r\\n            <div *ngIf=\\\"!form.controls.fName.errors.required && !!form.controls.fName.errors.nfSpecialCharacters\\\" >First Name Must be valid</div>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-6\\\">\\r\\n          <div class=\\\"form-input\\\">\\r\\n            <label class=\\\"form-input-label\\\">Last Name</label>\\r\\n            <input nfSpecialCharacters   [(ngModel)]=\\\"user.lName\\\" required class=\\\"input\\\" placeholder=\\\"Enter Last Name\\\" formControlName=\\\"lName\\\" maxlength=\\\"25\\\"/>\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.controls.lName.invalid && (form.controls.lName.touched || form.controls.lName.dirty)\\\" class=\\\"invalid-feedback\\\">\\r\\n            <div *ngIf=\\\"form.controls.lName.errors?.required\\\">\\r\\n              Last name required\\r\\n            </div>\\r\\n            <div *ngIf=\\\"form.controls.lName.errors?.pattern\\\">\\r\\n              Invalid Last name\\r\\n            </div>\\r\\n            <div *ngIf=\\\"!form.controls.lName.errors.required && !!form.controls.lName.errors.nfSpecialCharacters\\\" >Last Name Must be valid</div>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-6\\\">\\r\\n          <div class=\\\"form-input\\\">\\r\\n            <label class=\\\"form-input-label\\\">Address</label>\\r\\n            <input [(ngModel)]=\\\"user.address\\\"  class=\\\"input\\\" placeholder=\\\"Enter Address\\\" formControlName=\\\"address\\\" maxlength=\\\"100\\\"/>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"col-6\\\">\\r\\n          <div class=\\\"form-input\\\">\\r\\n            <label class=\\\"form-input-label\\\">Email</label>\\r\\n            <input nfSpecialCharacters   [(ngModel)]=\\\"user.email\\\" required class=\\\"input\\\" placeholder=\\\"Enter Email\\\" formControlName=\\\"email\\\" maxlength=\\\"100\\\"/>\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.controls.email.invalid && (form.controls.email.touched || form.controls.email.dirty)\\\" class=\\\"invalid-feedback\\\">\\r\\n            <div *ngIf=\\\"form.controls.email.errors?.required; else InvalidEmail\\\">\\r\\n              Email required\\r\\n            </div>\\r\\n            <ng-template #InvalidEmail>\\r\\n              Invalid Email\\r\\n            </ng-template>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"!form.controls.email.errors?.required && !!form.controls.email.errors?.nfSpecialCharacters\\\" >Email Must be valid</div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-6\\\">\\r\\n          <div class=\\\"form-input\\\">\\r\\n            <label class=\\\"form-input-label\\\">Mobile Number</label>\\r\\n            <input nfSpecialCharacters   [(ngModel)]=\\\"user.msisdn\\\" required class=\\\"input\\\" placeholder=\\\"Enter Mobile Number\\\" formControlName=\\\"msisdn\\\" maxlength=\\\"11\\\"/>\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"form.controls.msisdn.invalid && (form.controls.msisdn.touched || form.controls.msisdn.dirty)\\\" class=\\\"invalid-feedback\\\">\\r\\n            <div *ngIf=\\\"form.controls.msisdn.errors?.required\\\">\\r\\n              Mobile Number required\\r\\n            </div>\\r\\n            <div *ngIf=\\\"form.controls.msisdn.errors?.pattern\\\">\\r\\n              Invalid Mobile Number\\r\\n            </div>\\r\\n            <div *ngIf=\\\"!form.controls.msisdn.errors.required && !!form.controls.msisdn.errors.nfSpecialCharacters\\\" >Mobile Number Must be valid</div>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row mt-5 pt-3 pb-2\\\">\\r\\n        <div class=\\\"col-12 justify-content-center text-right\\\">\\r\\n          <button  type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\" class=\\\"button button-green mr-2 \\\">\\r\\n            Save\\r\\n          </button>\\r\\n          <button (click)=\\\"cancel()\\\" class=\\\"button button-black mr-2\\\">\\r\\n            Cancel\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { User } from '../../shared/models/user-model';\r\nimport { SignUpService } from '../sign-up.service';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators, AbstractControl, FormControl } from '@angular/forms';\r\nimport { map } from 'rxjs/operators';\r\nimport { Defines } from '../../shared/static/defines';\r\n\r\n@Component({\r\n  selector: 'ndp-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  user: User = new User();\r\n  formInitComplete = false;\r\n  form: FormGroup;\r\n\r\n  constructor(private signUpService: SignUpService, private router: Router,\r\n    private formbuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n  }\r\n  initForm() {\r\n    this.formInitComplete = false;\r\n\r\n    this.form = this.formbuilder.group({\r\n      userName: ['', [Validators.required, Validators.pattern('^[a-zA-Z][a-zA-Z0-9_.-]{1,24}$')]],\r\n      fName: ['', [Validators.required, Validators.pattern(\"^[a-zA-Z][a-zA-Z .'-]{1,24}$\")]],\r\n      lName: ['', [Validators.required, Validators.pattern(\"^[a-zA-Z][a-zA-Z .'-]{1,24}$\")]],\r\n      address: new FormControl(),\r\n      email: ['', [Validators.required, Validators.email]],\r\n      msisdn: ['', [Validators.pattern('[+]?[0][1][1|0|2|5][0-9]{8}')]]\r\n    })\r\n    this.formInitComplete = true;\r\n  }\r\n\r\n  checkUsernameExists(username: string) {\r\n    this.signUpService.checkUsernameExists(username).subscribe(res => {\r\n      if (res.errors.length > 0 || res.status != 0)\r\n        return true;\r\n      return false;\r\n    });\r\n  }\r\n\r\n  checkEmailExists(email: string) {\r\n    this.signUpService.checkEmailExists(email).subscribe(res => {\r\n      if (res.errors.length > 0 || res.status != 0)\r\n        return true;\r\n      return false;\r\n    });\r\n  }\r\n\r\n  submitUser() {\r\n    this.signUpService.createUser(this.user).subscribe(user => {\r\n      console.log(\"Create user ==> \", user.responsePayload);\r\n      if(user.status ==0 )\r\n      this.router.navigateByUrl('login');\r\n    });\r\n  }\r\n\r\n  validateUser() {\r\n    this.signUpService.checkUsernameExists(this.user.userName).subscribe(username => {\r\n      if (username.errors.length > 0 || username.status != 0) {\r\n        console.log(username.errors.length);\r\n        return false;\r\n      }\r\n      else {\r\n        this.signUpService.checkEmailExists(this.user.email).subscribe(email => {\r\n          if (email.errors.length > 0 || email.status != 0) {\r\n            console.log(email.errors.length);\r\n            return false;\r\n          }\r\n          else {\r\n            return true;\r\n          }\r\n        });\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  cancel() {\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Defines } from '../shared/static/defines';\r\nimport { BaseService } from '../shared/services/base-service';\r\nimport { ApiResponse } from '../shared/models/api-response';\r\nimport { ApiRequest } from '../shared/models/api-request';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../shared/models/user-model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SignUpService extends BaseService {\r\n\r\n\r\n  constructor(private client: HttpClient) {\r\n    super(client);\r\n  }\r\n  //Not Needed here\r\n  initAuthorizationUrl() {\r\n    this.authorizationUrl += this.secureApi + Defines.API_ENDPOINTS.SIGNUP;\r\n    console.log(\"Authorization Url =>\", this.authorizationUrl);\r\n}\r\n  public createUser(user: User): Observable<ApiResponse<any>> {\r\n    let apiUrl = this.backendUrl + this.nonSecureApi + Defines.API_ENDPOINTS.REGISTRATION + Defines.API_ENDPOINTS.SIGNUP;\r\n    let obs: Observable<any> = this.http.post<ApiResponse<any>>\r\n      (apiUrl, new ApiRequest(user, \"\"), this.httpOptions);\r\n    return obs;\r\n  }\r\n\r\n  public checkUsernameExists(username: string): Observable<ApiResponse<any>> {\r\n    let apiUrl = this.backendUrl + this.nonSecureApi + Defines.API_ENDPOINTS.REGISTRATION + Defines.API_ENDPOINTS.checkUsernameExists;\r\n    let obs: Observable<any> = this.http.post<ApiResponse<any>>\r\n      (apiUrl, new ApiRequest(username, \"\"), this.httpOptions);\r\n    return obs;\r\n  }\r\n\r\n  public checkEmailExists(email: string): Observable<ApiResponse<any>> {\r\n    let apiUrl = this.backendUrl + this.nonSecureApi + Defines.API_ENDPOINTS.REGISTRATION + Defines.API_ENDPOINTS.checkEmailExists;\r\n    let obs: Observable<any> = this.http.post<ApiResponse<any>>\r\n      (apiUrl, new ApiRequest(email, \"\"), this.httpOptions);\r\n    return obs;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { RegisterComponent } from '../register/register.component';\r\n\r\n@NgModule({\r\n  declarations: [RegisterComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class SignupModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Ntcy10ZW1wbGF0ZXMvYWRkLWVkaXQtc21zL2FkZC1lZGl0LXNtcy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ndp-add-edit-sms',\r\n  templateUrl: './add-edit-sms.component.html',\r\n  styleUrls: ['./add-edit-sms.component.css']\r\n})\r\nexport class AddEditSmsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".confirmDialog{\\r\\n    width: 95.2%;\\r\\n    margin-left: -10px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc21zLXRlbXBsYXRlcy9zbXMtdGVtcGxhdGUtbGlzdC9zbXMtdGVtcGxhdGUtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLGtCQUFrQjtBQUN0QiIsImZpbGUiOiJzcmMvYXBwL3Ntcy10ZW1wbGF0ZXMvc21zLXRlbXBsYXRlLWxpc3Qvc21zLXRlbXBsYXRlLWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb25maXJtRGlhbG9ne1xyXG4gICAgd2lkdGg6IDk1LjIlO1xyXG4gICAgbWFyZ2luLWxlZnQ6IC0xMHB4O1xyXG59Il19 */\"","module.exports = \"<div (click)=\\\"hideDropDown()\\\" class=\\\"page-content sms-template\\\">\\r\\n  <div class=\\\"row no-gutters\\\">\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <div class=\\\"page-title\\\">\\r\\n        SMS Templates\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-xl-6 col-lg-12 text-right\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-8\\\">\\r\\n          <div\\r\\n            *ngIf=\\\"smsTemplateList && smsTemplateList.length > 1 && createTemplate === false && editTemplate === false\\\"\\r\\n            class=\\\"search-input\\\">\\r\\n            <input [(ngModel)]=\\\"filter\\\" type=\\\"text\\\" class=\\\"\\\" placeholder=\\\"Search by SMS Name/Script\\\">\\r\\n            <i class=\\\"icon-search icon\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-4\\\">\\r\\n          <a ndpAuthorize [targetUrl]=\\\"authorizationUrl+ defines.CREATE\\\" (successHandler)=\\\"createSms()\\\"\\r\\n            class=\\\"button button-green\\\">Create Template</a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"createTemplate\\\" class=\\\"section animated fadeIn faster\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-12 text-left section-title\\\">\\r\\n        Create SMS Template\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row \\\">\\r\\n      <div class=\\\"col-4\\\">\\r\\n\\r\\n        <form [formGroup]=\\\"smsForm\\\">\\r\\n          <div class=\\\"form-input\\\">\\r\\n            <label class=\\\"form-input-label\\\">Template Name</label>\\r\\n            <input formControlName=\\\"title\\\" class=\\\"input\\\"\\r\\n              [ngClass]=\\\"{ 'invalid-input': sf.title.errors && (sf.title.touched || sf.title.dirty) }\\\" />\\r\\n            <div *ngIf=\\\"smsForm.get('title').errors && (smsForm.get('title').touched || smsForm.get('title').dirty)\\\">\\r\\n              <div *ngIf=\\\"!!sf.title.errors.required\\\" class=\\\"invalid-text\\\">Template name is required</div>\\r\\n              <div *ngIf=\\\"!!sf.title.errors.minlength\\\" class=\\\"invalid-text\\\">Template name must be at least 5\\r\\n                characters</div>\\r\\n              <div *ngIf=\\\"!!sf.title.errors.maxlength\\\" class=\\\"invalid-text\\\">Template name must not exceed 25\\r\\n                characters</div>\\r\\n              <div *ngIf=\\\"!!sf.title.errors.smsExists\\\" class=\\\"invalid-text\\\">This Template Name Already Exists</div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row mt-4 \\\">\\r\\n      <div class=\\\"col-12\\\">\\r\\n\\r\\n        <form [formGroup]=\\\"smsForm\\\">\\r\\n          <div class=\\\"form-input\\\">\\r\\n            <label class=\\\"form-input-label\\\">SMS Script</label>\\r\\n            <textarea autosize [minRows]=\\\"1\\\" [maxRows]=\\\"8\\\" formControlName=\\\"text\\\" class=\\\"input\\\"\\r\\n              [ngClass]=\\\"{ 'invalid-input': sf.text.errors && (sf.text.touched || sf.text.dirty) }\\\"></textarea>\\r\\n            <span style=\\\"font-size:12px;\\\"\\r\\n              [ngClass]=\\\"{'invalid-text': sf.text.errors && (sf.text.touched || sf.text.dirty)}\\\">{{smsScriptLength}}\\r\\n              / 160</span>\\r\\n            <span style=\\\"margin-left: 10px;\\\"\\r\\n              *ngIf=\\\"smsForm.get('text').errors && (smsForm.get('text').touched || smsForm.get('text').dirty)\\\">\\r\\n              <span *ngIf=\\\"!!sf.text.errors.required\\\" class=\\\"invalid-text\\\">SMS script is required</span>\\r\\n              <span *ngIf=\\\"!!sf.text.errors.minlength\\\" class=\\\"invalid-text\\\">SMS script must be at least 5\\r\\n                characters</span>\\r\\n              <span *ngIf=\\\"!!sf.text.errors.maxlength\\\" class=\\\"invalid-text\\\">SMS script must not exceed 160\\r\\n                characters</span>\\r\\n            </span>\\r\\n          </div>\\r\\n        </form>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row mt-5 pt-3 pb-2\\\">\\r\\n      <div class=\\\"col-12 justify-content-center text-right\\\">\\r\\n        <button (click)=\\\"saveSms(editableTemplate)\\\" class=\\\"button button-green mr-2 \\\">\\r\\n          Save Template\\r\\n        </button>\\r\\n        <button (click)=\\\"cancel(null)\\\" class=\\\"button button-black mr-2\\\">\\r\\n          Cancel\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"smsTemplateList\\\">\\r\\n    <div *ngIf=\\\"setFilteredList(smsTemplateList | smstemplateTitletextFilter:filter)\\\"></div>\\r\\n    <div *ngIf=\\\"createTemplate === false\\\">\\r\\n      <div\\r\\n        *ngFor=\\\"let template of filteredList | orderBy: key : reverse : true | paginate: { itemsPerPage: perPage, currentPage: p }; let i = index\\\"\\r\\n        class=\\\"section animated fadeInUp faster\\\">\\r\\n        <div class=\\\"row no-gutters confirmDialog animated fadeIn faster text-center\\\"\\r\\n          *ngIf=\\\"deleteConfirm && (deleteConfirmId == template.id)\\\">\\r\\n          <div class=\\\"col-12\\\">Are you sure you want to delete <b>{{template.title}}</b> SMS Template?</div>\\r\\n          <div class=\\\"col-12 mt-2\\\">\\r\\n            <button class=\\\"button button-green mr-4\\\" (click)=\\\"deleteSms(template)\\\">DELETE</button>\\r\\n            <button class=\\\"button button-black \\\" (click)=\\\"hideConfirmDelete()\\\">CANCEL</button>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"template.id !== editableTemplateId\\\"\\r\\n          [ngClass]=\\\"{ 'blur': deleteConfirm && (deleteConfirmId == template.id)}\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-6 text-left campaign-text\\\">\\r\\n              {{template.title}}\\r\\n            </div>\\r\\n            <div *ngIf=\\\"createTemplate === false\\\" class=\\\"col-6 text-right\\\">\\r\\n              <a (click)=\\\"dropDownOpen(template)\\\" class=\\\"campaigns-item-actions-link\\\">\\r\\n                <i class=\\\"icon-dropdown-dots icon icon-lg icon-gray\\\"></i>\\r\\n              </a>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"dropDownSmsId === template.id\\\" [ngClass]=\\\"{'hide':!dropDown}\\\"  class=\\\"dropdown animated flipInX faster\\\">\\r\\n              <ul class=\\\"list\\\">\\r\\n                <li ndpAuthorize [targetUrl]=\\\"authorizationUrl+ defines.UPDATE\\\" [targetId]=\\\"template.id\\\"\\r\\n                  (successHandler)=\\\"editSms(template)\\\"><span class=\\\"fas fa-edit\\\"></span>Edit</li>\\r\\n                <li ndpAuthorize [targetUrl]=\\\"authorizationUrl+ defines.DELETE\\\" [targetId]=\\\"template.id\\\"\\r\\n                  (successHandler)=\\\"confirmDelete(template.id)\\\"><span class=\\\"fas fa-trash\\\"></span>Delete</li>\\r\\n              </ul>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row mt-1\\\">\\r\\n            <div class=\\\"col-12\\\">\\r\\n              <div class=\\\"form-input\\\">\\r\\n                <label class=\\\"form-input-label\\\">Template ID</label>\\r\\n                <div class=\\\"title-gray-dark\\\"> {{template.id}}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row mt-1\\\">\\r\\n            <div class=\\\"col-12\\\">\\r\\n              <div class=\\\"form-input\\\">\\r\\n                <label class=\\\"form-input-label\\\">SMS Script</label>\\r\\n                <div class=\\\"title-gray-dark\\\"> {{template.text}}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"(template.id === editableTemplateId) && editTemplate\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-12 text-left section-title\\\">\\r\\n              Edit SMS Template\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row \\\">\\r\\n            <div class=\\\"col-4\\\">\\r\\n              <form [formGroup]=\\\"smsForm\\\">\\r\\n                <div class=\\\"form-input\\\">\\r\\n                  <label class=\\\"form-input-label\\\">Template Name</label>\\r\\n                  <input formControlName=\\\"title\\\" class=\\\"input\\\"\\r\\n                    [ngClass]=\\\"{ 'invalid-input': sf.title.errors && (sf.title.touched || sf.title.dirty || sf.title.value !== '') }\\\" />\\r\\n                  <div\\r\\n                    *ngIf=\\\"smsForm.get('title').errors && (smsForm.get('title').touched || smsForm.get('title').dirty || smsForm.get('title').value !== '')\\\">\\r\\n                    <div *ngIf=\\\"!!sf.title.errors.required\\\" class=\\\"invalid-text\\\">Template name is required</div>\\r\\n                    <div *ngIf=\\\"!!sf.title.errors.minlength\\\" class=\\\"invalid-text\\\">Template name must be at least 5\\r\\n                      characters</div>\\r\\n                    <div *ngIf=\\\"!!sf.title.errors.maxlength\\\" class=\\\"invalid-text\\\">Template name must not exceed 25\\r\\n                      characters</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </form>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row mt-4 \\\">\\r\\n            <div class=\\\"col-12\\\">\\r\\n              <form [formGroup]=\\\"smsForm\\\">\\r\\n                <div class=\\\"form-input\\\">\\r\\n                  <label class=\\\"form-input-label\\\">SMS Script</label>\\r\\n                  <input formControlName=\\\"text\\\" class=\\\"input\\\"\\r\\n                    [ngClass]=\\\"{ 'invalid-input': sf.text.errors && (sf.text.touched || sf.text.dirty || smsForm.get('text').value != '') }\\\" />\\r\\n                  <span style=\\\"font-size:12px;\\\"\\r\\n                    [ngClass]=\\\"{'invalid-text': sf.text.errors && (sf.text.touched || sf.text.dirty || smsForm.get('text').value != '')}\\\">{{smsScriptLength}}\\r\\n                    / 160</span>\\r\\n                  <span style=\\\"margin-left: 10px;\\\"\\r\\n                    *ngIf=\\\"smsForm.get('text').errors && (smsForm.get('text').touched || smsForm.get('text').dirty || smsForm.get('text').value != '')\\\">\\r\\n                    <span *ngIf=\\\"!!sf.text.errors.required\\\" class=\\\"invalid-text\\\">SMS script is required</span>\\r\\n                    <span *ngIf=\\\"!!sf.text.errors.minlength\\\" class=\\\"invalid-text\\\">SMS script must be at least 5\\r\\n                      characters</span>\\r\\n                    <span *ngIf=\\\"!!sf.text.errors.maxlength\\\" class=\\\"invalid-text\\\">SMS script must not exceed 160\\r\\n                      characters</span>\\r\\n                  </span>\\r\\n                </div>\\r\\n              </form>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row mt-5 pt-3 pb-2\\\">\\r\\n            <div class=\\\"col-12 justify-content-center text-right\\\">\\r\\n              <button (click)=\\\"saveSms(editableTemplate)\\\" class=\\\"button button-green mr-2 \\\">\\r\\n                Save Template\\r\\n              </button>\\r\\n              <button (click)=\\\"cancel()\\\" class=\\\"button button-black mr-2\\\">\\r\\n                Cancel\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"createTemplate === false && smsTemplateList.length > 0\\\" class=\\\"ngx-pagination\\\">\\r\\n      <div class=\\\"form-input form-input-select form-selectbox itemsNum animate fadeInUp\\\">\\r\\n        <label class=\\\"form-input-label\\\">Item/Page</label>\\r\\n        <select [(ngModel)]=\\\"perPage\\\" (change)=\\\"resetPagination()\\\" class=\\\"paginSelect\\\">\\r\\n          <option>3</option>\\r\\n          <option>5</option>\\r\\n          <option>10</option>\\r\\n          <option>20</option>\\r\\n          <option>50</option>\\r\\n        </select>\\r\\n      </div>\\r\\n      <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"smsTemplateList && filteredList && filteredList.length === 0\\\">\\r\\n    <div class=\\\"row mt-4 animated fadeIn fast\\\">\\r\\n      <div class=\\\"col-12 mt-4 text-center\\\">\\r\\n        <div class=\\\"col-12 mt-4 fas fa-comment-slash fa-7x faded-grey\\\"></div>\\r\\n        <div class=\\\"col-12 mt-4 page-title faded-grey\\\"><b>No SMS Templates</b></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { SmsTemplateModel } from 'src/app/shared/models/sms-template-model';\r\nimport { SmsTemplatesService } from '../sms-templates.service';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { FormBuilder, FormGroup, Validators, AbstractControl, ValidatorFn } from '@angular/forms';\r\nimport { Defines } from 'src/app/shared/static/defines';\r\n\r\n@Component({\r\n  selector: 'ndp-sms-template-list',\r\n  templateUrl: './sms-template-list.component.html',\r\n  styleUrls: ['./sms-template-list.component.css']\r\n})\r\nexport class SmsTemplateListComponent implements OnInit {\r\n  smsTemplateList = new Array<SmsTemplateModel>();\r\n  filteredList = null;\r\n  initialized: boolean;\r\n\r\n  smsForm: FormGroup;\r\n  smsScriptLength = 0;\r\n  editableTemplate: SmsTemplateModel;\r\n  editableTemplateId: number;\r\n  editTemplate: boolean;\r\n  createTemplate: boolean;\r\n  dropDown: boolean;\r\n  dropDownSmsId: number;\r\n  dropDownClick: number;\r\n  dropDownId: number;\r\n\r\n  deleteConfirm = false;\r\n  deleteConfirmId: number;\r\n\r\n  //Pagination Filtering & Sorting\r\n  p: number = 1;\r\n  perPage: number = 10;\r\n  //filtering\r\n  filter: string;\r\n  //sorting\r\n  key: string = 'title';\r\n  reverse: boolean = false;\r\n\r\n    //Authorization Vars\r\n    authorizationUrl: string;\r\n    defines = Defines.API_CRUD;\r\n  sort(key) {\r\n    this.key = key;\r\n    this.reverse = !this.reverse;\r\n  }\r\n  constructor(private smsService: SmsTemplatesService, private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    // Initialize Sms Listing\r\n    this.authorizationUrl = this.smsService.authorizationUrl;\r\n    this.createTemplate = false;\r\n    this.editTemplate = false;\r\n    this.initialized = false;\r\n    this.listSms();\r\n\r\n    this.smsForm = this.formBuilder.group({\r\n      id: null,\r\n      title: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(25), this.nameExists()]],\r\n      text: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(160)]],\r\n      language: [1],\r\n      createdBy: 4\r\n    });\r\n\r\n    this.smsForm.controls.text.valueChanges.subscribe(val => {\r\n      if (val) {\r\n        this.smsScriptLength = val.length;\r\n      } else {\r\n        this.smsScriptLength = 0;\r\n      }\r\n    });\r\n  }\r\n  get sf() { return this.smsForm.controls; }\r\n  resetPagination() {\r\n    if (this.p > 1) {\r\n      this.p = 1;\r\n    }\r\n  }\r\n\r\n  confirmDelete(id: number) {\r\n    this.deleteConfirm = true;\r\n    this.deleteConfirmId = id;\r\n  }\r\n  hideConfirmDelete() {\r\n    this.deleteConfirm = false;\r\n    this.deleteConfirmId = null;\r\n  }\r\n\r\n  hideDropDown() {\r\n    this.dropDownClick++;\r\n    if (this.dropDown && this.dropDownClick > 1) {\r\n      this.dropDown = false;\r\n      /*this.dropDownSmsId = null;*/\r\n    }\r\n  }\r\n\r\n  showDropDown(campaign: number) {\r\n    this.dropDownClick = 0;\r\n    this.dropDown = true;\r\n  }\r\n\r\n  listSms() {\r\n    this.smsService.listSmsTemplates().subscribe(templates => {\r\n      if (templates.responsePayload.length === 0) {\r\n        this.smsTemplateList = new Array();\r\n      }\r\n      this.smsTemplateList = templates.responsePayload;\r\n      this.filteredList = new Array<SmsTemplateModel>();\r\n      this.filteredList = this.smsTemplateList;\r\n    });\r\n  }\r\n\r\n  dropDownOpen(smsModel: SmsTemplateModel) {\r\n    this.dropDownSmsId = smsModel.id;\r\n    this.dropDownClick = 0;\r\n    this.dropDown = true;\r\n  }\r\n\r\n  dropDownClose() {\r\n    this.dropDownSmsId = null;\r\n    this.dropDown = false;\r\n  }\r\n\r\n  clickedOut(event) {\r\n    this.dropDownClose();\r\n  }\r\n\r\n  editSms(smsModel: SmsTemplateModel) {\r\n    this.editableTemplateId = smsModel.id;\r\n    this.smsForm.setValue({\r\n      id: smsModel.id,\r\n      title: smsModel.title,\r\n      text: smsModel.text,\r\n      language: smsModel.language,\r\n      createdBy: smsModel.createdBy\r\n    });\r\n    this.smsForm.get('title').clearValidators();\r\n    this.smsForm.get('title').setValidators([Validators.required, Validators.minLength(5), Validators.maxLength(40)]);\r\n\r\n    this.editableTemplate = Object.assign({}, this.smsForm.value);\r\n    this.editTemplate = true;\r\n    this.dropDownClose();\r\n  }\r\n\r\n  deleteSms(smsModel: SmsTemplateModel) {\r\n    this.smsService.deleteSmsTemplate(smsModel).subscribe(template => {\r\n      if (template.status === 0) {\r\n        this.smsTemplateList = this.smsTemplateList.filter(x => x.id !== smsModel.id);\r\n      }\r\n    });\r\n    this.hideConfirmDelete();\r\n    this.dropDownClose();\r\n  }\r\n\r\n  saveSms(smsModel: SmsTemplateModel) {\r\n    if (this.smsForm.invalid) {\r\n      this.smsForm.controls.title.markAsTouched();\r\n      this.smsForm.controls.text.markAsTouched();\r\n      return;\r\n    }\r\n    if (this.createTemplate) {\r\n      this.smsService.createSmsTemplate(this.smsForm.value).subscribe(template => {\r\n\r\n        if (template.warnings.length === 0) {\r\n          console.log(\"Creating smsTemplate ==> \", template.responsePayload);\r\n          smsModel = Object.assign({}, this.smsForm.value);\r\n          this.smsTemplateList.push(smsModel);\r\n          this.createTemplate = false;\r\n          this.editableTemplate = null;\r\n          this.editableTemplateId = null;\r\n          this.listSms();\r\n        }\r\n\r\n      });\r\n    }\r\n    if (this.editTemplate) {\r\n      this.smsService.updateSmsTemplate(this.smsForm.value).subscribe(template => {\r\n        console.log(\"Updating smsTemplate ==> \", template.responsePayload);\r\n        this.smsTemplateList[this.smsTemplateList.findIndex(record => record.id === this.editableTemplate.id)] = this.smsForm.value;\r\n        this.editableTemplateId = null;\r\n        this.editTemplate = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    if (this.editTemplate) {\r\n      this.editableTemplateId = null;\r\n      this.editTemplate = false;\r\n      this.smsForm.controls.title.markAsUntouched();\r\n      this.smsForm.controls.text.markAsUntouched();\r\n    }\r\n\r\n    if (this.createTemplate) {\r\n      this.createTemplate = false;\r\n      this.smsForm.markAsUntouched();\r\n      this.smsForm.markAsPristine();\r\n    }\r\n  }\r\n\r\n  createSms() {\r\n    this.createTemplate = true;\r\n    this.smsForm.reset();\r\n    this.smsForm.setValue({\r\n      id: null,\r\n      title: null,\r\n      text: null,\r\n      language: 1,\r\n      createdBy: 4\r\n    });\r\n    this.smsForm.markAsUntouched();\r\n    this.smsForm.markAsPristine();\r\n    this.smsForm.get('title').setValidators([Validators.required, Validators.minLength(5), Validators.maxLength(40), this.nameExists()]);\r\n\r\n  }\r\n\r\n  nameExists(): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: boolean } | null => {\r\n      let found = false;\r\n      this.smsTemplateList.forEach(sms => {\r\n        if (control.value != null  && sms.title.trim().toLowerCase() === control.value.trim().toLowerCase()) {\r\n          found = true;\r\n        }\r\n      });\r\n      if (found) {\r\n        return { 'smsExists': true };\r\n      }\r\n      return null;\r\n    };\r\n  }\r\n\r\n  setFilteredList(filtered: SmsTemplateModel[]) {\r\n    this.filteredList = filtered;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AddEditSmsComponent } from './add-edit-sms/add-edit-sms.component';\r\nimport { SmsTemplateListComponent } from './sms-template-list/sms-template-list.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\nimport { OrderModule } from 'ngx-order-pipe';\r\nimport { SmstemplateTitletextFilter } from '../shared/Pipes/smstemplate-titletext-filter.pipe';\r\nimport { AutosizeModule } from 'ngx-autosize';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [AddEditSmsComponent, SmsTemplateListComponent, SmstemplateTitletextFilter],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    NgxPaginationModule,\r\n    Ng2SearchPipeModule,\r\n    OrderModule,\r\n    ReactiveFormsModule,\r\n    AutosizeModule,\r\n    SharedModule\r\n  ], exports: [AddEditSmsComponent, SmsTemplateListComponent]\r\n})\r\nexport class SmsTemplatesModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { BaseService } from '../shared/services/base-service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ApiResponse } from '../shared/models/api-response';\r\nimport { Defines } from '../shared/static/defines';\r\nimport { ApiRequest } from '../shared/models/api-request';\r\nimport { SmsTemplateModel } from '../shared/models/sms-template-model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SmsTemplatesService extends BaseService {\r\n  constructor(private client: HttpClient) {\r\n    super(client);\r\n  }\r\n  initAuthorizationUrl() {\r\n    this.authorizationUrl += this.secureApi + Defines.API_ENDPOINTS.SMSTEMPLATES;\r\n    console.log(\"Authorization Url =>\", this.authorizationUrl);\r\n}\r\n  public listSmsTemplates(): Observable<ApiResponse<Array<SmsTemplateModel>>> {\r\n    const apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.SMSTEMPLATES + Defines.API_ENDPOINTS.LIST;\r\n    const obs: Observable<any> = this.http.post<ApiResponse<Array<SmsTemplateModel>>>\r\n      (apiUrl, new ApiRequest(null, ''), this.httpOptions);\r\n    return obs;\r\n  }\r\n\r\n  public getSmsTemplate(smsTemplate: SmsTemplateModel): Observable<ApiResponse<Array<SmsTemplateModel>>> {\r\n    const apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.SMSTEMPLATES + Defines.API_ENDPOINTS.GET;\r\n    const obs: Observable<any> = this.http.post<ApiResponse<Array<SmsTemplateModel>>>\r\n      (apiUrl, new ApiRequest(smsTemplate, ''), this.httpOptions);\r\n    return obs;\r\n  }\r\n\r\n  public updateSmsTemplate(smsTemplate: SmsTemplateModel): Observable<ApiResponse<any>> {\r\n    console.log('Service Create Template ==> ', smsTemplate);\r\n    const apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.SMSTEMPLATES + Defines.API_ENDPOINTS.UPDATE;\r\n    const obs: Observable<any> = this.http.post<ApiResponse<any>>\r\n      (apiUrl, new ApiRequest(smsTemplate, ''), this.httpOptions);\r\n    return obs;\r\n  }\r\n\r\n  public createSmsTemplate(smsTemplate: SmsTemplateModel): Observable<ApiResponse<any>> {\r\n    console.log('Service Create Template ==> ', smsTemplate);\r\n    const apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.SMSTEMPLATES + Defines.API_ENDPOINTS.CREATE;\r\n    const obs: Observable<any> = this.http.post<ApiResponse<any>>\r\n      (apiUrl, new ApiRequest(smsTemplate, ''), this.httpOptions);\r\n    return obs;\r\n  }\r\n\r\n  public deleteSmsTemplate(smsTemplate: SmsTemplateModel): Observable<ApiResponse<any>> {\r\n    console.log('Service Delete Template ==> ', smsTemplate);\r\n    const apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.SMSTEMPLATES + Defines.API_ENDPOINTS.DELETE;\r\n    const obs: Observable<any> = this.http.post<ApiResponse<any>>\r\n      (apiUrl, new ApiRequest(smsTemplate, ''), this.httpOptions);\r\n    return obs;\r\n  }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Ntc2MvYWRkLWVkaXQtc21zYy9hZGQtZWRpdC1zbXNjLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"page-content groups-details\\\">\\r\\n  <div class=\\\"section\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div *ngIf=\\\"!isCreate\\\" class=\\\"col-12 text-left section-title\\\">\\r\\n        Edit SMSC Account\\r\\n      </div>\\r\\n      <div *ngIf=\\\"isCreate\\\" class=\\\"col-12 text-left section-title\\\">\\r\\n        Create SMSC Account\\r\\n      </div>\\r\\n    </div>\\r\\n    <form [formGroup]=\\\"mainForm\\\">\\r\\n      <div *ngIf=\\\"smscModel\\\" class=\\\"form-input\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-8\\\">\\r\\n            <label class=\\\"form-input-label\\\">SMSC Name</label>\\r\\n\\r\\n            <input  nfSpecialCharacters    type=\\\"text\\\" pInputText [(ngModel)]=\\\"smscModel.name\\\" formControlName=\\\"smscName\\\" />\\r\\n            <div *ngIf=\\\"!!f.smscName.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n              <div *ngIf=\\\"!!f.smscName.errors.required\\\">Smsc name is required</div>\\r\\n              <div *ngIf=\\\"!!f.smscName.errors.maxlength\\\" class=\\\"invalid-text\\\">SMSC Name must not exceed 25\\r\\n                characters</div>\\r\\n                <div *ngIf=\\\"!f.smscName.errors.required && !!f.smscName.errors.nfSpecialCharacters\\\" >Smsc Name Must be valid</div>\\r\\n   \\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row mt-5\\\">\\r\\n          <div class=\\\"col-4\\\">\\r\\n            <label class=\\\"form-input-label\\\">SMSC IP</label>\\r\\n            <input type=\\\"text\\\" nfSpecialCharacters   pInputText [(ngModel)]=\\\"smscModel.ip\\\" formControlName=\\\"smscIp\\\" />\\r\\n            <div *ngIf=\\\"submitted && !!f.smscIp.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n              <div *ngIf=\\\"!!f.smscIp.errors.required\\\">Smsc Ip is required</div>\\r\\n              <div *ngIf=\\\"!f.smscIp.errors.required && !!f.smscIp.errors.nfSpecialCharacters\\\" >Smsc Ip Must be valid</div>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-4\\\">\\r\\n            <label class=\\\"form-input-label\\\">SMSC Port</label>\\r\\n            <input type=\\\"number\\\" pInputText [(ngModel)]=\\\"smscModel.port\\\" formControlName=\\\"smscPort\\\" />\\r\\n            <div *ngIf=\\\"submitted && !!f.smscPort.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n              <div *ngIf=\\\"!!f.smscPort.errors.required\\\">Smsc port is required</div>\\r\\n              <div *ngIf=\\\"!!f.smscPort.errors.min\\\">Smsc port is incorrect</div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row mt-5\\\">\\r\\n          <div class=\\\"col-4\\\">\\r\\n            <label class=\\\"form-input-label\\\">SMSC Username</label>\\r\\n            <input  nfSpecialCharacters   type=\\\"text\\\" pInputText [(ngModel)]=\\\"smscModel.userName\\\" formControlName=\\\"smscUsername\\\" />\\r\\n            <div *ngIf=\\\"!!f.smscUsername.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n              <div *ngIf=\\\"!!f.smscUsername.errors.required\\\">Smsc username is required</div>\\r\\n              <div *ngIf=\\\"!!f.smscUsername.errors.maxlength\\\" class=\\\"invalid-text\\\">SMSC Username must not exceed 25\\r\\n                characters</div>\\r\\n                <div *ngIf=\\\"!f.smscUsername.errors.required && !!f.smscUsername.errors.nfSpecialCharacters\\\" >Smsc username Must be valid</div>\\r\\n\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-4\\\">\\r\\n            <label class=\\\"form-input-label\\\">SMSC Password</label>\\r\\n            <input nfSpecialCharacters   type=\\\"text\\\" pInputText [(ngModel)]=\\\"smscModel.password\\\" formControlName=\\\"smscPassword\\\" />\\r\\n            <div *ngIf=\\\"submitted && !!f.smscPassword.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n              <div *ngIf=\\\"!!f.smscPassword.errors.required\\\">Smsc password is required</div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col-3\\\">\\r\\n            <div class=\\\"form-input form-selectbox \\\">\\r\\n              <label class=\\\"form-input-label\\\"> APP profile</label>\\r\\n              <p-dropdown [options]=\\\"profileItems\\\" formControlName=\\\"appProfile\\\" placeholder=\\\"\\\"\\r\\n                [(ngModel)]=\\\"smscModel.appProfileId\\\" filter=\\\"true\\\">\\r\\n\\r\\n                <ng-template let-profile pTemplate=\\\"item\\\">\\r\\n                  <div class=\\\"ui-helper-clearfix\\\" style=\\\"position: relative;height: 25px;\\\">\\r\\n\\r\\n                    <div style=\\\"font-size:14px;float:right;margin-top:4px\\\">{{profile.label}}</div>\\r\\n                  </div>\\r\\n                </ng-template>\\r\\n              </p-dropdown>\\r\\n              <div *ngIf=\\\"submitted && !!f.appProfile.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                <div *ngIf=\\\"!!f.appProfile.errors.required\\\">select App profile </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row mt-5 pt-3 pb-2\\\">\\r\\n        <div class=\\\"col-12 justify-content-center text-right\\\">\\r\\n          <button (click)=\\\"save()\\\" class=\\\"button button-green mr-2 \\\">\\r\\n            Save\\r\\n          </button>\\r\\n          <button (click)=\\\"cancel()\\\" class=\\\"button button-black mr-2\\\">\\r\\n            Cancel\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NdpMessageService } from 'src/app/shared/services/ndp-message.service';\r\nimport { Location } from '@angular/common';\r\nimport { SmscAccountModel } from 'src/app/shared/models/smsc-account-model';\r\nimport { SmscService } from '../smsc.service';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport { AppProfileModel } from 'src/app/shared/models/app-profile-model';\r\nimport { AppProfilesService } from 'src/app/app-profiles/app-profiles.service';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\n\r\n@Component({\r\n  selector: 'ndp-add-edit-group',\r\n  templateUrl: './add-edit-smsc.component.html',\r\n  styleUrls: ['./add-edit-smsc.component.css']\r\n})\r\nexport class AddEditSmscComponent implements OnInit {\r\n\r\n  allAppProfiles: Array<AppProfileModel>;\r\n  profileItems = new Array<SelectItem>();\r\n  [x: string]: any;\r\n  public smscModel: SmscAccountModel;\r\n  public updateResponse: number;\r\n  public isCreate: boolean = true;\r\n  mainForm: FormGroup;\r\n  submitted = false;\r\n\r\n\r\n\r\n  constructor(private smscService: SmscService,\r\n    private appProfilesService: AppProfilesService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private formBuilder: FormBuilder) { }\r\n\r\n  get f() { return this.mainForm.controls; }\r\n  ngOnInit() {\r\n\r\n    this.appProfilesService.list().subscribe(res => {\r\n      \r\n      console.log(\"App profile => \", this.appProfilesList);\r\n      this.allAppProfiles = res.responsePayload;\r\n      this.profileItems.push({label: \"select app profile \", value: -1});\r\n      this.allAppProfiles.forEach(profile => {\r\n        this.profileItems.push({ label: profile.appProfileName, value: profile.appProfileId });\r\n        //debugger;\r\n      })\r\n\r\n      this.profileItems = JSON.parse(JSON.stringify(this.profileItems));\r\n\r\n    })\r\n\r\n\r\n\r\n\r\n\r\n    this.mainForm = this.formBuilder.group({\r\n      smscName: ['', [Validators.required,Validators.maxLength(25)]],\r\n      smscIp: ['', Validators.required],\r\n      smscPort: ['', [Validators.required, Validators.min(0)]],\r\n      smscUsername: ['', [Validators.required,Validators.maxLength(25)]],\r\n      smscPassword: ['', Validators.required],\r\n      appProfile: ['', Validators.required]\r\n    });\r\n\r\n    if (this.route.snapshot.routeConfig.path == \"smsc/get/:id\") {\r\n      const id = +this.route.snapshot.paramMap.get('id');\r\n      this.get(id);\r\n      this.isCreate = false;\r\n    } else {\r\n      this.smscModel = new SmscAccountModel;\r\n    }\r\n  }\r\n\r\n  get(id: number): void {\r\n    this.smscService.get(id)\r\n      .subscribe(response => this.smscModel = response.responsePayload);\r\n  }\r\n\r\n  save(): void {\r\n    this.smscService.scrollIfFormHasErrors(this.mainForm);\r\n    this.submitted = true;\r\n    if (this.mainForm.invalid) {\r\n      return;\r\n    }\r\n    if (!this.isCreate) {\r\n      this.update();\r\n    } else {\r\n      this.create();\r\n    }\r\n  }\r\n\r\n  create(): void {\r\n    this.smscService.create(this.smscModel)\r\n      .subscribe(response => {\r\n        if (response.status === 0) {\r\n          this.router.navigate([\"smsc\"]);\r\n        }\r\n      });\r\n  }\r\n\r\n  update(): void {\r\n    this.smscService.update(this.smscModel)\r\n      .subscribe(response => {\r\n        if (response.status === 0) {\r\n          this.router.navigate([\"smsc\"]);\r\n        }\r\n      }\r\n      );\r\n  }\r\n\r\n  cancel() {\r\n    this.location.back();\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Ntc2Mvc21zYy1saXN0L3Ntc2MtbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div (click)=\\\"hideDropDown()\\\" class=\\\"page-content groups\\\">\\r\\n    <div class=\\\"groups\\\">\\r\\n        <div class=\\\"row no-gutters\\\" onclick=\\\"closeNav()\\\">\\r\\n            <div class=\\\"p-col-5\\\">\\r\\n                <div class=\\\"page-title\\\">\\r\\n                    SMSC Accounts\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"p-col-7 col-lg-12 text-right\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"p-col-8\\\">\\r\\n                        <div class=\\\"search-input\\\">\\r\\n                            <input [(ngModel)]=\\\"filter\\\" type=\\\"text\\\" class=\\\"\\\" placeholder=\\\"Search By SMSC Name\\\">\\r\\n                            <i class=\\\"icon-search icon\\\"></i>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"p-col-4\\\">\\r\\n                        <button type=\\\"button\\\" ndpAuthorize [targetUrl]=\\\"authorizationUrl+ defines.CREATE\\\"\\r\\n                            (successHandler)=\\\"create()\\\" label=\\\"Create Group\\\" class=\\\"button button-green\\\">Create SMSC\\r\\n                            Account</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"smscList\\\">\\r\\n            <div *ngIf=\\\"setFilteredSmscList(smscList | smscNameFilter: filter)\\\"></div>\\r\\n            <div\\r\\n                *ngFor=\\\"let smsc of filteredSmscList | orderBy: key  | paginate: { itemsPerPage: perPage, currentPage: p }\\\">\\r\\n                <div class=\\\"section row no-gutters\\\">\\r\\n                    <div class=\\\"p-col-3 heading-6 title-robotomedium pt-2\\\">{{smsc.name}}</div>\\r\\n                    <div class=\\\"p-col-3\\\">{{smsc.ip}}</div>\\r\\n                    <div class=\\\"col text-right my-auto\\\">\\r\\n                        <a (click)=\\\"dropDownOpen(smsc)\\\" class=\\\"campaigns-item-actions-link\\\">\\r\\n                            <i class=\\\"icon-dropdown-dots icon icon-lg icon-gray\\\"></i>\\r\\n                        </a>\\r\\n                        <div *ngIf=\\\"(selectedId === smsc.accountId)\\\" [ngClass]=\\\"{'hide':!dropDown}\\\"\\r\\n                            class=\\\"dropdown animated faster fadeInUp\\\">\\r\\n                            <ul class=\\\"list\\\">\\r\\n                                <li ndpAuthorize [targetUrl]=\\\"authorizationUrl+ defines.UPDATE\\\"\\r\\n                                    [targetId]=\\\"smsc.accountId\\\" (successHandler)=\\\"update()\\\"><span\\r\\n                                        class=\\\"icon icon-settings\\\"></span>Update</li>\\r\\n                                <li ndpAuthorize [targetUrl]=\\\"authorizationUrl+ defines.DELETE\\\"\\r\\n                                    [targetId]=\\\"smsc.accountId\\\" (successHandler)=\\\"delete(smsc)\\\"><span\\r\\n                                        class=\\\"icon icon-sms\\\"></span>Delete</li>\\r\\n                            </ul>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"filteredSmscList.length == 0 && inialized\\\">\\r\\n                <div class=\\\"row mt-4 animated fadeIn fast\\\">\\r\\n                    <div class=\\\"col-12 mt-4 text-center\\\">\\r\\n                        <div class=\\\"col-12 mt-4 fas fa-user-slash fa-7x faded-grey\\\"></div>\\r\\n                        <div class=\\\"col-12 mt-4 page-title faded-grey\\\"><b>No Smsc Accounts Found</b></div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"ngx-pagination\\\">\\r\\n            <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { NdpMessageService } from 'src/app/shared/services/ndp-message.service';\r\nimport { Router } from '@angular/router';\r\nimport { SmscAccountModel } from 'src/app/shared/models/smsc-account-model';\r\nimport { SmscService } from '../smsc.service';\r\nimport { Defines } from 'src/app/shared/static/defines';\r\n\r\n@Component({\r\n  selector: 'ndp-smsc-list',\r\n  templateUrl: './smsc-list.component.html',\r\n  styleUrls: ['./smsc-list.component.css']\r\n})\r\nexport class SmscListComponent implements OnInit {\r\n  smscList: SmscAccountModel[];\r\n  filteredSmscList = null;\r\n  selectedId: number;\r\n  inialized = false;\r\n  dropDown: boolean;\r\n  dropDownClick: number;\r\n  dropDownId: number;\r\n  /*=============================*/\r\n  /* Pagination Filtering & Sorting*/\r\n  p = 1;\r\n  perPage = 4;\r\n  /*FILTERING*/\r\n  filter: string;\r\n  /*=============================*/\r\n\r\n  /*SORTING*/\r\n  key = 'name';\r\n  reverse = false;\r\n\r\n  //Authorization Vars\r\n  authorizationUrl: string;\r\n  defines = Defines.API_CRUD;\r\n\r\n  constructor(private messageService: NdpMessageService,\r\n    private smscService: SmscService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.authorizationUrl = this.smscService.authorizationUrl;\r\n    this.smscList = new Array<SmscAccountModel>();\r\n    this.filteredSmscList = this.smscList;\r\n    this.list();\r\n  }\r\n\r\n  dropDownOpen(smsc: SmscAccountModel) {\r\n    this.selectedId = smsc.accountId;\r\n    this.dropDownId = this.selectedId;\r\n    this.dropDownClick = 0;\r\n    this.dropDown = true;\r\n  }\r\n  dropDownClose() {\r\n    this.selectedId = null;\r\n    this.dropDown = false;\r\n  }\r\n\r\n  hideDropDown() {\r\n    this.dropDownClick++;\r\n    if (this.dropDown && this.dropDownClick > 1) {\r\n      this.dropDown = false;\r\n      this.dropDownId = null;\r\n    }\r\n  }\r\n\r\n  list(): void {\r\n    this.smscService.list().subscribe(response => {\r\n      this.smscList = response.responsePayload;\r\n      this.inialized = true;\r\n      console.log('Retrieved Accounts ', response.responsePayload);\r\n    });\r\n  }\r\n\r\n  update() {\r\n    this.router.navigateByUrl('/smsc/get/' + this.selectedId);\r\n  }\r\n\r\n  create() {\r\n    this.router.navigateByUrl('/smsc/create');\r\n  }\r\n\r\n  delete(smsc: SmscAccountModel): void {\r\n    this.smscService.delete(smsc.accountId).subscribe(response => {\r\n      this.smscList = this.smscList.filter(x => x.accountId !== smsc.accountId);\r\n      this.filteredSmscList = this.filteredSmscList.filter(x => x.accountId !== smsc.accountId);\r\n    });\r\n    this.dropDownClose();\r\n  }\r\n  setFilteredSmscList(filtered: SmscAccountModel[]) {\r\n    this.filteredSmscList = filtered;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AddEditSmscComponent } from './add-edit-smsc/add-edit-smsc.component';\r\nimport { SmscListComponent } from './smsc-list/smsc-list.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule  } from '@angular/forms';\r\nimport { MatRadioModule } from '@angular/material'\r\nimport { FileDropModule } from 'ngx-file-drop';\r\nimport { TabViewModule } from 'primeng/tabview';\r\nimport { SmscFilterPipe } from '../shared/Pipes/smsc-filter.pipe';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { OrderModule } from 'ngx-order-pipe'; \r\nimport {DropdownModule} from 'primeng/dropdown';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [AddEditSmscComponent, SmscListComponent, SmscFilterPipe],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    FileDropModule,\r\n    TabViewModule,\r\n    MatRadioModule,\r\n    NgxPaginationModule,\r\n    ReactiveFormsModule,\r\n    OrderModule,\r\n    DropdownModule\r\n  ],\r\n  exports: [\r\n    AddEditSmscComponent,\r\n    SmscListComponent\r\n  ]\r\n})\r\nexport class SmscModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { BaseService } from '../shared/services/base-service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { ApiResponse } from '../shared/models/api-response';\r\nimport { Defines } from '../shared/static/defines';\r\nimport { ApiRequest } from '../shared/models/api-request';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { SmscAccountModel } from '../shared/models/smsc-account-model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SmscService extends BaseService {\r\n    constructor(private client: HttpClient) {\r\n        super(client);\r\n    }\r\n    initAuthorizationUrl() {\r\n        this.authorizationUrl += this.secureApi + Defines.API_ENDPOINTS.SMSC;\r\n    }\r\n    public create(model: SmscAccountModel): Observable<ApiResponse<number>> {\r\n        let apiUrl = this.backendUrl + this.secureApi +\r\n            Defines.API_ENDPOINTS.SMSC + Defines.API_CRUD.CREATE;\r\n        console.log(\"model before create is => \", model);\r\n        let obs: Observable<any> = this.http.post<ApiResponse<number>>\r\n            (apiUrl, new ApiRequest(model, \"\"), this.httpOptions).pipe(\r\n                tap(group => console.log('create smsc: ' + group)),\r\n                catchError(this.handleError<any>('Error'))\r\n            );\r\n        return obs;\r\n    }\r\n\r\n    public update(model: SmscAccountModel): Observable<ApiResponse<number>> {\r\n        let apiUrl = this.backendUrl + this.secureApi +\r\n            Defines.API_ENDPOINTS.SMSC + Defines.API_CRUD.UPDATE;\r\n        console.log(\"model before update is => \", model);\r\n        let obs: Observable<any> = this.http.post<ApiResponse<number>>\r\n            (apiUrl, new ApiRequest(model, \"\"), this.httpOptions).pipe(\r\n                tap(group => console.log('update smsc: ' + group)),\r\n                catchError(this.handleError<any>('Error'))\r\n            );\r\n        return obs;\r\n    }\r\n\r\n\r\n    public get(id: number): Observable<ApiResponse<SmscAccountModel>> {\r\n        let apiUrl = this.backendUrl + this.secureApi +\r\n            Defines.API_ENDPOINTS.SMSC + Defines.API_CRUD.GET;\r\n        let obs: Observable<any> = this.http.post<ApiResponse<SmscAccountModel>>\r\n            (apiUrl, new ApiRequest(id, \"\"), this.httpOptions).pipe(\r\n                tap(group => console.log('get smsc by id: ' + group)),\r\n                catchError(this.handleError<any>('Error'))\r\n            );\r\n        return obs;\r\n    }\r\n\r\n    public delete(id: number): Observable<ApiResponse<number>> {\r\n        let apiUrl = this.backendUrl + this.secureApi +\r\n            Defines.API_ENDPOINTS.SMSC + Defines.API_CRUD.DELETE;\r\n        let obs: Observable<any> = this.http.post<ApiResponse<number>>\r\n            (apiUrl, new ApiRequest(id, \"\"), this.httpOptions).pipe(\r\n                tap(smsc => console.log('delete smsc by id: ' + smsc)),\r\n                catchError(this.handleError<any>('Error'))\r\n            );\r\n        return obs;\r\n    }\r\n\r\n    public list(): Observable<ApiResponse<Array<SmscAccountModel>>> {\r\n        let apiUrl = this.backendUrl + this.secureApi + Defines.API_ENDPOINTS.SMSC + Defines.API_CRUD.LIST;\r\n        let obs: Observable<any> = this.http.post<ApiResponse<Array<SmscAccountModel>>>\r\n            (apiUrl, new ApiRequest(null, \"\"), this.httpOptions).pipe(\r\n                tap(list_ => console.log('get List smsc: ' + list_)),\r\n                catchError(this.handleError<any>('Error'))\r\n            );\r\n        return obs;\r\n    }\r\n\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n\r\n            // TODO: send the error to remote logging infrastructure\r\n            console.error(error); // log to console instead\r\n\r\n            // TODO: better job of transforming error for user consumption\r\n            console.log(`${operation} failed: ${error.message}`);\r\n\r\n            // Let the app keep running by returning an empty result.\r\n            return of(result as T);\r\n        };\r\n\r\n    }\r\n\r\n}\r\n","export const environment = {\r\n  production: false,\r\n  backendUrl: \"http://10.0.20.19:8080/B2bAdmin\",\r\n  backendContext:\"/B2bAdmin\",\r\n  secureApiUrl: \"/b2bApi\",\r\n  nonSecureApiUrl:\"\",\r\n  campaignAdminId:6, campaignManagerId:5, campaignViewerId:7\r\n};\r\n","export const environment = {\r\n  production: true,\r\n  backendUrl: \"http://10.208.9.81:8085/ndpadmin\",\r\n  backendContext:\"/ndpadmin\",\r\n  secureApiUrl: \"/b2bApi\",\r\n  nonSecureApiUrl:\"\",\r\n  campaignAdminId:6, campaignManagerId:5, campaignViewerId:7\r\n\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}