{"version":3,"file":"src_app_validation_validation_module_ts.js","mappings":"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","names":["i0","ColorfulHeaderComponent","constructor","validationService","ngOnInit","this","updateSubscription","updateBalance","subscribe","val","console","log","tabs","count","ngOnDestroy","a","_a","unsubscribe","selectors","ValidationComponent","headerService","privilegesService","TableModel","fieldId","title","classStyle","ratePlan","dwhStatus","opening","closing","variance","inSubs","outSubs","fieldTitle","show","type","data","optionLabel","placeholder","enableUpdatePatch","checkPrivileges","PRIVILEGES","epochDate","localStorage","getItem","retrieveTransactionTypes","resp","extraCols","payload","transactionModelList","getvalidationList","tableData","list","map","item","fillTable","DateSubscriber","DateSubject","date","originalData","JSON","parse","stringify","validationTable","cols","headers","extracols","pagination","name","lockFlag","editFlag","deleteFlag","hasSubmit","globalFilterFields","routes","path","redirectTo","pathMatch","component","Date","calendarDate","showBalance","getValidationBalance","retrieveBalance","icon","ValidationLayoutComponent","ValidationRoutingModule","RouterModule","ValidationModule","CommonModule","SharedModule"],"sourceRoot":"webpack:///","sources":["./src/app/shared/components/colorful-header/colorful-header.component.html","./src/app/shared/components/colorful-header/colorful-header.component.ts","./src/app/validation/components/validation/validation.component.ts","./src/app/validation/components/validation/validation.component.html","./src/app/validation/validation-routing.module.ts","./src/app/validation/layout/validation-layout/validation-layout.component.ts","./src/app/validation/layout/validation-layout/validation-layout.component.html","./src/app/validation/validation.module.ts"],"sourcesContent":["<div class=\"page-header\">\r\n  <div class=\"page-title\">\r\n    <span class=\"{{ icon }} head-icon\"></span>\r\n    <span class=\"head-font\"> {{ title }}</span>\r\n  </div>\r\n  <div class=\"page-action\" *ngIf=\"showBalance\">\r\n    <div\r\n      class=\"tab-style {{ tab.classStyle }}\"\r\n      *ngFor=\"let tab of tabs\"\r\n      [ngClass]=\"tab.count == 0 ? 'grayBG' : ''\"\r\n    >\r\n      <i class=\"{{ tab.icon }}\"></i>\r\n      <span class=\"info\">\r\n        <span>{{ tab.name }}</span>\r\n        <span style=\"font-weight: 600\">{{ tab.count | number: \"2.\" }}</span>\r\n      </span>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { ValidationService } from 'src/app/validation/services/validation.service';\r\n\r\n@Component({\r\n  selector: 'app-colorful-header',\r\n  templateUrl: './colorful-header.component.html',\r\n  styleUrls: ['./colorful-header.component.scss'],\r\n})\r\nexport class ColorfulHeaderComponent implements OnInit, OnDestroy {\r\n  @Input('title') title!: string;\r\n  @Input('icon') icon!: string;\r\n  @Input('tabs') tabs!: any[];\r\n  @Input('showBalance') showBalance!: boolean;\r\n  updateSubscription!: Subscription;\r\n  constructor(private validationService: ValidationService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.updateSubscription = this.validationService.updateBalance.subscribe(\r\n      (val) => {\r\n        console.log('value', val);\r\n        this.tabs[1].count = val;\r\n        this.tabs[2].count=this.tabs[1].count-this.tabs[0].count;\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.updateSubscription?.unsubscribe();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { HeaderService } from 'src/app/core/services/header-service/header.service';\r\nimport { TableModel } from 'src/app/shared/models/table.model';\r\nimport { PrivilegesService } from 'src/app/shared/services/privileges-service/privileges.service';\r\nimport { PRIVILEGES } from 'src/app/shared/statics/privileges';\r\nimport { ValidationService } from '../../services/validation.service';\r\n\r\n@Component({\r\n  selector: 'app-validation',\r\n  templateUrl: './validation.component.html',\r\n  styleUrls: ['./validation.component.scss'],\r\n})\r\nexport class ValidationComponent implements OnInit {\r\n  validationTable = new TableModel();\r\n  DateSubscriber!: Subscription;\r\n  epochDate!: any;\r\n  headers = [\r\n    { fieldId: 'ratePlan', title: 'Rate Plan' },\r\n    { fieldId: 'dwhStatus', title: 'Status' },\r\n    { fieldId: 'opening', title: 'Opening', classStyle: 'green tab-style' },\r\n    { fieldId: 'closing', title: 'Closing', classStyle: 'blue tab-style' },\r\n    { fieldId: 'variance', title: 'Variance', classStyle: 'red tab-style' },\r\n  ];\r\n  tableData = [\r\n    {\r\n      ratePlan: 'rateplan',\r\n      dwhStatus: 'valid',\r\n      opening: 155,\r\n      closing: 55,\r\n      variance: 10,\r\n      inSubs: 7,\r\n      outSubs: 10,\r\n    },\r\n  ];\r\n  extraCols = [\r\n    {\r\n      fieldId: 'inSubs',\r\n      title: 'Export as Excel',\r\n      fieldTitle: 'In_Subs',\r\n      show: true,\r\n      type: 'dropdown',\r\n      data: [],\r\n      optionLabel: '',\r\n      placeholder: 'In_Subs',\r\n    },\r\n    {\r\n      fieldId: 'outSubs',\r\n      fieldTitle: 'Out_Subs',\r\n      title: 'search',\r\n      type: 'dropdown',\r\n      data: [],\r\n      optionLabel: '',\r\n      show: true,\r\n      placeholder: 'Out_Subs',\r\n    },\r\n  ];\r\n  enableUpdatePatch!: boolean;\r\n  originalData!: any[];\r\n  constructor(\r\n    private validationService: ValidationService,\r\n    private headerService: HeaderService,\r\n    private privilegesService: PrivilegesService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.enableUpdatePatch = this.privilegesService.checkPrivileges(\r\n      PRIVILEGES.VALIDATION.UPDATE\r\n    );\r\n    this.epochDate = localStorage.getItem('date');\r\n    this.validationService.retrieveTransactionTypes().subscribe((resp) => {\r\n      this.extraCols[0].data = resp.payload.transactionModelList;\r\n      this.extraCols[0].optionLabel = this.extraCols[1].optionLabel =\r\n        'trxTypeName';\r\n      this.extraCols[1].data = resp.payload.transactionModelList;\r\n    });\r\n    this.validationService\r\n      .getvalidationList(this.epochDate)\r\n      .subscribe((resp) => {\r\n        this.tableData = resp.payload.list;\r\n        this.tableData.map((item) => {\r\n          item.variance = item.closing - item.opening;\r\n        });\r\n        this.fillTable(this.tableData);\r\n      });\r\n    console.log(this.epochDate);\r\n    this.DateSubscriber = this.headerService.DateSubject.subscribe((date) => {\r\n      this.epochDate = date;\r\n      this.validationService\r\n        .getvalidationList(this.epochDate)\r\n        .subscribe((resp) => {\r\n          this.tableData = resp.payload.list;\r\n          this.tableData.map((item) => {\r\n            item.variance = item.closing - item.opening;\r\n          });\r\n          console.log(this.tableData);\r\n          this.fillTable(this.tableData);\r\n        });\r\n    });\r\n  }\r\n\r\n  fillTable(tableData: any) {\r\n    this.originalData = JSON.parse(JSON.stringify(tableData));\r\n    this.validationTable.cols = this.headers;\r\n    this.validationTable.extracols = this.extraCols;\r\n    this.validationTable.pagination = true;\r\n    this.validationTable.name = 'validation';\r\n    this.validationTable.data = tableData;\r\n    this.validationTable.lockFlag = false;\r\n    this.validationTable.editFlag = false;\r\n    this.validationTable.deleteFlag = false;\r\n    this.validationTable.hasSubmit = true;\r\n    this.validationTable.globalFilterFields = [\r\n      'ratePlan',\r\n      'dwhStatus',\r\n      'opening',\r\n      'closing',\r\n      'variance',\r\n    ];\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.DateSubscriber.unsubscribe();\r\n  }\r\n}\r\n","<app-table [table]=\"validationTable\" [enableUpdatePatch]=\"enableUpdatePatch\" [originalData]=\"originalData\"></app-table>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ValidationComponent } from './components/validation/validation.component';\r\nimport { ValidationLayoutComponent } from './layout/validation-layout/validation-layout.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n  { path: 'list', component:ValidationLayoutComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ValidationRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HeaderService } from 'src/app/core/services/header-service/header.service';\r\nimport { Tab } from 'src/app/shared/models/tab.model';\r\nimport { PrivilegesService } from 'src/app/shared/services/privileges-service/privileges.service';\r\nimport { PRIVILEGES } from 'src/app/shared/statics/privileges';\r\nimport { ValidationService } from '../../services/validation.service';\r\n\r\n@Component({\r\n  selector: 'app-validation-layout',\r\n  templateUrl: './validation-layout.component.html',\r\n  styleUrls: ['./validation-layout.component.scss'],\r\n})\r\nexport class ValidationLayoutComponent implements OnInit {\r\n  tabs!: Tab[];\r\n  epochDate: any = Date.parse(this.headerService.calendarDate);\r\n  showBalance!: boolean;\r\n\r\n  constructor(\r\n    private validationService: ValidationService,\r\n    private headerService: HeaderService,\r\n    private privilegesService: PrivilegesService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.showBalance = this.privilegesService.checkPrivileges(\r\n      PRIVILEGES.VALIDATION.BALANCE\r\n    );\r\n    this.epochDate = localStorage.getItem('date');\r\n\r\n    this.getValidationBalance();\r\n    this.headerService.DateSubject.subscribe((date) => {\r\n      this.epochDate = date;\r\n      this.getValidationBalance();\r\n    });\r\n  }\r\n  getValidationBalance() {\r\n    this.validationService.retrieveBalance(this.epochDate).subscribe((resp) => {\r\n      console.log(resp.payload);\r\n      this.tabs = [\r\n        {\r\n          name: 'Opening',\r\n          count: resp.payload.opening,\r\n          icon: 'icon-timer',\r\n          classStyle: 'green',\r\n        },\r\n        {\r\n          name: 'Closing',\r\n          count: resp.payload.closing,\r\n          icon: 'icon-timer-off',\r\n          classStyle: 'blue',\r\n        },\r\n        {\r\n          name: 'Total Variance',\r\n          count: resp.payload.variance,\r\n          icon: 'icon-chart',\r\n          classStyle: 'red',\r\n        },\r\n      ];\r\n    });\r\n  }\r\n}\r\n","<div class=\"layout-margin\">\r\n  <app-colorful-header\r\n    [title]=\"'Validation Engine'\"\r\n    [tabs]=\"tabs\"\r\n    [icon]=\"'icon-chart'\"\r\n    [showBalance]=\"showBalance\"\r\n  ></app-colorful-header>\r\n\r\n  <app-validation ></app-validation>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ValidationRoutingModule } from './validation-routing.module';\r\nimport { ValidationComponent } from './components/validation/validation.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { ValidationLayoutComponent } from './layout/validation-layout/validation-layout.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ValidationComponent,\r\n    ValidationLayoutComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ValidationRoutingModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class ValidationModule { }\r\n"]}